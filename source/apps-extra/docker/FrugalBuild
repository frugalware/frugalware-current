# Compiling Time: 0.33 SBU
# Maintainer: DeX77 <dex+fw@dragonslave.de>

pkgname=docker
pkgver=28.1.1
_gitcommit=e953d76
pkgrel=1
pkgdesc="Docker - the Linux container runtime"
archs=('x86_64')
groups=('apps-extra')
backup=('etc/sysconfig/dockerd')
depends=('bridge-utils' 'iproute2' 'sqlite3' 'lvm2' 'btrfs-progs>=4.10-2')
makedepends=('go>=1.7' 'go-md2man' 'systemd-devel')
rodepends=('containerd' 'runc' 'tini')
_F_github_author="docker"
_F_github_name="cli"
_F_github_tag_v="y"
_F_github_grepv="beta\|-rc\|20.\|23.\|25."
Finclude github
_F_cd_path="$_F_github_name-$pkgver"
source+=(https://github.com/moby/moby/archive/refs/tags/v$pkgver.zip \
	overlay.conf \
	docker.conf)
sha1sums=('173f82e18a834c9c1079a44c19a5964e4cc812aa' \
          'f78cdbe6c0864fcf780d5a5db4b471afa23b2b24' \
          '2116c00af38a39572e6cd0e6024844b162cf90e8' \
          '36269e4f788302439cd6bc672a83f594348660db')

provides=('lxc-docker' 'libnetwork')
replaces=('lxc-docker' 'libnetwork')
conflicts=('lxc-docker' 'libnetwork')

build() {
	Fcd
	Fpatchall
	export CGO_CPPFLAGS="${CPPFLAGS}"
	export CGO_CFLAGS="${CFLAGS}"
	export CGO_CXXFLAGS="${CXXFLAGS}"
	export CGO_LDFLAGS="${LDFLAGS}"
	export LDFLAGS=''
	export GOFLAGS='-buildmode=pie -trimpath -mod=readonly -modcacherw -ldflags=-linkmode=external'
	export GO111MODULE=off
	export DISABLE_WARN_OUTSIDE_CONTAINER=1

	export GOPATH="$Fsrcdir/gopath"
	export PATH="$PATH:$GOPATH/bin"

	# Cleanup
	Fexec rm -rf $GOPATH || Fdie
	Fexec mkdir -p $GOPATH/src/github.com/docker || Fdie

	# CLI
	Fexec mv $Fsrcdir/$_F_github_name-$pkgver $Fsrcdir/gopath/src/github.com/docker/cli || Fdie
	Fexec cd $GOPATH/src/github.com/docker/cli || Fdie
	Fexec make VERSION=$pkgver dynbinary || Fdie
	Fexec make manpages || Fdie

	# Daemon
	Fexec mv $Fsrcdir/moby-$pkgver $Fsrcdir/gopath/src/github.com/docker/docker || Fdie
	Fexec cd $GOPATH/src/github.com/docker/docker || Fdie
	VERSION=$pkgver DOCKER_BUILDTAGS='seccomp journald' DOCKER_GITCOMMIT=$_gitcommit ./hack/make.sh dynbinary || Fdie

	Fexec cd $Fsrcdir
	for man in $(find gopath/src/github.com/docker/cli/man/man* -type f)
	do
		Fman $man || Fdie
	done

	# cli
	Fexe gopath/src/github.com/docker/cli/build/docker-linux-amd64 usr/bin/docker

	# daemon
	Fexe gopath/src/github.com/docker/docker/bundles/dynbinary-daemon/dockerd usr/bin/dockerd

	# docker-proxy
	Fexe gopath/src/github.com/docker/docker/bundles/dynbinary-daemon/docker-proxy usr/bin/docker-proxy

	# systemd
	Finstall 644 gopath/src/github.com/docker/docker/contrib/init/systemd/docker.service usr/lib/systemd/system/docker.service
	Finstall 644 gopath/src/github.com/docker/docker/contrib/init/systemd/docker.socket usr/lib/systemd/system/docker.socket

	# bash completion
	Finstall 644 gopath/src/github.com/docker/cli/contrib/completion/bash/docker \
		usr/share/bash-completion/completions/docker
	# zsh
        Finstall 644 gopath/src/github.com/docker/cli/contrib/completion/zsh/_docker \
		usr/share/zsh/site-functions/_docker

	# fish
	Finstall 644 gopath/src/github.com/docker/cli/contrib/completion/fish/docker.fish \
		usr/share/fish/vendor_completions.d/docker.fish

	Fmkdir usr/share/doc/docker-${pkgver}

	# Create group using sysuser.d
	Fmkdir usr/lib/sysusers.d/
	Ffile /usr/lib/sysusers.d/$pkgname.conf

	# Fix warning
	Ffile /etc/modprobe.d/overlay.conf

}

# optimization OK
