diff '--color=auto' -Naur cx_freeze-7.2.5/cx_Freeze/command/bdist_msi.py cx_freeze-7.2.5.new/cx_Freeze/command/bdist_msi.py
--- cx_freeze-7.2.5/cx_Freeze/command/bdist_msi.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/cx_Freeze/command/bdist_msi.py	2024-11-17 13:44:12.349674766 +0100
@@ -9,7 +9,7 @@
 import shutil
 import warnings
 from sysconfig import get_platform
-from typing import ClassVar, ContextManager
+from typing import ClassVar
 
 from packaging.version import Version
 from setuptools import Command
@@ -22,7 +22,7 @@
 if IS_MINGW or IS_WINDOWS:
 
     @contextlib.contextmanager
-    def suppress_known_deprecation() -> ContextManager:
+    def suppress_known_deprecation() -> contextlib.AbstractContextManager:
         with warnings.catch_warnings():
             warnings.filterwarnings("ignore", "'msilib' is deprecated")
             yield
diff '--color=auto' -Naur cx_freeze-7.2.5/cx_Freeze/command/install.py cx_freeze-7.2.5.new/cx_Freeze/command/install.py
--- cx_freeze-7.2.5/cx_Freeze/command/install.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/cx_Freeze/command/install.py	2024-11-17 13:44:12.349674766 +0100
@@ -6,7 +6,7 @@
 import os
 import sys
 import warnings
-from typing import ClassVar, ContextManager
+from typing import ClassVar
 
 from setuptools.command.install import install as _install
 
@@ -14,7 +14,7 @@
 
 
 @contextlib.contextmanager
-def suppress_known_deprecation() -> ContextManager:
+def suppress_known_deprecation() -> contextlib.AbstractContextManager:
     with warnings.catch_warnings():
         warnings.filterwarnings("ignore", "setup.py install is deprecated")
         yield
diff '--color=auto' -Naur cx_freeze-7.2.5/cx_Freeze/freezer.py cx_freeze-7.2.5.new/cx_Freeze/freezer.py
--- cx_freeze-7.2.5/cx_Freeze/freezer.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/cx_Freeze/freezer.py	2024-11-17 13:44:12.349674766 +0100
@@ -256,10 +256,7 @@
         """
         real_source = source.resolve()
         if source.is_symlink():
-            try:
-                symlink = source.readlink()
-            except AttributeError:
-                symlink = Path(os.readlink(source))  # python 3.8
+            symlink = source.readlink()
             real_target = target.with_name(symlink.name)
             if self.silent < 1:
                 print(f"[delay] linking {target} -> {symlink}")
diff '--color=auto' -Naur cx_freeze-7.2.5/cx_Freeze/hooks/__init__.py cx_freeze-7.2.5.new/cx_Freeze/hooks/__init__.py
--- cx_freeze-7.2.5/cx_Freeze/hooks/__init__.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/cx_Freeze/hooks/__init__.py	2024-11-17 13:44:12.349674766 +0100
@@ -143,8 +143,8 @@
 
 
 def load__ctypes(finder: ModuleFinder, module: Module) -> None:
-    """In Windows, the _ctypes module in Python 3.8+ requires an additional
-    libffi dll to be present in the build directory.
+    """The _ctypes module requires an additional dependency to be present
+    in the build directory.
     """
     if IS_WINDOWS:
         dll_pattern = "libffi-*.dll"
@@ -460,15 +460,17 @@
 def load_pydantic(finder: ModuleFinder, module: Module) -> None:
     """The pydantic package is compiled by Cython (the imports are hidden)."""
     finder.include_module("colorsys")
-    finder.include_module("dataclasses")  # support in v 1.7+
     finder.include_module("datetime")
     finder.include_module("decimal")
     finder.include_module("functools")
     finder.include_module("ipaddress")
     finder.include_package("json")
     finder.include_module("pathlib")
-    finder.include_module("typing_extensions")  # support in v 1.8
     finder.include_module("uuid")
+    with suppress(ImportError):
+        finder.include_module("dataclasses")  # support in v 1.7+
+    with suppress(ImportError):
+        finder.include_module("typing_extensions")  # support in v 1.8+
 
 
 def load_pygments(finder: ModuleFinder, module: Module) -> None:
@@ -739,11 +741,8 @@
 
 
 def missing_backports_zoneinfo(finder: ModuleFinder, caller: Module) -> None:
-    """The backports.zoneinfo module should be a drop-in replacement for the
-    Python 3.9 standard library module zoneinfo.
-    """
-    if sys.version_info >= (3, 9):
-        caller.ignore_names.add("backports.zoneinfo")
+    """The backports.zoneinfo module can be ignored in Python 3.9+."""
+    caller.ignore_names.add("backports.zoneinfo")
 
 
 def missing_gdk(finder: ModuleFinder, caller: Module) -> None:
@@ -793,9 +792,3 @@
     """The winreg module is present on Windows only."""
     if not IS_WINDOWS:
         caller.ignore_names.add("winreg")
-
-
-def missing_zoneinfo(finder: ModuleFinder, caller: Module) -> None:
-    """The zoneinfo module is present in Python 3.9+ standard library."""
-    if sys.version_info < (3, 9):
-        caller.ignore_names.add("zoneinfo")
diff '--color=auto' -Naur cx_freeze-7.2.5/cx_Freeze/hooks/_qthooks.py cx_freeze-7.2.5.new/cx_Freeze/hooks/_qthooks.py
--- cx_freeze-7.2.5/cx_Freeze/hooks/_qthooks.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/cx_Freeze/hooks/_qthooks.py	2024-11-17 13:44:12.349674766 +0100
@@ -8,7 +8,7 @@
 import os
 import sys
 from contextlib import suppress
-from functools import lru_cache
+from functools import cache
 from pathlib import Path
 from typing import TYPE_CHECKING
 
@@ -24,7 +24,7 @@
     return module.name.split(".")[0]
 
 
-@lru_cache(maxsize=None)
+@cache
 def _qt_libraryinfo_paths(name: str) -> dict[str, tuple[Path, Path]]:
     """Cache the QtCore library paths."""
     try:
diff '--color=auto' -Naur cx_freeze-7.2.5/doc/src/faq.rst cx_freeze-7.2.5.new/doc/src/faq.rst
--- cx_freeze-7.2.5/doc/src/faq.rst	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/doc/src/faq.rst	2024-11-17 13:44:12.349674766 +0100
@@ -94,7 +94,7 @@
 Microsoft Visual C++ Redistributable Package
 --------------------------------------------
 
-Python 3.8-3.12 on Windows requires the `Microsoft Visual C++ Redistributable
+Python 3.9-3.13 on Windows requires the `Microsoft Visual C++ Redistributable
 <https://docs.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist>`_,
 and because of how this is installed, **cx_Freeze** doesn't automatically copy
 it for your application.
diff '--color=auto' -Naur cx_freeze-7.2.5/doc/src/index.rst cx_freeze-7.2.5.new/doc/src/index.rst
--- cx_freeze-7.2.5/doc/src/index.rst	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/doc/src/index.rst	2024-11-17 13:44:12.349674766 +0100
@@ -6,7 +6,7 @@
 performance, is cross-platform and should work on any platform that Python_
 works on.
 
-The current version of **cx_Freeze** is 7.2 and supports Python 3.8 to 3.12.
+The current version of **cx_Freeze** is 7.3 and supports Python 3.9 to 3.13.
 
 **cx_Freeze** is distributed under an open-source :ref:`PSF license <license>`.
 
diff '--color=auto' -Naur cx_freeze-7.2.5/doc/src/installation.rst cx_freeze-7.2.5.new/doc/src/installation.rst
--- cx_freeze-7.2.5/doc/src/installation.rst	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/doc/src/installation.rst	2024-11-17 13:44:12.349674766 +0100
@@ -52,12 +52,12 @@
 
    packaging >= 24
    setuptools >= 65.6.3        (setuptools >= 70.1 to build)
-   importlib_metadata>=6       (Python 3.8-3.10.2)
-   tomli >= 2.0.1              (Python 3.8-3.10)
-   typing_extensions >= 4.10.0 (Python 3.8-3.9)
+   importlib_metadata>=6       (Python 3.9-3.10.2)
+   tomli >= 2.0.1              (Python 3.9-3.10)
+   typing_extensions >= 4.10.0 (Python 3.9)
    cx_Logging >= 3.1           (Windows only)
    lief >= 0.12.0              (Windows only)
-   filelock >=3.12.3           (Linux)
+   filelock >= 3.12.3          (Linux)
    patchelf >= 0.14            (Linux)
    dmgbuild >= 1.6.1           (macOS)
    C compiler                  (required only if installing from sources)
diff '--color=auto' -Naur cx_freeze-7.2.5/doc/src/versions.rst cx_freeze-7.2.5.new/doc/src/versions.rst
--- cx_freeze-7.2.5/doc/src/versions.rst	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/doc/src/versions.rst	2024-11-17 13:44:12.349674766 +0100
@@ -8,7 +8,10 @@
    * - cx_Freeze version
      - Python version
      - Status
-   * - cx_Freeze 7.0 to 7.2
+   * - cx_Freeze 7.3.0
+     - Python 3.9 to 3.13
+     - supported
+   * - cx_Freeze 7.0 to 7.2.3
      - Python 3.8 to 3.12
      - supported
    * - cx_Freeze 6.14 and 6.15
diff '--color=auto' -Naur cx_freeze-7.2.5/pyproject.toml cx_freeze-7.2.5.new/pyproject.toml
--- cx_freeze-7.2.5/pyproject.toml	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/pyproject.toml	2024-11-17 13:44:12.350674772 +0100
@@ -1,6 +1,6 @@
 [build-system]
 requires = [
-    "setuptools>=70.1,<75",
+    "setuptools>=70.1,<76",
     "cx_Logging>=3.1 ;sys_platform == 'win32'",
 ]
 build-backend = "setuptools.build_meta"
@@ -24,7 +24,6 @@
     "Programming Language :: Python",
     "Programming Language :: Python :: 3",
     "Programming Language :: Python :: 3 :: Only",
-    "Programming Language :: Python :: 3.8",
     "Programming Language :: Python :: 3.9",
     "Programming Language :: Python :: 3.10",
     "Programming Language :: Python :: 3.11",
@@ -35,7 +34,7 @@
     "Topic :: Utilities",
 ]
 keywords = ["cx-freeze cxfreeze cx_Freeze freeze python"]
-requires-python = ">=3.8"
+requires-python = ">=3.9"
 dependencies = [
     "packaging>=24",
     "setuptools>=65.6.3,<76",
@@ -59,14 +58,14 @@
 dev = [
     "bump-my-version==0.26.1",
     "cibuildwheel==2.21.1",
-    "pre-commit>=3.5.0,<=3.8.0",   # lower limit python_version < 3.9
+    "pre-commit==3.8.0",           # python_version >= 3.9
 ]
 doc = [
-    "sphinx>=7.1.2,<8",            # lower limit python_version < 3.9
+    "sphinx==7.4.7",               # python_version 3.9-3.13
     "sphinx-new-tab-link==0.6.0",
     "sphinx-tabs==3.4.5",
     "furo==2024.8.6",
-    "myst-parser>=3.0.1,<=4.0.0",  # lower limit python_version < 3.10
+    "myst-parser>=3.0.1,<=4.0.0",  # python_version 3.9,3.10-3.12
 ]
 test = [
     "pytest==8.3.3",
@@ -117,7 +116,7 @@
 
 [tool.black]
 line-length = 79
-target-version = ["py38"]
+target-version = ["py39"]
 
 [tool.bumpversion]
 commit = true
@@ -242,7 +241,7 @@
 ]
 jobs = 0
 output-format = "colorized"
-py-version = [3, 8]
+py-version = [3, 9]
 
 [tool.pytest.ini_options]
 minversion = "7.0"
@@ -259,7 +258,7 @@
     "cx_Freeze/importshed/*.pyi",
 ]
 line-length = 79
-target-version = "py38"
+target-version = "py39"
 
 [tool.ruff.lint]
 select = [
diff '--color=auto' -Naur cx_freeze-7.2.5/requirements-dev.txt cx_freeze-7.2.5.new/requirements-dev.txt
--- cx_freeze-7.2.5/requirements-dev.txt	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/requirements-dev.txt	2024-11-17 13:44:12.350674772 +0100
@@ -1,3 +1,3 @@
 bump-my-version==0.26.1
 cibuildwheel==2.21.1
-pre-commit>=3.5.0,<=3.8.0
+pre-commit==3.8.0
diff '--color=auto' -Naur cx_freeze-7.2.5/requirements-doc.txt cx_freeze-7.2.5.new/requirements-doc.txt
--- cx_freeze-7.2.5/requirements-doc.txt	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/requirements-doc.txt	2024-11-17 13:44:12.350674772 +0100
@@ -1,4 +1,4 @@
-sphinx>=7.1.2,<8
+sphinx==7.4.7
 sphinx-new-tab-link==0.6.0
 sphinx-tabs==3.4.5
 furo==2024.8.6
diff '--color=auto' -Naur cx_freeze-7.2.5/samples/pycountry/test.py cx_freeze-7.2.5.new/samples/pycountry/test.py
--- cx_freeze-7.2.5/samples/pycountry/test.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/samples/pycountry/test.py	2024-11-17 13:44:12.350674772 +0100
@@ -7,7 +7,7 @@
 import pycountry
 
 print("countries:", len(pycountry.countries))
-print("BR-FN", pycountry.subdivisions.get(code="BR-MG"))
+print("BR-MG", pycountry.subdivisions.get(code="BR-MG"))
 
 name = gettext.translation(
     "iso3166-1", pycountry.LOCALES_DIR, languages=["pt"]
diff '--color=auto' -Naur cx_freeze-7.2.5/samples/tz/README.md cx_freeze-7.2.5.new/samples/tz/README.md
--- cx_freeze-7.2.5/samples/tz/README.md	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/samples/tz/README.md	2024-11-17 13:44:12.350674772 +0100
@@ -7,5 +7,7 @@
 In a virtual environment, install by issuing the command:
 
 ```
-pip install -U cx_Freeze "backports.zoneinfo;python_version<'3.9'" "tzdata;sys_platform=='win32'"
+pip install -U cx_Freeze tzdata
 ```
+
+Please note that `tzdata` is not required in macOS and Linux.
diff '--color=auto' -Naur cx_freeze-7.2.5/samples/tz/test_tz.py cx_freeze-7.2.5.new/samples/tz/test_tz.py
--- cx_freeze-7.2.5/samples/tz/test_tz.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/samples/tz/test_tz.py	2024-11-17 13:44:12.350674772 +0100
@@ -1,17 +1,9 @@
-"""Sample to show the datetime in RFC1123 (timezone is required).
-
-zoneinfo version (new library in python 3.9)
-"""
+"""Sample to show the datetime in RFC1123 (timezone is required)."""
 
 from __future__ import annotations
 
 from datetime import datetime, timezone
-
-try:
-    from zoneinfo import TZPATH, ZoneInfo, available_timezones
-except ImportError:
-    from backports.zoneinfo import TZPATH, ZoneInfo, available_timezones
-
+from zoneinfo import TZPATH, ZoneInfo, available_timezones
 
 RFC1123 = "%a, %d %b %Y %H:%M:%S %z"
 
diff '--color=auto' -Naur cx_freeze-7.2.5/setup.py cx_freeze-7.2.5.new/setup.py
--- cx_freeze-7.2.5/setup.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/setup.py	2024-11-17 13:44:12.350674772 +0100
@@ -186,7 +186,7 @@
         # Use gendef and dlltool to generate the library (.a and .delay.a)
         dll_path = self._get_dll_path(name)
         gendef_exe = Path(which("gendef"))
-        def_data = check_output(_make_strs([gendef_exe, "-", dll_path]))
+        def_data = check_output([gendef_exe, "-", dll_path])
         def_name = library_dir / f"{name}.def"
         def_name.write_bytes(def_data)
         lib_path = library_dir / f"lib{name}.a"
@@ -197,10 +197,10 @@
         output_delaylib_args = ["-y", dlb_path]
         try:
             # GNU binutils dlltool support --output-delaylib
-            check_call(_make_strs(dlltool + output_delaylib_args))
+            check_call(dlltool + output_delaylib_args)
         except CalledProcessError:
             # LLVM dlltool only supports generating an import library
-            check_call(_make_strs(dlltool))
+            check_call(dlltool)
             library = name
         return os.fspath(library_dir), library
 
@@ -250,13 +250,6 @@
         super().run()
 
 
-def _make_strs(paths: list[str | Path]) -> list[str]:
-    """Convert paths to strings for legacy compatibility."""
-    if sys.version_info > (3, 8) and not (IS_MINGW or IS_WINDOWS):
-        return paths
-    return list(map(os.fspath, paths))
-
-
 def get_extensions() -> list[Extension]:
     """Build base executables and util module extension."""
     # [Windows only] With binaries included in bases, the compilation is
diff '--color=auto' -Naur cx_freeze-7.2.5/tests/test_hooks_multiprocessing.py cx_freeze-7.2.5.new/tests/test_hooks_multiprocessing.py
--- cx_freeze-7.2.5/tests/test_hooks_multiprocessing.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/tests/test_hooks_multiprocessing.py	2024-11-17 13:44:12.350674772 +0100
@@ -2,7 +2,7 @@
 
 from __future__ import annotations
 
-from typing import TYPE_CHECKING, Iterator
+from typing import TYPE_CHECKING
 
 import pytest
 from generate_samples import create_package, run_command
@@ -10,6 +10,7 @@
 from cx_Freeze._compat import BUILD_EXE_DIR, EXE_SUFFIX
 
 if TYPE_CHECKING:
+    from collections.abc import Iterator
     from pathlib import Path
 
 SOURCE = """\
diff '--color=auto' -Naur cx_freeze-7.2.5/tests/test_hooks_multiprocess.py cx_freeze-7.2.5.new/tests/test_hooks_multiprocess.py
--- cx_freeze-7.2.5/tests/test_hooks_multiprocess.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/tests/test_hooks_multiprocess.py	2024-11-17 13:44:12.350674772 +0100
@@ -2,7 +2,7 @@
 
 from __future__ import annotations
 
-from typing import TYPE_CHECKING, Iterator
+from typing import TYPE_CHECKING
 
 import pytest
 from generate_samples import create_package, run_command
@@ -10,6 +10,7 @@
 from cx_Freeze._compat import BUILD_EXE_DIR, EXE_SUFFIX
 
 if TYPE_CHECKING:
+    from collections.abc import Iterator
     from pathlib import Path
 
 pytest.importorskip(
diff '--color=auto' -Naur cx_freeze-7.2.5/tests/test_hooks_zoneinfo.py cx_freeze-7.2.5.new/tests/test_hooks_zoneinfo.py
--- cx_freeze-7.2.5/tests/test_hooks_zoneinfo.py	2024-11-11 23:15:18.000000000 +0100
+++ cx_freeze-7.2.5.new/tests/test_hooks_zoneinfo.py	2024-11-17 13:44:12.350674772 +0100
@@ -2,7 +2,6 @@
 
 from __future__ import annotations
 
-import sys
 from typing import TYPE_CHECKING
 
 import pytest
@@ -39,9 +38,6 @@
 """
 
 
-@pytest.mark.skipif(
-    sys.version_info < (3, 9), reason="Python < 3.9 doesn't provide zoneinfo"
-)
 @pytest.mark.parametrize(
     "zip_packages", [False, True], ids=["", "zip_packages"]
 )
