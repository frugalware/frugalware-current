diff -upr gpgme-1.16.0.orig/configure gpgme-1.16.0/configure
--- gpgme-1.16.0.orig/configure	2021-06-24 20:10:50.000000000 +0300
+++ gpgme-1.16.0/configure	2021-12-01 00:12:24.383952330 +0200
@@ -19625,7 +19625,7 @@ $as_echo_n "checking for $am_display_PYT
 if ${am_cv_python_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:3])"`
+  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:4])"`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
 $as_echo "$am_cv_python_version" >&6; }
@@ -19666,7 +19666,7 @@ else:
 # <https://github.com/pypa/virtualenv/issues/118>
 try:
     from platform import python_implementation
-    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
+    if python_implementation() == 'CPython' and sys.version[:4] == '2.7':
         can_use_sysconfig = 0
 except ImportError:
     pass"
@@ -19875,7 +19875,7 @@ variable to configure. See \`\`configure
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for the distutils Python package" >&5
 $as_echo_n "checking for the distutils Python package... " >&6; }
 	ac_distutils_result=`$PYTHON -c "import distutils" 2>&1`
-	if test -z "$ac_distutils_result"; then
+	if test $? -eq 0; then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 	else
@@ -19933,7 +19933,7 @@ EOD`
 				ac_python_version=$PYTHON_VERSION
 			else
 				ac_python_version=`$PYTHON -c "import sys; \
-					print (sys.version[:3])"`
+					print (sys.version[:4])"`
 			fi
 		fi
 
@@ -20255,7 +20255,7 @@ $as_echo_n "checking for $am_display_PYT
 if ${am_cv_python_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:3])"`
+  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:4])"`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
 $as_echo "$am_cv_python_version" >&6; }
@@ -20296,7 +20296,7 @@ else:
 # <https://github.com/pypa/virtualenv/issues/118>
 try:
     from platform import python_implementation
-    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
+    if python_implementation() == 'CPython' and sys.version[:4] == '2.7':
         can_use_sysconfig = 0
 except ImportError:
     pass"
@@ -20505,7 +20505,7 @@ variable to configure. See \`\`configure
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for the distutils Python package" >&5
 $as_echo_n "checking for the distutils Python package... " >&6; }
 	ac_distutils_result=`$PYTHON -c "import distutils" 2>&1`
-	if test -z "$ac_distutils_result"; then
+	if test $? -eq 0; then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 	else
@@ -20563,7 +20563,7 @@ EOD`
 				ac_python_version=$PYTHON_VERSION
 			else
 				ac_python_version=`$PYTHON -c "import sys; \
-					print (sys.version[:3])"`
+					print (sys.version[:4])"`
 			fi
 		fi
 
@@ -20885,7 +20885,7 @@ $as_echo_n "checking for $am_display_PYT
 if ${am_cv_python_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:3])"`
+  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:4])"`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
 $as_echo "$am_cv_python_version" >&6; }
@@ -20926,7 +20926,7 @@ else:
 # <https://github.com/pypa/virtualenv/issues/118>
 try:
     from platform import python_implementation
-    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
+    if python_implementation() == 'CPython' and sys.version[:4] == '2.7':
         can_use_sysconfig = 0
 except ImportError:
     pass"
@@ -21135,7 +21135,7 @@ variable to configure. See \`\`configure
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for the distutils Python package" >&5
 $as_echo_n "checking for the distutils Python package... " >&6; }
 	ac_distutils_result=`$PYTHON -c "import distutils" 2>&1`
-	if test -z "$ac_distutils_result"; then
+	if test $? -eq 0; then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 	else
@@ -21193,7 +21193,7 @@ EOD`
 				ac_python_version=$PYTHON_VERSION
 			else
 				ac_python_version=`$PYTHON -c "import sys; \
-					print (sys.version[:3])"`
+					print (sys.version[:4])"`
 			fi
 		fi
 
@@ -21515,7 +21515,7 @@ $as_echo_n "checking for $am_display_PYT
 if ${am_cv_python_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:3])"`
+  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:4])"`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
 $as_echo "$am_cv_python_version" >&6; }
@@ -21556,7 +21556,7 @@ else:
 # <https://github.com/pypa/virtualenv/issues/118>
 try:
     from platform import python_implementation
-    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
+    if python_implementation() == 'CPython' and sys.version[:4] == '2.7':
         can_use_sysconfig = 0
 except ImportError:
     pass"
@@ -21765,7 +21765,7 @@ variable to configure. See \`\`configure
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for the distutils Python package" >&5
 $as_echo_n "checking for the distutils Python package... " >&6; }
 	ac_distutils_result=`$PYTHON -c "import distutils" 2>&1`
-	if test -z "$ac_distutils_result"; then
+	if test $? -eq 0; then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 	else
@@ -21823,7 +21823,7 @@ EOD`
 				ac_python_version=$PYTHON_VERSION
 			else
 				ac_python_version=`$PYTHON -c "import sys; \
-					print (sys.version[:3])"`
+					print (sys.version[:4])"`
 			fi
 		fi
 
@@ -22145,7 +22145,7 @@ $as_echo_n "checking for $am_display_PYT
 if ${am_cv_python_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:3])"`
+  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:4])"`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
 $as_echo "$am_cv_python_version" >&6; }
@@ -22186,7 +22186,7 @@ else:
 # <https://github.com/pypa/virtualenv/issues/118>
 try:
     from platform import python_implementation
-    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
+    if python_implementation() == 'CPython' and sys.version[:4] == '2.7':
         can_use_sysconfig = 0
 except ImportError:
     pass"
@@ -22395,7 +22395,7 @@ variable to configure. See \`\`configure
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for the distutils Python package" >&5
 $as_echo_n "checking for the distutils Python package... " >&6; }
 	ac_distutils_result=`$PYTHON -c "import distutils" 2>&1`
-	if test -z "$ac_distutils_result"; then
+	if test $? -eq 0; then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 	else
@@ -22453,7 +22453,7 @@ EOD`
 				ac_python_version=$PYTHON_VERSION
 			else
 				ac_python_version=`$PYTHON -c "import sys; \
-					print (sys.version[:3])"`
+					print (sys.version[:4])"`
 			fi
 		fi
 
@@ -22775,7 +22775,7 @@ $as_echo_n "checking for $am_display_PYT
 if ${am_cv_python_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:3])"`
+  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:4])"`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
 $as_echo "$am_cv_python_version" >&6; }
@@ -22816,7 +22816,7 @@ else:
 # <https://github.com/pypa/virtualenv/issues/118>
 try:
     from platform import python_implementation
-    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
+    if python_implementation() == 'CPython' and sys.version[:4] == '2.7':
         can_use_sysconfig = 0
 except ImportError:
     pass"
@@ -23025,7 +23025,7 @@ variable to configure. See \`\`configure
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for the distutils Python package" >&5
 $as_echo_n "checking for the distutils Python package... " >&6; }
 	ac_distutils_result=`$PYTHON -c "import distutils" 2>&1`
-	if test -z "$ac_distutils_result"; then
+	if test $? -eq 0; then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 	else
@@ -23083,7 +23083,7 @@ EOD`
 				ac_python_version=$PYTHON_VERSION
 			else
 				ac_python_version=`$PYTHON -c "import sys; \
-					print (sys.version[:3])"`
+					print (sys.version[:4])"`
 			fi
 		fi
 
@@ -23291,13 +23291,13 @@ $as_echo "$as_me: WARNING:
 
         if test -n "$PYTHON"; then
       # If the user set $PYTHON, use it and don't search something else.
-      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $PYTHON version is >= 3.9" >&5
-$as_echo_n "checking whether $PYTHON version is >= 3.9... " >&6; }
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $PYTHON version is >= 3.10" >&5
+$as_echo_n "checking whether $PYTHON version is >= 3.10... " >&6; }
       prog="import sys
 # split strings by '.' and convert to numeric.  Append some zeros
 # because we need at least 4 digits for the hex conversion.
 # map returns an iterator in Python 3.0 and a list in 2.x
-minver = list(map(int, '3.9'.split('.'))) + [0, 0, 0]
+minver = list(map(int, '3.10'.split('.'))) + [0, 0, 0]
 minverhex = 0
 # xrange is not present in Python 3.0 and range returns an iterator
 for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[i]
@@ -23318,19 +23318,19 @@ fi
     else
       # Otherwise, try each interpreter until we find one that satisfies
       # VERSION.
-      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for a Python interpreter with version >= 3.9" >&5
-$as_echo_n "checking for a Python interpreter with version >= 3.9... " >&6; }
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for a Python interpreter with version >= 3.10" >&5
+$as_echo_n "checking for a Python interpreter with version >= 3.10... " >&6; }
 if ${am_cv_pathless_PYTHON+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-	for am_cv_pathless_PYTHON           in python3.9 none; do
+	for am_cv_pathless_PYTHON           in python3.10 none; do
 	  test "$am_cv_pathless_PYTHON" = none && break
 	  prog="import sys
 # split strings by '.' and convert to numeric.  Append some zeros
 # because we need at least 4 digits for the hex conversion.
 # map returns an iterator in Python 3.0 and a list in 2.x
-minver = list(map(int, '3.9'.split('.'))) + [0, 0, 0]
+minver = list(map(int, '3.10'.split('.'))) + [0, 0, 0]
 minverhex = 0
 # xrange is not present in Python 3.0 and range returns an iterator
 for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[i]
@@ -23405,7 +23405,7 @@ $as_echo_n "checking for $am_display_PYT
 if ${am_cv_python_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:3])"`
+  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:4])"`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
 $as_echo "$am_cv_python_version" >&6; }
@@ -23446,7 +23446,7 @@ else:
 # <https://github.com/pypa/virtualenv/issues/118>
 try:
     from platform import python_implementation
-    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
+    if python_implementation() == 'CPython' and sys.version[:4] == '2.7':
         can_use_sysconfig = 0
 except ImportError:
     pass"
@@ -23655,7 +23655,7 @@ variable to configure. See \`\`configure
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for the distutils Python package" >&5
 $as_echo_n "checking for the distutils Python package... " >&6; }
 	ac_distutils_result=`$PYTHON -c "import distutils" 2>&1`
-	if test -z "$ac_distutils_result"; then
+	if test $? -eq 0; then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 	else
@@ -23713,7 +23713,7 @@ EOD`
 				ac_python_version=$PYTHON_VERSION
 			else
 				ac_python_version=`$PYTHON -c "import sys; \
-					print (sys.version[:3])"`
+					print (sys.version[:4])"`
 			fi
 		fi
 
@@ -24035,7 +24035,7 @@ $as_echo_n "checking for $am_display_PYT
 if ${am_cv_python_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:3])"`
+  am_cv_python_version=`$PYTHON -c "import sys; sys.stdout.write(sys.version[:4])"`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_python_version" >&5
 $as_echo "$am_cv_python_version" >&6; }
@@ -24076,7 +24076,7 @@ else:
 # <https://github.com/pypa/virtualenv/issues/118>
 try:
     from platform import python_implementation
-    if python_implementation() == 'CPython' and sys.version[:3] == '2.7':
+    if python_implementation() == 'CPython' and sys.version[:4] == '2.7':
         can_use_sysconfig = 0
 except ImportError:
     pass"
@@ -24285,7 +24285,7 @@ variable to configure. See \`\`configure
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for the distutils Python package" >&5
 $as_echo_n "checking for the distutils Python package... " >&6; }
 	ac_distutils_result=`$PYTHON -c "import distutils" 2>&1`
-	if test -z "$ac_distutils_result"; then
+	if test $? -eq 0; then
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 	else
@@ -24343,7 +24343,7 @@ EOD`
 				ac_python_version=$PYTHON_VERSION
 			else
 				ac_python_version=`$PYTHON -c "import sys; \
-					print (sys.version[:3])"`
+					print (sys.version[:4])"`
 			fi
 		fi
 
