diff '--color=auto' -Naur zstd-1.5.7/build/cmake/CMakeLists.txt zstd-1.5.7.new/build/cmake/CMakeLists.txt
--- zstd-1.5.7/build/cmake/CMakeLists.txt	2025-02-19 01:04:24.000000000 +0100
+++ zstd-1.5.7.new/build/cmake/CMakeLists.txt	2025-06-03 14:34:33.374090697 +0200
@@ -172,7 +172,6 @@
 if (ZSTD_BUILD_TESTS)
     enable_testing()
     if (NOT ZSTD_BUILD_STATIC)
-        message(SEND_ERROR "You need to build static library to build tests")
     endif ()
 
     add_subdirectory(tests)
diff '--color=auto' -Naur zstd-1.5.7/build/cmake/tests/CMakeLists.txt zstd-1.5.7.new/build/cmake/tests/CMakeLists.txt
--- zstd-1.5.7/build/cmake/tests/CMakeLists.txt	2025-02-19 01:04:24.000000000 +0100
+++ zstd-1.5.7.new/build/cmake/tests/CMakeLists.txt	2025-06-03 14:34:39.221228848 +0200
@@ -51,7 +51,7 @@
 include_directories(${TESTS_DIR} ${PROGRAMS_DIR} ${LIBRARY_DIR} ${LIBRARY_DIR}/common ${LIBRARY_DIR}/compress ${LIBRARY_DIR}/dictBuilder)
 
 add_executable(datagen ${PROGRAMS_DIR}/datagen.c ${PROGRAMS_DIR}/lorem.c ${TESTS_DIR}/loremOut.c ${TESTS_DIR}/datagencli.c)
-target_link_libraries(datagen libzstd_static)
+target_link_libraries(datagen libzstd_shared)
 
 #
 # fullbench
@@ -60,7 +60,7 @@
 if (NOT MSVC)
     target_compile_options(fullbench PRIVATE "-Wno-deprecated-declarations")
 endif()
-target_link_libraries(fullbench libzstd_static)
+target_link_libraries(fullbench libzstd_shared)
 add_test(NAME fullbench COMMAND "$<TARGET_FILE:fullbench>" ${ZSTD_FULLBENCH_FLAGS})
 
 #
@@ -70,7 +70,7 @@
 if (NOT MSVC)
     target_compile_options(fuzzer PRIVATE "-Wno-deprecated-declarations")
 endif()
-target_link_libraries(fuzzer libzstd_static)
+target_link_libraries(fuzzer libzstd_shared)
 AddTestFlagsOption(ZSTD_FUZZER_FLAGS "$ENV{FUZZERTEST} $ENV{FUZZER_FLAGS}"
     "Semicolon-separated list of flags to pass to the fuzzer test (see `fuzzer -h` for usage)")
 add_test(NAME fuzzer COMMAND "$<TARGET_FILE:fuzzer>" ${ZSTD_FUZZER_FLAGS})
@@ -85,7 +85,7 @@
 if (NOT MSVC)
     target_compile_options(zstreamtest PRIVATE "-Wno-deprecated-declarations")
 endif()
-target_link_libraries(zstreamtest libzstd_static)
+target_link_libraries(zstreamtest libzstd_shared)
 AddTestFlagsOption(ZSTD_ZSTREAM_FLAGS "$ENV{ZSTREAM_TESTTIME} $ENV{FUZZER_FLAGS}"
     "Semicolon-separated list of flags to pass to the zstreamtest test (see `zstreamtest -h` for usage)")
 add_test(NAME zstreamtest COMMAND "$<TARGET_FILE:zstreamtest>" ${ZSTD_ZSTREAM_FLAGS})
@@ -112,7 +112,7 @@
 
 add_executable(paramgrill ${PROGRAMS_DIR}/benchfn.c ${PROGRAMS_DIR}/benchzstd.c ${PROGRAMS_DIR}/datagen.c ${PROGRAMS_DIR}/lorem.c ${PROGRAMS_DIR}/util.c ${PROGRAMS_DIR}/timefn.c ${TESTS_DIR}/paramgrill.c)
 if (UNIX)
-    target_link_libraries(paramgrill libzstd_static m) #m is math library
+    target_link_libraries(paramgrill libzstd_shared m) #m is math library
 else()
-    target_link_libraries(paramgrill libzstd_static)
+    target_link_libraries(paramgrill libzstd_shared)
 endif ()
