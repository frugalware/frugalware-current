From c45102d8eb5262d155ae3e680607ad171953f9b0 Mon Sep 17 00:00:00 2001
From: Ben Gamari <ben@smart-cactus.org>
Date: Fri, 29 Oct 2021 17:06:11 -0400
Subject: [PATCH 1/6] rts/RtsSymbols: Provide a proper prototype for environ

Previously we relied on Sym_NeedsProto, but this gave the symbol a type
which conflicts with the definition that may be provided by unistd.h.

Fixes #20577.
---
 rts/RtsSymbols.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/rts/RtsSymbols.c b/rts/RtsSymbols.c
index fce399a0756..7d7b8422c20 100644
--- a/rts/RtsSymbols.c
+++ b/rts/RtsSymbols.c
@@ -34,6 +34,11 @@
 #include <elf.h> /* _DYNAMIC */
 #endif
 
+/* We must provide a prototype for environ since depending upon the libc
+ * version it may or may not be provided by unistd.h. See #20577.
+ */
+extern char **environ;
+
 /* -----------------------------------------------------------------------------
  * Symbols to be inserted into the RTS symbol table.
  */
@@ -61,7 +66,6 @@
       SymI_HasProto(stg_sig_install)            \
       SymI_HasProto(rtsTimerSignal)             \
       SymI_HasProto_redirect(atexit, atexit, STRENGTH_STRONG) /* See Note [Strong symbols] */ \
-      SymI_NeedsDataProto(environ)              \
       SymI_NeedsDataProto(nocldstop)
 #endif
 
-- 
GitLab


From 079458495babd2ac6af383dc948d8946dedaef41 Mon Sep 17 00:00:00 2001
From: Ben Gamari <ben@smart-cactus.org>
Date: Fri, 29 Oct 2021 19:05:32 -0400
Subject: [PATCH 2/6] hadrian: Don't pass empty paths via -I

Previously we could in some cases add empty paths to `cc`'s include file
search path. See #20578.
---
 hadrian/src/Settings/Packages.hs | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/hadrian/src/Settings/Packages.hs b/hadrian/src/Settings/Packages.hs
index ed5a03a2d99..6fc47b05fd5 100644
--- a/hadrian/src/Settings/Packages.hs
+++ b/hadrian/src/Settings/Packages.hs
@@ -277,8 +277,8 @@ rtsPackageArgs = package rts ? do
 
     let cArgs = mconcat
           [ rtsWarnings
-          , flag UseSystemFfi ? arg ("-I" ++ ffiIncludeDir)
-          , flag WithLibdw ? arg ("-I" ++ libdwIncludeDir)
+          , flag UseSystemFfi ? not (null ffiIncludeDir) ? arg ("-I" ++ ffiIncludeDir)
+          , flag WithLibdw ? not (null libdwIncludeDir) ? arg ("-I" ++ libdwIncludeDir)
           , arg "-fomit-frame-pointer"
           -- RTS *must* be compiled with optimisations. The INLINE_HEADER macro
           -- requires that functions are inlined to work as expected. Inlining
-- 
GitLab


From 0dbfb48aced7c0484ab32234841e6d632ea4cfd0 Mon Sep 17 00:00:00 2001
From: Ben Gamari <ben@smart-cactus.org>
Date: Sat, 30 Oct 2021 11:08:57 -0400
Subject: [PATCH 3/6] ghc-cabal: Manually specify -XHaskell2010

Otherwise we end up with issues like #19631 when bootstrapping using GHC
9.2 and above.

Fixes #19631.
---
 utils/ghc-cabal/ghc.mk | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/utils/ghc-cabal/ghc.mk b/utils/ghc-cabal/ghc.mk
index dfdc2d50c44..ca1cda53075 100644
--- a/utils/ghc-cabal/ghc.mk
+++ b/utils/ghc-cabal/ghc.mk
@@ -59,7 +59,8 @@ $(ghc-cabal_DIST_BINARY): $(CABAL_LEXER_DEP) utils/ghc-cabal/Main.hs $(TOUCH_DEP
 	"$(GHC)" $(SRC_HC_OPTS) \
 	       $(addprefix -optc, $(SRC_CC_OPTS) $(CONF_CC_OPTS_STAGE0)) \
 	       $(addprefix -optl, $(SRC_LD_OPTS) $(CONF_GCC_LINKER_OPTS_STAGE0)) \
-				 -O0 \
+		   -O0 \
+		   -XHaskell2010 \
 	       -hide-all-packages \
 	       -package-env - \
 	       $(addprefix -package , $(CABAL_BUILD_DEPS)) \
-- 
GitLab


From 2da0cf8ad5201ffec48d2c5032bda2ec8e7a9ef9 Mon Sep 17 00:00:00 2001
From: Ben Gamari <ben@smart-cactus.org>
Date: Tue, 2 Nov 2021 12:18:48 -0400
Subject: [PATCH 4/6] ghc-compact: Update cabal file

Improve documentation, bump bounds and cabal-version.
---
 libraries/ghc-compact/ghc-compact.cabal | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/libraries/ghc-compact/ghc-compact.cabal b/libraries/ghc-compact/ghc-compact.cabal
index 7ddb956355c..2b84d61c6af 100644
--- a/libraries/ghc-compact/ghc-compact.cabal
+++ b/libraries/ghc-compact/ghc-compact.cabal
@@ -1,3 +1,4 @@
+cabal-version:  1.12
 name:           ghc-compact
 version:        0.1.0.0
 -- NOTE: Don't forget to update ./changelog.md
@@ -19,8 +20,10 @@ description:
     Internally, the struct is stored a single contiguous block of memory,
     which allows efficient serialization and deserialization of structs
     for distributed computing.
+
+    This package provides a low-level API; see also the </package/compact
+    compact package> which provides a user-facing API.
 build-type:     Simple
-cabal-version:  >=1.10
 tested-with:    GHC==7.11
 
 source-repository head
@@ -38,7 +41,7 @@ library
 
   build-depends: ghc-prim   >= 0.5.3 && < 0.9,
                  base       >= 4.9.0 && < 4.17,
-                 bytestring >= 0.10.6.0
+                 bytestring >= 0.10.6.0 && <0.12
   ghc-options: -Wall
 
   exposed-modules: GHC.Compact
-- 
GitLab


From c582dd414cbd1016f34945db00b9d1acdd300002 Mon Sep 17 00:00:00 2001
From: Ben Gamari <ben@smart-cactus.org>
Date: Tue, 2 Nov 2021 12:26:17 -0400
Subject: [PATCH 5/6] hadrian: Document fully_static flavour transformer

---
 hadrian/doc/flavours.md | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/hadrian/doc/flavours.md b/hadrian/doc/flavours.md
index b49ef5ddeb3..9788a0593f2 100644
--- a/hadrian/doc/flavours.md
+++ b/hadrian/doc/flavours.md
@@ -240,6 +240,10 @@ The supported transformers are listed below:
         <td><code>ipe</code></td>
         <td>Build the stage2 libraries with IPE debugging information for use with -hi profiling.</td>
     </tr>
+    <tr>
+        <td><code>fully_static</code></td>
+        <td>Produce fully statically-linked executables and build libraries suitable for static linking.</td>
+    </tr>
     <tr>
         <td><code>collect_timings</code></td>
         <td>Collects timings while building the stage2+ compiler by adding the
-- 
GitLab


From 842e3e5253762fa9642a4ae58cde7b53bc15be08 Mon Sep 17 00:00:00 2001
From: Ben Gamari <ben@smart-cactus.org>
Date: Wed, 3 Nov 2021 20:02:03 -0400
Subject: [PATCH 6/6] user-guide: Fix :since: of -XCApiFFI

Closes #20504.
---
 docs/users_guide/exts/ffi.rst | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/docs/users_guide/exts/ffi.rst b/docs/users_guide/exts/ffi.rst
index 3b681252e87..2419fadf01e 100644
--- a/docs/users_guide/exts/ffi.rst
+++ b/docs/users_guide/exts/ffi.rst
@@ -390,7 +390,7 @@ The CAPI calling convention
 .. extension:: CApiFFI
     :shortdesc: Enable the CAPI calling convention.
 
-    :since: 7.10.1
+    :since: 7.6.1
 
 The ``CApiFFI`` extension allows a calling convention of ``capi`` to be
 used in foreign declarations, e.g. ::
-- 
GitLab

