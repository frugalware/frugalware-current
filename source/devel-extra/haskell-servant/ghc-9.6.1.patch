--- servant-0.19.1/servant.cabal	2001-09-09 03:46:40.000000000 +0200
+++ servant-0.19.1.new/servant.cabal	2023-03-20 13:35:46.144075347 +0100
@@ -80,12 +80,12 @@
   --
   -- note: mtl lower bound is so low because of GHC-7.8
   build-depends:
-      base                   >= 4.9      && < 4.18
+      base                   >= 4.9      && < 4.19
     , bytestring             >= 0.10.8.1 && < 0.12
     , constraints            >= 0.2
-    , mtl                    >= 2.2.2    && < 2.3
+    , mtl                    >= 2.2.2    && < 2.3.2
     , sop-core               >= 0.4.0.0  && < 0.6
-    , transformers           >= 0.5.2.0  && < 0.6
+    , transformers           >= 0.5.2.0  && < 0.6.2
     , text                   >= 1.2.3.0  && < 2.1
 
 
@@ -98,10 +98,10 @@
   -- Other dependencies: Lower bound around what is in the latest Stackage LTS.
   -- Here can be exceptions if we really need features from the newer versions.
   build-depends:
-      base-compat            >= 0.10.5   && < 0.13
+      base-compat            >= 0.10.5   && < 0.14
     , aeson                  >= 1.4.1.0  && < 3
     , attoparsec             >= 0.13.2.2 && < 0.15
-    , bifunctors             >= 5.5.3    && < 5.6
+    , bifunctors             >= 5.5.3    && < 5.6.2
     , case-insensitive       >= 1.2.0.11 && < 1.3
     , deepseq                >= 1.4.2.0  && < 1.5
     , http-media             >= 0.7.1.3  && < 0.9

diff --git a/servant/src/Servant/Types/SourceT.hs b/servant/src/Servant/Types/SourceT.hs
index 84cb4b6a8..74b654f74 100644
--- a/src/Servant/Types/SourceT.hs
+++ b/src/Servant/Types/SourceT.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP                 #-}
 {-# LANGUAGE DeriveFunctor       #-}
 {-# LANGUAGE GADTs               #-}
 {-# LANGUAGE RankNTypes          #-}
@@ -154,8 +155,10 @@ instance (Applicative m, Show1 m, Show a) => Show (StepT m a) where
 -- | >>> lift [1,2,3] :: StepT [] Int
 -- Effect [Yield 1 Stop,Yield 2 Stop,Yield 3 Stop]
 --
+#if !MIN_VERSION_transformers(0,6,0)
 instance MonadTrans StepT where
     lift = Effect . fmap (`Yield` Stop)
+#endif
 
 instance MFunctor StepT where
     hoist f = go where

