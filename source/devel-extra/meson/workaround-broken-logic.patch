diff -Naur meson-0.46.1/mesonbuild/coredata.py meson-0.46.1-p/mesonbuild/coredata.py
--- meson-0.46.1/mesonbuild/coredata.py	2018-05-15 23:29:09.000000000 +0200
+++ meson-0.46.1-p/mesonbuild/coredata.py	2018-06-17 04:18:24.440204029 +0200
@@ -261,6 +261,10 @@
             # commonpath will always return a path in the native format, so we
             # must use pathlib.PurePath to do the same conversion before
             # comparing.
+            # BROKEN LOGIC introduced with 23f3cec9d029b5d44fa7f6a109ab9cda948b12ba
+            # IT IS VALID to have prefix=/foo libdir=/lib or bindir=/bin etc
+            # We'll fix elsewhere and allow common things to be set *OUTSIDE* prefix
+            # I HAVE TO WONDER , really get your fu**ing brains ON.. morons
             if os.path.commonpath([value, prefix]) != str(PurePath(prefix)):
                 m = 'The value of the {!r} option is {!r} which must be a ' \
                     'subdir of the prefix {!r}.\nNote that if you pass a ' \
@@ -472,10 +476,22 @@
 
 # Special prefix-dependent defaults for installation directories that reside in
 # a path outside of the prefix in FHS and common usage.
+# ROFL!!! .. so --prefix=/foo --bindir=/bar is not valid ? lol get real
+# we allow here bc I don't want to maintain large reverts an rework the parser and logic
 builtin_dir_noprefix_options = {
     'sysconfdir':     {'/usr': '/etc'},
     'localstatedir':  {'/usr': '/var',     '/usr/local': '/var/local'},
     'sharedstatedir': {'/usr': '/var/lib', '/usr/local': '/var/local/lib'},
+    'libdir':         {'/usr': '/usr/lib'},
+    'bindir':         {'/usr': '/usr/bin'},
+    'sbindir':        {'/usr': '/usr/sbin'},
+    'datadir':        {'/usr': '/usr/share'},
+    'libexecdir':     {'/usr': '/usr/libexec'},
+    'datadir':        {'/usr': '/usr/share'},
+    'mandir':         {'/usr': '/usr/share/man'},
+    'localedir':      {'/usr': '/usr/share/locale'},
+    'includedir':     {'/usr': '/usr/include'},
+    'infodir':        {'/usr': '/usr/share/info'},
 }
 
 forbidden_target_names = {'clean': None,
