From 498a6b60f0e36f28f7d086f42f4ee4d1ea5a9069 Mon Sep 17 00:00:00 2001
From: Friedemann Kleint <Friedemann.Kleint@qt.io>
Date: Wed, 16 Sep 2020 13:37:10 +0200
Subject: shiboken2: Work around signature problems with smart pointer
 instantiations

- Drop the module of the instantiations.
- Add a dummy mapping entry, declaring it to be a 1-tuple.

Task-number: PYSIDE-1212
Task-number: PYSIDE-1367
Change-Id: Iddb1feaafbe416ae57d761a33276cb4a1d88e9e3
Reviewed-by: Christian Tismer <tismer@stackless.com>
---
 /ApiExtractor/abstractmetalang.cpp                    | 3 ++-
 .../shibokenmodule/files.dir/shibokensupport/signature/mapping.py      | 1 +
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a//ApiExtractor/abstractmetalang.cpp b//ApiExtractor/abstractmetalang.cpp
index 592f69c4..d20caacf 100644
--- a//ApiExtractor/abstractmetalang.cpp
+++ b//ApiExtractor/abstractmetalang.cpp
@@ -2489,6 +2489,7 @@ QString AbstractMetaType::formatPythonSignature() const
      * When we have a primitive with an indirection, we use that '*'
      * character for later postprocessing, since those indirections
      * need to be modified into a result tuple.
+     * Smart pointer instantiations: Drop the package
      */
     QString result;
     if (m_pattern == AbstractMetaType::NativePointerAsArrayPattern)
@@ -2497,7 +2498,7 @@ QString AbstractMetaType::formatPythonSignature() const
     // NativePointerAsArrayPattern indicates when we have <array> in XML.
     // if (m_typeEntry->isPrimitive() && isConstant())
     //     result += QLatin1String("const ");
-    if (!m_typeEntry->isPrimitive() && !package().isEmpty())
+    if (!m_typeEntry->isPrimitive() && !m_typeEntry->isSmartPointer() && !package().isEmpty())
         result += package() + QLatin1Char('.');
     if (isArray()) {
         // Build nested array dimensions a[2][3] in correct order
diff --git a//shibokenmodule/files.dir/shibokensupport/signature/mapping.py b//shibokenmodule/files.dir/shibokensupport/signature/mapping.py
index bafea434..f341458d 100644
--- a//shibokenmodule/files.dir/shibokensupport/signature/mapping.py
+++ b//shibokenmodule/files.dir/shibokensupport/signature/mapping.py
@@ -264,6 +264,7 @@ type_map.update({
     "qulonglong": int,
     "QVariant": Variant,
     "QVector": typing.List,
+    "QSharedPointer": typing.Tuple,
     "real": float,
     "short": int,
     "signed char": int,
-- 
cgit v1.2.1

