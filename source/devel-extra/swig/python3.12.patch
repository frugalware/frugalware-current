diff -Naur swig-4.1.1/Examples/test-suite/python/cpp11_raw_string_literals_runme.py swig-4.1.1.new/Examples/test-suite/python/cpp11_raw_string_literals_runme.py
--- swig-4.1.1/Examples/test-suite/python/cpp11_raw_string_literals_runme.py	2022-11-30 08:35:05.000000000 +0100
+++ swig-4.1.1.new/Examples/test-suite/python/cpp11_raw_string_literals_runme.py	2023-10-04 21:08:03.564298616 +0200
@@ -65,11 +65,11 @@
 comment""")
 check(inspect.getdoc(RawStringDoc.YY), """Single line "raw string" documentation comment""")
 check(inspect.getdoc(RawStringDoc.ZZ),
-"""Documentation comment
+r"""Documentation comment
 
 as a "raw string"
 on multiple lines including a \ backslash""")
 
-check(mm, """)I'm an "ascii" \ string constant with multiple
+check(mm, r""")I'm an "ascii" \ string constant with multiple
 
 lines.""")
diff -Naur swig-4.1.1/Examples/test-suite/python/langobj_runme.py swig-4.1.1.new/Examples/test-suite/python/langobj_runme.py
--- swig-4.1.1/Examples/test-suite/python/langobj_runme.py	2022-11-30 08:35:05.000000000 +0100
+++ swig-4.1.1.new/Examples/test-suite/python/langobj_runme.py	2023-10-04 21:08:58.650762727 +0200
@@ -2,7 +2,7 @@
 from langobj import *
 
 
-x = "hello"
+x = 256*256+1
 rx = sys.getrefcount(x)
 v = identity(x)
 rv = sys.getrefcount(v)
diff -Naur swig-4.1.1/.github/workflows/ci.yml swig-4.1.1.new/.github/workflows/ci.yml
--- swig-4.1.1/.github/workflows/ci.yml	2022-11-30 08:35:05.000000000 +0100
+++ swig-4.1.1.new/.github/workflows/ci.yml	2023-10-04 21:08:47.654670095 +0200
@@ -146,6 +146,8 @@
         - SWIGLANG: python
           VER: '3.11'
         - SWIGLANG: python
+          VER: '3.12'
+        - SWIGLANG: python
           PY2: 2
           SWIG_FEATURES: -builtin
         - SWIGLANG: python
diff -Naur swig-4.1.1/Source/Modules/python.cxx swig-4.1.1.new/Source/Modules/python.cxx
--- swig-4.1.1/Source/Modules/python.cxx	2022-11-30 08:35:05.000000000 +0100
+++ swig-4.1.1.new/Source/Modules/python.cxx	2023-10-04 21:08:47.657670120 +0200
@@ -4342,6 +4342,9 @@
     // struct _specialization_cache _spec_cache;
     Printf(f, "  {\n");
     printSlot(f, getSlot(n, "feature:python:getitem"), "getitem", "PyObject *");
+    Printv(f, "#if PY_VERSION_HEX >= 0x030c0000\n", NIL);
+    printSlot(f, getSlot(n, "feature:python:getitem_version"), "getitem_version", "uint32_t");
+    Printv(f, "#endif\n", NIL);
     Printf(f, "  }\n");
     Printv(f, "#endif\n", NIL);
     Printf(f, "};\n\n");
