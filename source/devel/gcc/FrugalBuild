# Compiling Time: 26.48 SBU
# Maintainer: crazy <crazy@frugalware.org>
# Contributor: James Buren <ryuo@frugalware.org>
# Contributor: Miklos Vajna <vmiklos@frugalware.org>


## TODO: split libcilkrts ? now in gcc package
## -> https://www.cilkplus.org/

USE_SHARED=${USE_SHARED:-"y"}

USE_LANGS=${USE_LANGS:-"y"}
USE_CXX=${USE_CXX:-"$USE_LANGS"}
USE_FORTRAN=${USE_FORTRAN:-"$USE_LANGS"}
USE_OBJC=${USE_OBJC:-"$USE_LANGS"}
USE_GDC=${USE_GDC:-"n"}

# Activate required langage
Fuse $USE_OBJC && USE_CXX="y"

pkgname=gcc
pkgver=12.1.0
gccver=$pkgver
pkgrel=2
pkgdesc="The GNU Compiler Collection"
url="http://gcc.gnu.org"
depends=('binutils>=2.32-5' 'glibc>=2.35' 'libmpc>=1.1.0-11' 'zlib>=1.2.11-11')
makedepends=('kernel-headers>=4.16.11' 'lib32-zlib>=1.2.11-11' 'glibc-devel>=2.35' 'binutils-devel>=2.32-5')
provides=('c-compiler')
groups=('devel' 'devel-core')
archs=('x86_64')
# this is an LTO build just gcc's way
options+=('scriptlet' 'noccache' 'static' 'nowfsecurity' 'nolto')
up2date="lynx -dump http://ftp.gnu.org/pub/gnu/gcc/|grep gcc-.*/$|sed -n 's|.*gcc-\(.*\)/|\1|;$ p'"
source=(http://ftp.gnu.org/pub/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.xz)
sha1sums=('81614dacd8625a3896a57df375b695dba0c75f36')

## nothing should use that however ..
replaces=('lib32-gcc')
provides=('lib32-gcc')

if Fuse $USE_SHARED; then
	subpkgs=('libgcc' 'libssp' 'libgomp' 'libatomic')
	subdescs=('GCC shared support library' \
	'SSP libraries from GCC' 'GNU OpenMP runtime library' 'Atomic libraries from GCC')
	subrodepends=('glibc' 'glibc' 'glibc' 'glibc')
	subgroups=('base chroot-core devel-core' 'lib' 'lib' 'lib')
	subprovides=('lib32-libgcc' 'lib32-libssp' 'lib32-libgomp' 'lib32-libatomic')
	subreplaces=('lib32-libgcc' 'lib32-libssp' 'lib32-libgomp' 'lib32-libatomic')
fi
if Fuse $USE_CXX; then
	subpkgs=("${subpkgs[@]}" 'libstdc++' 'gcc-g++')
	subdescs=("${subdescs[@]}" 'GNU Standard C++ Library' 'C++ support for GCC')
	subrodepends=("${subrodepends[@]}" 'libgcc' 'libstdc++ gcc')
	subgroups=("${subgroups[@]}" 'base chroot-core devel-core' 'devel devel-core')
	subprovides=("${subprovides[@]}" 'lib32-libstdc++' 'lib32-gcc-g++')
	subreplaces=("${subreplaces[@]}" 'lib32-libstdc++' 'lib32-gcc-g++')
fi
if Fuse $USE_OBJC; then
	subpkgs=("${subpkgs[@]}" 'libobjc' 'gcc-objc' 'gcc-objc++')
	subdescs=("${subdescs[@]}" 'Objective-C runtime' 'Objective-C support for GCC' 'Objective-C++ support for GCC')
	subrodepends=("${subrodepends[@]}" 'libgcc' 'libobjc gcc' 'gcc-objc gcc-g++')
	subgroups=("${subgroups[@]}" 'lib-extra' 'devel-extra' 'devel-extra')
	subprovides=("${subprovides[@]}" 'lib32-libobjc' 'lib32-gcc-objc' 'lib32-gcc-objc++')
	subreplaces=("${subreplaces[@]}" 'lib32-libobjc objc objc-bootstrap' 'lib32-gcc-objc' 'lib32-gcc-objc++')
fi

if Fuse $USE_FORTRAN; then
	subpkgs=("${subpkgs[@]}" 'libquadmath' 'libgfortran' 'gcc-gfortran')
	subdescs=("${subdescs[@]}" 'Quadruple Precision Math library from GCC' 'Fortran 95 runtime' 'Fortran 95 support for GCC')
	subrodepends=("${subrodepends[@]}" 'glibc' 'libgcc libquadmath' 'libgfortran gcc')
	subgroups=("${subgroups[@]}" 'lib' 'lib' 'devel-extra')
	subprovides=("${subprovides[@]}" 'lib32-libquadmath' 'lib32-libgfortran' 'lib32-gcc-gfortran')
	subreplaces=("${subreplaces[@]}" 'lib32-libquadmath' 'lib32-libgfortran' 'lib32-gcc-gfortran')
fi

if Fuse $USE_GDC; then
    subpkgs=("${subpkgs[@]}" 'gcc-gdc')
    subdescs=("${subdescs[@]}"  'D support for GCC')
    subrodepends=("${subrodepends[@]}" 'libgcc libmpc mpfr gmp zlib')
    subgroups=("${subgroups[@]}" 'devel-extra')
    subprovides=("${subprovides[@]}" '')
    subreplaces=("${subreplaces[@]}" '')
fi

i=0
while [ $i -lt ${#subpkgs[@]} ]
do
	subarchs=("${subarchs[@]}" "x86_64")
	#suboptions=("${suboptions[@]}" "nostrip")
	i=$(($i+1))
done


build()
{
	Fcd
	Fsed 'lib64' 'lib' gcc/config/i386/t-linux64

	# no fixincludes, thanks
	Fsed '\./fixinc\.sh' '-c true' gcc/Makefile.in

	Fpatchall

	mkdir -p ../$pkgname-build || Fdie
	cd ../$pkgname-build || Fdie

	langlist="c"
	if Fuse $USE_CXX; then
		langlist="$langlist,c++"

		Fconfopts+=" --enable-__cxa_atexit \
			--enable-libstdcxx-allocator=new \
			--enable-libstdcxx-dual-abi \
			--disable-libstdcxx-pch \
			--enable-linux-futex \
			--with-default-libstdcxx-abi=new"
	fi

	Fuse $USE_OBJC && langlist="$langlist,objc,obj-c++"
	Fuse $USE_GDC && langlist="$langlist,d"

	if Fuse $USE_FORTRAN; then
		langlist="$langlist,fortran"
		Fconfopts+=" --enable-libquadmath --enable-libquadmath-support"
	else
		Fconfopts+=" --disable-libquadmath --disable-libquadmath-support"
	fi

	_F_conf_configure=../$_F_cd_path/configure
	CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" XCFLAGS="$CFLAGS" TCFLAGS="$CFLAGS"
	Fconf \
		--enable-bootstrap --with-build-config=bootstrap-lto-lean \
		--enable-languages=$langlist \
		--enable-multilib \
		--enable-lto \
		--enable-clocale=gnu \
		--disable-libgo \
		--enable-shared \
		--disable-libunwind-exceptions \
		--verbose \
		--with-diagnostics-color=auto-if-env \
		--enable-gold=yes \
		--enable-ld=default \
		--enable-threads=posix \
		--with-system-zlib \
		--libdir=/usr/lib \
		--libexecdir=/usr/lib \
		--disable-werror \
		--with-bugurl="http://bugs.frugalware.org/" \
		--with-pkgversion="Frugalware Linux" \
		--enable-plugin \
		--enable-checking=release \
		--enable-default-pie \
		--enable-default-ssp \
		--enable-linker-build-id \
		--with-linker-hash-style=gnu \
		--enable-gnu-indirect-function \
		--enable-gnu-unique-object \
		--host=$CHOST \
		--build=$CHOST \
		--target=$CHOST

	if Fuse $USE_SHARED; then
		Fexec make  STAGE_CC_WRAPPER="$FCC" BOOT_CFLAGS="$CFLAGS" || Fdie
	else
		Fexec make all-gcc || Fdie
	fi

	if Fuse $USE_SHARED; then
		Fmakeinstall
	else
		Fexec make install-gcc DESTDIR=$Fdestdir || Fdie
	fi

	if [ -d $Fdestdir/usr/lib64 ]; then
               mv -f $Fdestdir/usr/lib64/* $Fdestdir/usr/lib/ || Fdie
               rm -rf $Fdestdir/usr/lib64 || Fdie
       fi


	# fix some junk in la files
	for lafile in `find $Fdestdir -name "*.la"`
        do
                sed -i 's|-L.*/gcc-build/.*/./gcc||g' $lafile
        done

	# symlinks for backward compatibility
	Fln gcc /usr/bin/cc
	Fln x86_64-frugalware-linux-gcc /usr/bin/x86_64-frugalware-linux-cc
	Fmkdir /lib
	Fln /usr/bin/cpp /lib/cpp

	gcchost="$CHOST"

	# libffi is internal don't expose it
	Frm usr/lib/libffi*
	Frm usr/lib/gcc/$gcchost/$gccver/include/ffi*
	Frm $Fmandir/man3/ffi\*


	if Fuse $USE_FORTRAN; then
		## 32bit
		Fsplit libquadmath usr/lib32/libquadmath.*
		Fsplit libgfortran usr/lib32/libgfortran.*

		Fln gfortran /usr/bin/f95
		# libquadmath
		Fsplit libquadmath usr/lib/libquadmath.*
		Fsplit libquadmath usr/share/info/libquadmath.info
		# libgfortran
		#Fsplit libgfortran usr/lib/gcc/$gcchost/$gccver/libgfortranbegin.*
		Fsplit libgfortran usr/lib/libgfortran.*
		# gcc-gfortran
		Fsplit gcc-gfortran usr/bin/{gfortran,$gcchost-gfortran,f95}
		Fsplit gcc-gfortran usr/share/man/man1/gfortran.1*
		Fsplit gcc-gfortran usr/share/info/gfortran*
		Fsplit gcc-gfortran usr/lib/gcc/$gcchost/$gccver/f951
	fi
	if Fuse $USE_OBJC; then

		## 32bit
		Fsplit libobjc usr/lib32/libobjc*
		# libobjc
		Fsplit libobjc usr/lib/gcc/$gcchost/$gccver/include/objc/
		Fsplit libobjc usr/lib/libobjc*
		# gcc-objc
		Fsplit gcc-objc usr/lib/gcc/$gcchost/$gccver/cc1obj
		# gcc-objc++
		Fsplit gcc-objc++ usr/lib/gcc/$gcchost/$gccver/cc1objplus
	fi
	if Fuse $USE_CXX; then

		## 32bit
		Fmv usr/lib32/libstdc++.*-gdb.py usr/share/gcc-$gccver/python/libstdcxx
		Fsplit libstdc++ usr/lib32/libstdc++.*
		Fsplit libstdc++ usr/lib32/libstdc++fs.*
		Fsplit gcc-g++ usr/lib32/libsupc++.*

		Fln g++ /usr/bin/c++
		# libstdc++
		Fsplit libstdc++ usr/include/c++/
		Fmv usr/lib/libstdc++.*-gdb.py usr/share/gcc-$gccver/python/libstdcxx
		Fsplit libstdc++ usr/lib/libstdc++.*
		## this is a experimental lib in 5.3++ .. only static
		Fsplit libstdc++ usr/lib/libstdc++fs.*
		Fsplit libstdc++ usr/share/locale/{de,fr}/LC_MESSAGES/libstdc++.mo
		#gcc-g++
		Fsplit gcc-g++ usr/share/gcc-$gccver/
		Fsplit gcc-g++ usr/bin/{,$gcchost-}{c++,g++}
		Fsplit gcc-g++ usr/lib/libsupc++.*
		Fsplit gcc-g++ usr/lib/gcc/$gcchost/$gccver/cc1plus
		Fsplit gcc-g++ usr/share/man/man1/g++.1
	fi
	if Fuse $USE_SHARED; then

		## 32bit
		Fsplit libgcc usr/lib32/libgcc_*
		Fsplit libssp usr/lib32/libssp*
		Fsplit libgomp usr/lib32/libgomp.*
		Fsplit libatomic usr/lib32/libatomic.*

		# libgcc
		Fsplit libgcc usr/lib/libgcc_*
		# libssp
		Fsplit libssp usr/lib/libssp*
		Fsplit libssp usr/lib/gcc/$gcchost/$gccver/include/ssp/
		# libgomp
		Fsplit libgomp usr/share/info/libgomp.info
		Fsplit libgomp usr/lib/gcc/$gcchost/$gccver/include/omp.h
		Fsplit libgomp usr/lib/libgomp.*
		# libatomic
		Fsplit libatomic usr/lib/libatomic.*
	fi

	if Fuse $USE_GDC; then
		Fsplit gcc-gdc usr/bin/{gdc,x86_64-frugalware-linux-gdc}
		Fsplit gcc-gdc usr/lib/gcc/$gcchost/$gccver/d21
		Fsplit gcc-gdc usr/lib/gcc/$gcchost/$gccver/include/d
		Fsplit gcc-gdc usr/{lib,lib32}/{libgdruntime.*,libgphobos.*}
		Fsplit gcc-gdc usr/share/info/gdc.*
		Fsplit gcc-gdc usr/share/man/man1/gdc*
	fi

	## maybe llvm32 will need these too , not-so-sure :)
	for i in /usr/lib/gcc/$gcchost/$gccver/32/{crtbegin.o,crtend.o,libgcc.a}; do
		Fln $i /usr/lib32/$(basename $i)
	done

	cat stage1-gcc/specs > $Fdestdir/usr/lib/gcc/$gcchost/$gccver/32/specs || Fdie
	cat stage1-gcc/specs > $Fdestdir/usr/lib/gcc/$gcchost/$gccver/specs || Fdie

	# llvm needs these.
	for i in /usr/lib/gcc/$gcchost/$gccver/{crtbegin.o,crtend.o,libgcc.a}; do
		Fln $i /usr/lib/$(basename $i)
	done
}

# optimization OK
