# Compiling Time: 4.74 SBU
# Maintainer: Marius Cirsta <mcirsta@frugalware.org>

pkgname=llvm
pkgver=15.0.0
pkgrel=1
gcc_ver=12.2.0
url="http://www.llvm.org"
pkgdesc="Low Level Virtual Machine (Compiler , Tools and Libs)"
depends=("libstdc++>=${gcc_ver}")
makedepends=('groff' 'libffi' 'python3-sphinx' 'ocaml-ctypes>=0.18' \
	'ocaml-findlib>=1.8.1' 'ncurses>=6.0-16' 'lib32-libffi' 'lib32-libxml2' \
	'python3-recommonmark' "libstdc++>=${gcc_ver}" 'binutils>=2.32' 'mpfr' 'lib32-elfutils' \
	'glibc>=2.35' "gcc>=${gcc_ver}" "python3-sphinx-markdown-tables" \
	"python3-markdown" "python3-importlib-metadata" "python3-sphinx-automodapi")
rodepends=("$pkgname-libs")
groups=('devel')
archs=("x86_64")

_F_github_author=llvm
_F_github_name=llvm-project
_F_github_tag=yes
_F_github_grepv="rc1\|rc2\|rc3\|rc4\|init"
Finclude github
up2date="$up2date | sed 's/llvmorg-//'"
source=(https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/$pkgname-project-$pkgver.src.tar.xz)
_F_archive_ver="${pkgver}.src"
_F_cd_path="llvm-project-${_F_archive_ver}"
signatures=("${source[0]}.sig")

_F_cross32_delete=('usr/docs' 'usr/share' \
	'usr/lib/ocaml' 'usr/libexec/' 'usr/lib')
Finclude cross32 python

subpkgs=("clang")
subdescs=("C/C++ language family frontend for LLVM")
subdepends=("libxml2 libffi>=3.4")
subrodepends=("clang-libs>=$pkgver")
subgroups=('devel')
subarchs=("x86_64")

subpkgs+=("clang-libs")
subdescs+=("C/C++ language family frontend for LLVM Libs")
subdepends+=("libxml2 libffi>=3.4")
subrodepends+=("$pkgname-libs>=$pkgver")
subgroups+=('lib')
subarchs+=("x86_64")

subpkgs+=("lib32-clang")
subdescs+=("C/C++ language family frontend for LLVM (32-bit)")
subdepends+=("lib32-libxml2 lib32-libffi>=3.4")
subrodepends+=("lib32-clang-libs>=$pkgver")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-clang-libs")
subdescs+=("C/C++ language family frontend for LLVM Libs (32-bit)")
subdepends+=("lib32-libxml2 lib32-libffi>=3.4")
subrodepends+=("lib32-$pkgname-libs>=$pkgver")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("compiler-rt")
subdescs+=("Compiler runtime libraries for clang")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel')
subarchs+=("x86_64")

subpkgs+=("$pkgname-ocaml")
subdescs+=("OCaml bindings for LLVM")
subdepends+=("ocaml>=4.10.0")
subrodepends+=("$pkgname>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("libc++")
subdescs+=("A new implementation of the C++ standard library")
subdepends+=("libgcc")
subrodepends+=("")
subgroups+=('lib-extra')
subarchs+=("x86_64")

subpkgs+=("$pkgname-libs")
subdescs+=("LLVM shared libs")
subdepends+=("ncurses>=6.0-16 libedit>=20190324_3.1 libffi>=3.4")
subrodepends+=("")
subgroups+=('lib')
subarchs+=("x86_64")

subpkgs+=("clang-static")
subdescs+=("C/C++ language family frontend for LLVM (static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-${pkgname}-libs")
subdescs+=("LLVM shared libs (32-bit)")
subdepends+=("lib32-ncurses>=6.0-12 lib32-libedit>=20160903_3.1i lib32-libffi>=3.4")
subrodepends+=("")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-${pkgname}")
subdescs+=("Low Level Virtual Machine (Compiler, Tools and Libs) (32-bit)")
subdepends+=("libstdc++>=${gcc_ver}")
subrodepends+=("")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("${pkgname}-static")
subdescs+=("Low Level Virtual Machine (Compiler, Tools and Libs) (static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-${pkgname}-static")
subdescs+=("Low Level Virtual Machine (Compiler, Tools and Libs) (32-bit static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-clang-static")
subdescs+=("C/C++ language family frontend for LLVM (32-bit static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("compiler-rt-static")
subdescs+=("Compiler runtime libraries for clang (static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("libc++-static")
subdescs+=("A new implementation of the C++ standard library (static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("$pkgname-ocaml-static")
subdescs+=("OCaml bindings for LLVM (static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("lld")
subdescs+=("LLVM Linker")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("polly")
subdescs+=("High-level loop and data-locality optimizer and optimization infrastructure for LLVM")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("openmp")
subdescs+=("LLVM OpenMP Runtime Library")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("pstl")
subdescs+=("LLVM Parallel STL")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("lldb")
subdescs+=("Next generation, high-performance debugger")
subdepends+=("")
subrodepends+=("clang>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("mlir")
subdescs+=("Multi-Level Intermediate Representation")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

# Common CMake options
_F_cmake_type="Release"
_F_cmake_use_ninja=true
_F_cmake_src_dir="llvm"
_common_cmake_confopts="	-DCMAKE_INSTALL_PREFIX=/usr \
				-DLLVM_BUILD_LLVM_DYLIB=ON \
				-DLLVM_LINK_LLVM_DYLIB=ON \
				-DLLVM_ENABLE_RTTI=ON \
				-DLLVM_INSTALL_UTILS=ON \
				-DLLVM_ENABLE_FFI=ON \
				-DLIBOMP_INSTALL_ALIASES=OFF \
				-DCMAKE_DISABLE_FIND_PACKAGE_CUDA=ON \
				-DC_INCLUDE_DIRS=/usr/local/include:/usr/include/c++/${gcc_ver}:/usr/include/c++/${gcc_ver}/backward:/usr/include/c++/${gcc_ver}/${CARCH}-frugalware-linux:/usr/include:/usr/lib/clang/${pkgver}/include \
				-DLLVM_BINUTILS_INCDIR=/usr/include"
Finclude cmake
options+=('static' 'nolto')
_Fbuild_no_patch=yes


build() {

	Fcross32_prepare
	Fcross32_copy_source

	## 32-bit CMake options
	_F_cmake_confopts="	${_common_cmake_confopts}
				-DLLVM_ENABLE_PROJECTS=clang;clang-tools-extra \
				-DLLVM_LIBDIR_SUFFIX=32 \
				-DCMAKE_CXX_FLAGS:STRING=-m32 \
				-DFFI_INCLUDE_DIR=$(pkg-config --cflags-only-I libffi | cut -c3-) \
				-DLLVM_TARGET_ARCH:STRING=i686 \
				-DLLVM_ENABLE_OCAMLDOC=OFF \
	                        -DLLVM_HOST_TRIPLE=i686-frugalware-linux \
                                -DLLVM_DEFAULT_TARGET_TRIPLE=i686-frugalware-linux"

	# Hack
	export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$Fsrcdir/$_F_cd_path/${_F_cmake_build_dir}/lib32"

	CMake_make
	CMake_install

	Fcross32_copy_back_source
	Fcross32_reset_and_fix
	Fcross32_delete_empty

	Fsplit lib32-clang-static usr/lib32/libclang*.a
	Fsplit lib32-clang-static usr/lib32/libfindAllSymbols.a

	Fsplit lib32-clang usr/i686-frugalware-linux/bin/clang*
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/c-index-test
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/analyze-build
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/diagtool
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/hmaptool
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/intercept-build
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/pp-trace
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/scan-*

	Fsplit lib32-clang usr/i686-frugalware-linux/include/clang*
	Fsplit lib32-clang usr/lib32/clang/
	Fsplit lib32-clang-libs usr/lib32/libclang*

	Fsplit lib32-clang usr/i686-frugalware-linux/bin/find-all-symbols
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/modularize
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/git-clang-format
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/run-clang-tidy

	Fsplit lib32-clang usr/lib32/cmake/clang/

	Fmkdir usr/bin/
	Fmv usr/i686-frugalware-linux/bin/llvm-config usr/bin/llvm-config32


	Fsplit lib32-$pkgname-libs usr/lib32/\*.so\*

	Fsplit lib32-$pkgname-static usr/lib32/*.a
	Fsplit lib32-$pkgname /\*

	## 64-bit CMake options
	_F_cmake_confopts="    ${_common_cmake_confopts} \
				-DLLVM_ENABLE_PROJECTS=clang;clang-tools-extra;compiler-rt;mlir;libcxx;libcxxabi;lld;lldb;openmp;polly;pstl \
				-DFFI_INCLUDE_DIR=$(pkg-config --cflags-only-I libffi | cut -c3-) \
		                -DLLVM_HOST_TRIPLE=${CARCH}-frugalware-linux \
	                        -DLLVM_BUILD_DOCS=ON \
                                -DLLVM_ENABLE_SPHINX=ON \
                                -DLLVM_ENABLE_DOXYGEN=OFF \
                                -DSPHINX_WARNINGS_AS_ERRORS=OFF \
                                -DLLVM_DEFAULT_TARGET_TRIPLE=${CARCH}-frugalware-linux"

	Fcd
	export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$Fsrcdir/$_F_cd_path/${_F_cmake_build_dir}/lib"

	CMake_make
	Fexec ninja ocaml_doc || Fdie

	CMake_install

	## Lit
	Fexec cd ../llvm/utils/lit || Fdie
	Fexec  python3 setup.py install --root="$Fdestdir" -O1 || Fdie
	Fexec cd $Fsrcdir/${_F_cd_path}/$_F_cmake_build_dir || Fdie

  	Fmv usr/lib/libear "${_F_python3_libdir}/"
	Fmv usr/lib/libscanbuild "${_F_python3_libdir}/"

	## Python bindings
	Fmkdir ${_F_python_libdir}
	Fexec python -m compileall $Fdestdir/${_F_python_libdir}
	Fexec python -O -m compileall $Fdestdir/${_F_python_libdir}
	Fexec python -m compileall $Fdestdir/usr/share
	Fexec python -O -m compileall $Fdestdir/usr/share

        ## Pytho3n bindings
        Fmkdir ${_F_python3_libdir}
        Fexec python3 -m compileall $Fdestdir/${_F_python3_libdir}
        Fexec python3 -O -m compileall $Fdestdir/${_F_python3_libdir}
        Fexec python3 -m compileall $Fdestdir/usr/share
        Fexec python3 -O -m compileall $Fdestdir/usr/share

	# Install html docs of llvm-ocaml
	Fmkdir usr/share/doc/$pkgname-$pkgver/ocamldoc
	Fcp ${_F_cd_path}/${_F_cmake_build_dir}/docs/ocamldoc/html/* usr/share/doc/$pkgname-$pkgver/ocamldoc

	 Fsplit compiler-rt-static /usr/lib/clang/$pkgver/lib/${CARCH}-frugalware-linux/libclang_rt*.a

	Fsplit compiler-rt usr/lib/clang/${pkgver}/include/sanitizer
	Fsplit compiler-rt usr/lib/clang/${pkgver}/include/xray
	Fsplit compiler-rt usr/lib/clang/${pkgver}/lib/
	Fsplit compiler-rt usr/lib/clang/${pkgver}/share/


       Fsplit clang-static usr/lib/libclang*.a
       Fsplit clang-static usr/lib/libfindAllSymbols.a

       Fsplit clang usr/bin/clang*
       Fsplit clang usr/bin/c-index-test
       Fsplit clang usr/bin/scan-build
       Fsplit clang usr/bin/scan-view
       Fsplit clang usr/include/clang*
       Fsplit clang usr/lib/clang/

       Fsplit clang-libs usr/lib/libclang*


       Fsplit clang usr/share/man/man1/clang*
       Fsplit clang usr/share/doc/LLVM/clang
       Fsplit clang usr/share/doc/LLVM/clang-tools
       Fsplit clang usr/lib/cmake/clang/

       Fsplit clang usr/bin/{find-all-symbols,modularize,scan-build-py,analyze-build,diagtool,hmaptool,intercept-build,pp-trace}
       Fsplit clang $_F_python3_libdir/{libear,libscanbuild}
       Fsplit clang usr/share/clang/
       Fsplit clang usr/share/opt-viewer/
       Fsplit clang usr/share/scan-view/
	Fsplit clang usr/share/scan-build/
	Fsplit clang usr/bin/git-clang-format
	Fsplit clang usr/bin/run-clang-tidy
	Fsplit clang usr/share/man/man1/extraclangtools.1*
	Fsplit clang usr/share/man/man1/diagtool.1*
	Fsplit clang usr/share/man/man1/scan-build.1*

	Fsplit $pkgname-ocaml-static usr/lib/ocaml/llvm/*.a
	Fsplit $pkgname-ocaml usr/lib/ocaml/
	Fsplit $pkgname-ocaml usr/lib/cmake/llvm/{Find,Add}OCaml.cmake

	Fsplit libc++-static usr/lib/x86_64-frugalware-linux/libc++*.a
	Fsplit libc++ usr/lib/x86_64-frugalware-linux/libc++*
	Fsplit libc++ usr/include/c++/
	Fsplit libc++ usr/share/doc/LLVM/libcxx/

        Fsplit lldb usr/bin/lldb*
        Fsplit lldb usr/lib/liblldb*
        Fsplit lldb usr/include/lldb

	Fsplit lld usr/bin/ld64.lld*
	Fsplit lld usr/bin/ld.lld
	Fsplit lld usr/bin/lld*
	Fsplit lld usr/lib/cmake/lld/
	Fsplit lld usr/lib/liblld*
	Fsplit lld usr/bin/wasm-ld

	Fsplit lld usr/share/doc/LLVM/lld
	Fsplit lld usr/include/lld

	Fsplit polly usr/share/doc/LLVM/polly/
	Fsplit polly usr/include/polly/
	Fsplit polly usr/lib/cmake/polly/
	Fsplit polly usr/share/man/man1/polly*
	Fsplit polly usr/lib/LLVMPolly*
	Fsplit polly usr/lib/libPolly*

	Fsplit openmp usr/share/doc/LLVM/openmp
	Fsplit openmp usr/lib/cmake/openmp/
	Fsplit openmp usr/share/man/man1/llvmopenmp*
	Fsplit openmp usr/lib/libomptarget*
	Fsplit openmp usr/lib/libomp*
	Fsplit openmp usr/lib/libarcher*
	Fsplit openmp usr/include/ompt-multiplex.h
	Fsplit openmp usr/bin/llvm-omp-device-info

	Fsplit pstl usr/include/pstl/
	Fsplit pstl usr/include/__pstl*
	Fsplit pstl usr/lib/cmake/ParallelSTL/

	Fsplit mlir usr/include/mlir*
	Fsplit mlir usr/lib/cmake/mlir
	Fsplit mlir usr/bin/mlir-*
	Fsplit mlir usr/lib/libmlir*
	Fsplit mlir usr/lib/libMLIR*

	Fsplit $pkgname-static usr/lib/*.a
	Fsplit $pkgname-libs usr/lib/*.so*
}

# optimization OK
