# Compiling Time: 4.74 SBU
# Maintainer: Marius Cirsta <mcirsta@frugalware.org>

pkgname=llvm
pkgver=16.0.6
pkgrel=5
gcc_ver=13.2.0
url="http://www.llvm.org"
pkgdesc="Low Level Virtual Machine (Compiler , Tools and Libs)"
depends=("libstdc++>=${gcc_ver}" 'python3>=3.12')
makedepends=('groff' 'libffi' 'python3-sphinx' 'ncurses>=6.0-16' 'lib32-libffi' 'lib32-libxml2' \
	'python3-recommonmark' "libstdc++>=${gcc_ver}" 'binutils>=2.32' 'mpfr' 'lib32-elfutils' \
	'glibc>=2.35' "gcc>=${gcc_ver}" "python3-sphinx-markdown-tables" \
	"python3-markdown" "python3-importlib-metadata" "python3-sphinx-automodapi")
rodepends=("$pkgname-libs")
groups=('devel')
archs=("x86_64")

_F_github_author=llvm
_F_github_name=llvm-project
_F_github_tag=yes
_F_github_grepv="rc1\|rc2\|rc3\|rc4\|init"
Finclude github
up2date="$up2date | sed 's/llvmorg-//'"
source=(https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/$pkgname-project-$pkgver.src.tar.xz \
	gcc13.patch )
_F_archive_ver="${pkgver}.src"
_F_cd_path="llvm-project-${_F_archive_ver}"
sha1sums=('92eaedd6f1dde08751441afcd0a3d0fbfdf95d42' \
          '557bbc3a63a6cf4fbdb753317de84904f0593813')

_F_cross32_delete=('usr/docs' 'usr/share' 'usr/libexec/' 'usr/lib')
Finclude cross32 python

subpkgs=("llvm-python")
subdescs=("llvm python binding")
subdepends=("python3")
subrodepends=("llvm-libs>=$pkgver")
subgroups=('devel-extra')
subarchs=("x86_64")

subpkgs+=("clang")
subdescs+=("C/C++ language family frontend for LLVM")
subdepends+=("libxml2 libffi>=3.4")
subrodepends+=("clang-libs>=$pkgver")
subgroups+=('devel')
subarchs+=("x86_64")

subpkgs+=("clang-python")
subdescs+=("clang python binding")
subdepends+=("python3")
subrodepends+=("clang-libs>=$pkgver")
subgroups+=('devel')
subarchs+=("x86_64")

subpkgs+=("clang-libs")
subdescs+=("C/C++ language family frontend for LLVM Libs")
subdepends+=("libxml2 libffi>=3.4")
subrodepends+=("$pkgname-libs>=$pkgver")
subgroups+=('lib')
subarchs+=("x86_64")

subpkgs+=("lib32-clang")
subdescs+=("C/C++ language family frontend for LLVM (32-bit)")
subdepends+=("lib32-libxml2 lib32-libffi>=3.4")
subrodepends+=("lib32-clang-libs>=$pkgver")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-clang-libs")
subdescs+=("C/C++ language family frontend for LLVM Libs (32-bit)")
subdepends+=("lib32-libxml2 lib32-libffi>=3.4")
subrodepends+=("lib32-$pkgname-libs>=$pkgver")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("compiler-rt")
subdescs+=("Compiler runtime libraries for clang")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel')
subarchs+=("x86_64")

subpkgs+=("$pkgname-libs")
subdescs+=("LLVM shared libs")
subdepends+=("ncurses>=6.0-16 libedit>=20190324_3.1 libffi>=3.4 zstd")
subrodepends+=("")
subgroups+=('lib')
subarchs+=("x86_64")

subpkgs+=("clang-static")
subdescs+=("C/C++ language family frontend for LLVM (static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-${pkgname}-libs")
subdescs+=("LLVM shared libs (32-bit)")
subdepends+=("lib32-ncurses>=6.0-12 lib32-libedit>=20160903_3.1i lib32-libffi>=3.4 lib32-zstd")
subrodepends+=("")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-${pkgname}")
subdescs+=("Low Level Virtual Machine (Compiler, Tools and Libs) (32-bit)")
subdepends+=("libstdc++>=${gcc_ver}")
subrodepends+=("")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("${pkgname}-static")
subdescs+=("Low Level Virtual Machine (Compiler, Tools and Libs) (static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-${pkgname}-static")
subdescs+=("Low Level Virtual Machine (Compiler, Tools and Libs) (32-bit static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("lib32-clang-static")
subdescs+=("C/C++ language family frontend for LLVM (32-bit static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('lib32-extra')
subarchs+=("x86_64")

subpkgs+=("compiler-rt-static")
subdescs+=("Compiler runtime libraries for clang (static)")
subdepends+=("")
subrodepends+=("")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("lld")
subdescs+=("LLVM Linker")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("openmp")
subdescs+=("LLVM OpenMP Runtime Library")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("lldb")
subdescs+=("Next generation, high-performance debugger")
subdepends+=("")
subrodepends+=("clang>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("mlir")
subdescs+=("Multi-Level Intermediate Representation")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")

subpkgs+=("mlir-static")
subdescs+=("Multi-Level Intermediate Representation (static)")
subdepends+=("")
subrodepends+=("llvm-libs>=$pkgver")
subgroups+=('devel-extra')
subarchs+=("x86_64")


# Common CMake options
_F_cmake_type="Release"
_F_cmake_use_ninja=true
_F_cmake_src_dir="llvm"
_common_cmake_confopts="	-DCMAKE_INSTALL_PREFIX=/usr \
				-DLLVM_BUILD_LLVM_DYLIB=ON \
				-DLLVM_LINK_LLVM_DYLIB=ON \
				-DLLVM_ENABLE_RTTI=ON \
				-DLLVM_INSTALL_UTILS=ON \
				-DLLVM_ENABLE_FFI=ON \
				-DLIBOMP_INSTALL_ALIASES=OFF \
				-DCMAKE_SKIP_RPATH=ON \
				-DLLVM_USE_PERF=ON \
				-DLLVM_ENABLE_LTO=ON \
				-DLIBOMP_USE_VERSION_SYMBOLS=OFF \
				-DLIBOMPTARGET_BUILD_CUDA_PLUGIN=OFF \
				-DLIBOMPTARGET_BUILD_AMDGPU_PLUGIN=OFF \
				-DLLVM_BINUTILS_INCDIR=/usr/include"
Finclude cmake
options+=('static' 'nolto')

_get_distribution_components() {
  local target
  ninja -C $_F_cmake_build_dir -t targets | grep -Po 'install-\K.*(?=-stripped:)' | while read -r target; do
    case $target in
      llvm-libraries|distribution)
        continue
        ;;
      # shared libraries
      LLVM|LLVMgold)
        ;;
      # libraries needed for clang-tblgen
      LLVMDemangle|LLVMSupport|LLVMTableGen)
        ;;
      # exclude static libraries
      LLVM*)
        continue
        ;;
    esac
    echo $target
  done
}

build() {
	Fcd

	Fcross32_prepare
	Fcross32_copy_source

	## 32-bit CMake options
	_F_cmake_confopts="	${_common_cmake_confopts}
				-DLLVM_ENABLE_PROJECTS=clang \
				-DLLVM_LIBDIR_SUFFIX=32 \
				-DCMAKE_CXX_FLAGS:STRING=-m32 \
				-DCMAKE_C_FLAGS:STRING=-m32 \
				-DCMAKE_CXX_FLAGS:STRING=-m32 \
				-DLLVM_TARGET_ARCH:STRING=i686 \
				-DLLVM_ENABLE_OCAMLDOC=OFF \
	                        -DLLVM_HOST_TRIPLE=i686-frugalware-linux \
				-DLLVM_BUILD_DOCS=OFF \
				-DLLVM_ENABLE_SPHINX=OFF \
				-DLLVM_ENABLE_BINDINGS=OFF \
				-DLLVM_DEFAULT_TARGET_TRIPLE=i686-frugalware-linux"

	# Hack
	export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$Fsrcdir/$_F_cd_path/${_F_cmake_build_dir}/lib32"


        CMake_prepare_build
        CMake_conf	
	local distribution_components=$(_get_distribution_components | paste -sd\;)
	test -n "$distribution_components" || Fdie
	_F_cmake_confopts+=" -DLLVM_DISTRIBUTION_COMPONENTS=$distribution_components"
	CMake_conf

        cd $_F_cmake_build_dir || Fdie
        ${cmake_builder} || Fdie

	DESTDIR=$Fdestdir ninja install-distribution || Fdie

	Fcross32_copy_back_source
	Fcross32_reset_and_fix
	Fcross32_delete_empty

	Fsplit lib32-clang-static usr/lib32/libclang*.a

	Fsplit lib32-clang usr/i686-frugalware-linux/bin/clang*
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/c-index-test
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/analyze-build
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/diagtool
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/hmaptool
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/intercept-build
	Fsplit lib32-clang usr/i686-frugalware-linux/bin/scan-*

	Fsplit lib32-clang usr/i686-frugalware-linux/include/clang*
	Fsplit lib32-clang usr/lib32/clang/
	Fsplit lib32-clang-libs usr/lib32/libclang*

	Fsplit lib32-clang usr/i686-frugalware-linux/bin/git-clang-format

	Fsplit lib32-clang usr/lib32/cmake/clang/

	Fsplit lib32-$pkgname-libs usr/lib32/\*.so\*

	Fln /usr/lib32 usr/i686-frugalware-linux/
	Fsplit lib32-$pkgname-static usr/lib32/*.a
	Fsplit lib32-$pkgname /\*

	## 64-bit CMake options
	_F_cmake_confopts="    ${_common_cmake_confopts} \
				-DLLVM_ENABLE_PROJECTS=clang;clang-tools-extra;compiler-rt;mlir;lld;lldb;openmp \
				-DLIBOMPTARGET_BUILD_DEVICERTL_BCLIB=OFF \
				-DFFI_INCLUDE_DIR=$(pkg-config --cflags-only-I libffi | cut -c3-) \
		                -DLLVM_HOST_TRIPLE=${CARCH}-frugalware-linux \
	                        -DLLVM_BUILD_DOCS=ON \
                                -DLLVM_ENABLE_SPHINX=ON \
                                -DLLVM_ENABLE_DOXYGEN=OFF \
                                -DSPHINX_WARNINGS_AS_ERRORS=OFF \
                                -DLLVM_DEFAULT_TARGET_TRIPLE=${CARCH}-frugalware-linux"

	Fcd
	export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$Fsrcdir/$_F_cd_path/${_F_cmake_build_dir}/lib"

        CMake_prepare_build
        CMake_conf
        distribution_components=$(_get_distribution_components | paste -sd\;)
        test -n "$distribution_components" || Fdie
        _F_cmake_confopts+=" -DLLVM_DISTRIBUTION_COMPONENTS=$distribution_components"
	CMake_conf

        cd $_F_cmake_build_dir || Fdie
        ${cmake_builder} || Fdie

	DESTDIR=$Fdestdir ninja install-distribution || Fdie

	## Lit
	Fexec cd ../llvm/utils/lit || Fdie
	Fexec  python3 setup.py install --root="$Fdestdir" -O1 || Fdie
	Fexec cd $Fsrcdir/${_F_cd_path}/$_F_cmake_build_dir || Fdie

  	Fmv usr/lib/libear "${_F_python3_libdir}/"
	Fmv usr/lib/libscanbuild "${_F_python3_libdir}/"

        ## Python3 bindings
        Fmkdir ${_F_python3_libdir}
	Fcprel ../llvm/bindings/python/llvm   $_F_python3_libdir
	Fcprel ../clang/bindings/python/clang $_F_python3_libdir

        Fexec python3 -m compileall $Fdestdir/${_F_python3_libdir}
        Fexec python3 -O -m compileall $Fdestdir/${_F_python3_libdir}
        Fexec python3 -m compileall $Fdestdir/usr/share
        Fexec python3 -O -m compileall $Fdestdir/usr/share

	Fsplit compiler-rt-static usr/lib/clang/${pkgver%%.*}/lib/x86_64-frugalware-linux/libclang_rt*.a

	Fsplit compiler-rt usr/lib/clang/${pkgver%%.*}/include/sanitizer
	Fsplit compiler-rt usr/lib/clang/${pkgver%%.*}/include/xray
	Fsplit compiler-rt usr/lib/clang/${pkgver%%.*}/lib/
	Fsplit compiler-rt usr/lib/clang/${pkgver%%.*}/share/


       Fsplit clang-static usr/lib/libclang*.a
       Fsplit clang-static usr/lib/libfindAllSymbols.a

       Fsplit clang usr/bin/clang*
       Fsplit clang usr/bin/c-index-test
       Fsplit clang usr/bin/scan-build
       Fsplit clang usr/bin/scan-view
       Fsplit clang usr/include/clang*
       Fsplit clang usr/lib/clang/

       Fsplit clang-libs usr/lib/libclang*

       Fsplit clang usr/share/man/man1/clang*
       Fsplit clang usr/share/doc/LLVM/clang
       Fsplit clang usr/share/doc/LLVM/clang-tools
       Fsplit clang usr/lib/cmake/clang/

       Fsplit clang usr/bin/{find-all-symbols,modularize,scan-build-py,analyze-build,diagtool,hmaptool,intercept-build,pp-trace}
       Fsplit clang $_F_python3_libdir/{libear,libscanbuild}
       Fsplit clang usr/share/clang/
       Fsplit clang usr/share/opt-viewer/
       Fsplit clang usr/share/scan-view/
	Fsplit clang usr/share/scan-build/
	Fsplit clang usr/bin/git-clang-format
	Fsplit clang usr/bin/run-clang-tidy
	Fsplit clang usr/share/man/man1/extraclangtools.1*
	Fsplit clang usr/share/man/man1/diagtool.1*
	Fsplit clang usr/share/man/man1/scan-build.1*

	Fsplit clang-python $_F_python3_libdir/clang

        Fsplit lldb usr/bin/lldb*
        Fsplit lldb usr/lib/liblldb*
        Fsplit lldb usr/include/lldb

	Fsplit lld usr/bin/ld64.lld*
	Fsplit lld usr/bin/ld.lld
	Fsplit lld usr/bin/lld*
	Fsplit lld usr/lib/cmake/lld/
	Fsplit lld usr/bin/wasm-ld

	Fsplit lld usr/share/doc/LLVM/lld

	Fsplit openmp usr/share/doc/LLVM/openmp
	Fsplit openmp usr/share/man/man1/llvmopenmp*
	Fsplit openmp usr/lib/libomptarget*
	Fsplit openmp usr/bin/llvm-omp-device-info

	Fsplit mlir-static usr/lib/libMLIR*.a
	Fsplit mlir usr/include/mlir*
	Fsplit mlir usr/lib/cmake/mlir
	Fsplit mlir usr/bin/mlir-*
	Fsplit mlir usr/lib/libmlir*
	Fsplit mlir usr/lib/libMLIR*

	Fsplit $pkgname-static usr/lib/*.a
	Fsplit $pkgname-libs usr/lib/*.so*

	Fsplit llvm-python $_F_python3_libdir/llvm
}

# optimization OK
