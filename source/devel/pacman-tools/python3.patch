diff -Naur pacman-tools-1.3.4/chkdep pacman-tools-1.3.4.new/chkdep
--- pacman-tools-1.3.4/chkdep	2022-05-09 15:30:25.022434769 +0200
+++ pacman-tools-1.3.4.new/chkdep	2022-05-09 15:37:45.488583088 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # 
 #   chkdep
 #  
@@ -54,20 +54,20 @@
 		if i not in ignorepkgs:
 			if i in depdeps:
 				if trace:
-					print "Ignoring %s as it is already a dependency of some other dependency." % i
+					print("Ignoring %s as it is already a dependency of some other dependency." % i)
 				continue
-			gotdeps = filter(lambda x: x != i, getdeps(i))
+			gotdeps = [x for x in getdeps(i) if x != i]
 			getdeps_deps = []
 			if trace:
-				print "Depends for %s: %s." % (i, gotdeps)
+				print("Depends for %s: %s." % (i, gotdeps))
 			depdeps.extend(gotdeps)
 	for i in deps:
 		if i not in depdeps and i not in ignorepkgs:
 			newdeps.append(i)
 		elif i in depdeps and trace:
-			print "Ignoring %s as it is already a dependency of some other dependency." % i
+			print("Ignoring %s as it is already a dependency of some other dependency." % i)
 		elif i in ignorepkgs and trace:
-			print "Ignoring %s as requested." % i
+			print("Ignoring %s as requested." % i)
 	return newdeps
 
 def detect_owner(lib):
@@ -79,10 +79,10 @@
 	pkg = pacman.void_to_PM_PKG(pacman.list_getdata(pacman.pkg_getowners(lib)))
 	owner = pacman.void_to_char(pacman.pkg_getinfo(pkg, pacman.PKG_NAME))
 	if not owner and not quiet:
-		print >>sys.stderr, "WARNING: No package found containing %s!" % lib
+		print("WARNING: No package found containing %s!" % lib, file=sys.stderr)
 	elif owner not in deps:
 		if trace:
-			print "%s is an owner for %s" % (owner, lib)
+			print("%s is an owner for %s" % (owner, lib))
 		deps.append(owner)
 
 class Checks:
@@ -145,7 +145,7 @@
 				lib = lib.split(' ')[0]
 			if len(lib):
 				if trace:
-					print "'%s' links to '%s'." % (file, lib)
+					print("'%s' links to '%s'." % (file, lib))
 				libs.append(lib)
 		sock.close()
 		return libs
@@ -230,7 +230,7 @@
 	if opt in ("-t", "--trace"):
 		trace = True
 	if opt in ("-v", "--version"):
-		print "chkdep %s" % __version__
+		print("chkdep %s" % __version__)
 		sys.exit(0)
 
 if not dir and not pkg:
@@ -239,7 +239,7 @@
 
 checker = getattr(checks, method)
 
-if "FAKEROOTKEY" in os.environ.keys():
+if "FAKEROOTKEY" in list(os.environ.keys()):
 	ignorepkgs.append("fakeroot")
 
 if pkg:
@@ -261,7 +261,7 @@
 			for i in ret:
 				if i not in depfiles:
 					if trace:
-						print "Found %s as a new dependency file." % i
+						print("Found %s as a new dependency file." % i)
 					depfiles.append(i)
 for i in depfiles:
 	detect_owner(i)
@@ -270,6 +270,6 @@
 	shutil.rmtree(fpmroot)
 
 
-print "Full DEPENDS:	depends=('" + "' '".join(deps) + "')"
+print("Full DEPENDS:	depends=('" + "' '".join(deps) + "')")
 deps = rmdupdeps(deps)
-print "Cleaned up DEPENDS:   depends=('" + "' '".join(deps) + "')"
+print("Cleaned up DEPENDS:   depends=('" + "' '".join(deps) + "')")
diff -Naur pacman-tools-1.3.4/chkworld.py pacman-tools-1.3.4.new/chkworld.py
--- pacman-tools-1.3.4/chkworld.py	2022-05-09 15:30:25.022434769 +0200
+++ pacman-tools-1.3.4.new/chkworld.py	2022-05-09 15:37:45.516583288 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 #
 #   chkworld.py, a rewrite of the chkworld tool by Zsolt Szalai.
 #
@@ -36,34 +36,34 @@
 
 
 def html_preout():
-	print "<html>\n\t<head>\n\t\t<title>\n\t\t\tChkworld status\n\t\t</title>\n\t</head>\n\t<body>\n"
-	print "\t\t<i>Last updated: {0}</i>\n".format(asctime(localtime()))
-	print "\t\t<table>\n"
+	print("<html>\n\t<head>\n\t\t<title>\n\t\t\tChkworld status\n\t\t</title>\n\t</head>\n\t<body>\n")
+	print("\t\t<i>Last updated: {0}</i>\n".format(asctime(localtime())))
+	print("\t\t<table>\n")
 
 
 def html_postout():
-	print "\t\t</table>\n"
-	print "\t\t<table>\n"
-	print "\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tTotal packages checked:\n\t\t\t\t</td>"
-	print "\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(total)
-	print "\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tPassed\n\t\t\t\t</td>"
-	print "\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(passed)
-	print "\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tNeed to update:\n\t\t\t\t</td>"
-	print "\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(needupdate)
-	print "\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tTimed out:\n\t\t\t\t</td>"
-	print "\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(timeouted)
-	print "\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tMaybe broken up2date:\n\t\t\t\t</td>"
-	print "\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(maybebroken)
-	print "\t\t</table>\n"
-	print "\t</body>\n</html>\n"
+	print("\t\t</table>\n")
+	print("\t\t<table>\n")
+	print("\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tTotal packages checked:\n\t\t\t\t</td>")
+	print("\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(total))
+	print("\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tPassed\n\t\t\t\t</td>")
+	print("\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(passed))
+	print("\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tNeed to update:\n\t\t\t\t</td>")
+	print("\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(needupdate))
+	print("\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tTimed out:\n\t\t\t\t</td>")
+	print("\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(timeouted))
+	print("\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\tMaybe broken up2date:\n\t\t\t\t</td>")
+	print("\t\t\t\t<td>\n\t\t\t\t\t{0}\n\t\t\t\t</td>\n\t\t\t</tr>".format(maybebroken))
+	print("\t\t</table>\n")
+	print("\t</body>\n</html>\n")
 
 
 def std_postout():
-	print "\nTotal packages checked: {0}".format(total)
-	print "Passed                : {0}".format(passed)
-	print "Need to update        : {0}".format(needupdate)
-	print "Timed out             : {0}".format(timeouted)
-	print "Maybe broken up2date  : {0}".format(maybebroken)
+	print("\nTotal packages checked: {0}".format(total))
+	print("Passed                : {0}".format(passed))
+	print("Need to update        : {0}".format(needupdate))
+	print("Timed out             : {0}".format(timeouted))
+	print("Maybe broken up2date  : {0}".format(maybebroken))
 
 
 def find_file(filename, path, blacklist):
@@ -144,13 +144,13 @@
 			del self.queue
 
 	def print_html(self):
-		print "\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t{0}/{1}-{2}\n\t\t\t\t</td>".format(self.group, self.pkgname, self.pkgver)
+		print("\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t{0}/{1}-{2}\n\t\t\t\t</td>".format(self.group, self.pkgname, self.pkgver))
 		if self.up2date == "":
-			print "\t\t\t\t<td>\n\t\t\t\t\t<font color=\"red\">There was no output! {0}</font>\n\t\t\t\t</td>\n\t\t\t</tr>\n".format(self.m8r)
+			print("\t\t\t\t<td>\n\t\t\t\t\t<font color=\"red\">There was no output! {0}</font>\n\t\t\t\t</td>\n\t\t\t</tr>\n".format(self.m8r))
 		elif self.up2date == "TIMEOUT":
-			print "\t\t\t\t<td>\n\t\t\t\t\t<font color=\"red\">Timed out! {0}</font>\n\t\t\t\t</td>\n\t\t\t</tr>\n".format(self.m8r)
+			print("\t\t\t\t<td>\n\t\t\t\t\t<font color=\"red\">Timed out! {0}</font>\n\t\t\t\t</td>\n\t\t\t</tr>\n".format(self.m8r))
 		else:
-			print "\t\t\t\t<td>\n\t\t\t\t\t<font color=\"red\">!= {0} {1}</font>\n\t\t\t\t</td>\n\t\t\t</tr>\n".format(self.up2date, self.m8r)
+			print("\t\t\t\t<td>\n\t\t\t\t\t<font color=\"red\">!= {0} {1}</font>\n\t\t\t\t</td>\n\t\t\t</tr>\n".format(self.up2date, self.m8r))
 
 	def print_term(self):
 		if color:
@@ -162,13 +162,13 @@
 			s_broken = "There was no output!"
 			s_update = self.up2date
 
-		print "{0}/{1}-{2}".format(self.group, self.pkgname, self.pkgver),
+		print("{0}/{1}-{2}".format(self.group, self.pkgname, self.pkgver), end=' ')
 		if self.up2date == "":
-			print "   {0}   {1}".format(s_broken, self.m8r)
+			print("   {0}   {1}".format(s_broken, self.m8r))
 		elif self.up2date == "TIMEOUT":
-			print "   {0}   {1}".format(s_timeout, self.m8r)
+			print("   {0}   {1}".format(s_timeout, self.m8r))
 		else:
-			print "   != {0}   {1}".format(s_update, self.m8r)
+			print("   != {0}   {1}".format(s_update, self.m8r))
 
 	def print_wrapper(self):
 		if html:
diff -Naur pacman-tools-1.3.4/darcs-git.py pacman-tools-1.3.4.new/darcs-git.py
--- pacman-tools-1.3.4/darcs-git.py	2022-05-09 15:30:25.023434776 +0200
+++ pacman-tools-1.3.4.new/darcs-git.py	2022-05-09 15:37:45.533583410 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # 
 #   darcs-git, a darcs-like porcelain on top of git plumbing
 #  
@@ -69,10 +69,10 @@
 def bug(s=None):
 	import inspect
 	if s:
-		print("%s" % s)
+		print(("%s" % s))
 	else:
 		print("bug in darcs-git!")
-	print("at %s:%d" % inspect.stack()[1][1:3])
+	print(("at %s:%d" % inspect.stack()[1][1:3]))
 
 def emptydir(dir):
 	ret = True
@@ -236,7 +236,7 @@
 					sys.exit(0)
 					break
 				if ret == "?" or ret == "h":
-					print("""How to use %(action)s...
+					print(("""How to use %(action)s...
 y: %(action)s this patch
 n: don't %(action)s it
 
@@ -244,7 +244,7 @@
 a: %(action)s all the remaining patches
 q: cancel %(action)s
 
-h or ?: show this help""" % { 'action': action })
+h or ?: show this help""" % { 'action': action }))
 				print("Invalid response, try again!")
 		if preans != None:
 			if preans == True:
@@ -654,7 +654,7 @@
 	if not len(lines):
 		print("No recorded local changes to push!")
 		return 0
-	print("".join(lines))
+	print(("".join(lines)))
 	if not options.all:
 		while True:
 			ret = ask("Do you want to push these patches? [ynq]")
@@ -729,7 +729,7 @@
 	if not len(lines):
 		print("No remote changes to pull!")
 		return 0
-	print("".join(lines))
+	print(("".join(lines)))
 	if not options.all:
 		while True:
 			ret = ask("Do you want to pull these patches? [ynq]")
@@ -979,12 +979,12 @@
 		os.system("man darcs-git")
 		sys.exit(ret)
 	def version():
-		print("""darcs-git (pacman-tools) %s
+		print(("""darcs-git (pacman-tools) %s
 
 Copyright (c) 2007 by Miklos Vajna <vmiklos@frugalware.org>
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR \
-PURPOSE.""" % __version__)
+PURPOSE.""" % __version__))
 	if len(sys.argv) == 1 or sys.argv[1] in ["-h", "--help"]:
 		usage(0)
 	if sys.argv[1] in ["-v", "--version"]:
diff -Naur pacman-tools-1.3.4/etcconfig.py pacman-tools-1.3.4.new/etcconfig.py
--- pacman-tools-1.3.4/etcconfig.py	2013-02-13 08:03:50.000000000 +0100
+++ pacman-tools-1.3.4.new/etcconfig.py	2022-05-09 15:37:45.179580881 +0200
@@ -14,20 +14,20 @@
 def checkroot():
 	uid=os.geteuid()	
 	if uid == 0:
-		print
-		print"-- EtcUpdater --"
-		print
+		print()
+		print("-- EtcUpdater --")
+		print()
 	else:
-		print"Sorry, you must be root to run this script."
+		print("Sorry, you must be root to run this script.")
 		sys.exit()
 def checkedit():
 	p=0
 	for i in editorvars[:2]:
 		act=os.getenv(i,1)
 		if(act==1): 
-		 	print "- $%s is not accessible!" % i
+		 	print("- $%s is not accessible!" % i)
 		else:
-			print "- $%s is accessible!" % i
+			print("- $%s is accessible!" % i)
 			a_editors.append('$'+i)
 	
         for i in os.walk('/usr/bin'):
@@ -35,13 +35,13 @@
          for s in files:
 		if s in editors:
 			a_editors.append(s)
-			print "- Found %s as an alternative editor" % s
+			print("- Found %s as an alternative editor" % s)
 	        else:
 			continue
 
 if len(sys.argv) > 1:
 	if sys.argv[1] in ('-v', '--version'):
-		print "etcconfig 0.1 (pacman-tools)"
+		print("etcconfig 0.1 (pacman-tools)")
 		sys.exit()
 	elif sys.argv[1] in ('-h', '--help'):
 		os.system("man etcconfig")
@@ -61,23 +61,23 @@
         editor=a_editors.pop()
         
 	
-print "- Using <%s> as an editor -" % editor
-print '-'*17
-print '  Searching...'
-print '-'*17
+print("- Using <%s> as an editor -" % editor)
+print('-'*17)
+print('  Searching...')
+print('-'*17)
 for i in os.walk('/etc'):
  files=(i[2])
  for s in files:
       	if s.endswith(".pacnew"):
 		s=i[0]+'/'+s
 		paclist.append(s)
-		print "Found %s adding to list" % s
+		print("Found %s adding to list" % s)
 	else:
 		continue
-print '-'*17
-print 'Searching done...'
-print '-'*17
-print
+print('-'*17)
+print('Searching done...')
+print('-'*17)
+print()
 choices=['y','n','d','e','i']
 m=len(paclist)
 x=0
@@ -87,31 +87,31 @@
 	print('-->[(y=update) (n=delete .pacnew) (d=diff old) (e=edit) (i=ignore)]<--')
 while x<m:
        k=paclist[x]
-       choice=raw_input('-- %s (y,n,d,e,i): ' % k)
+       choice=input('-- %s (y,n,d,e,i): ' % k)
        korig=k.split('.pacnew')[0]
        if choice in choices:
 	       if(choice == choices[0]):
-		       print(k,korig)
+		       print((k,korig))
 		       command='mv -f %s %s' % (k,korig)
 		       os.system("%s" % command)
-		       print "Updated!"
+		       print("Updated!")
 	       	       x=x+1
 	       elif(choice == choices[1]):
 		       command='rm -f %s' % k
 		       os.system("%s" % command)
-		       print "Deleted .pacnew!"
+		       print("Deleted .pacnew!")
 	       	       x=x+1
 	       elif(choice == choices[2]):
 		       command='diff -u %s %s|less' % (korig,k)
 		       os.system("%s" % command)
-		       print "'Diff'-ed!"
+		       print("'Diff'-ed!")
 	       elif(choice == choices[3]):
-		       print "Editing..."
+		       print("Editing...")
 		       command='%s %s' % (editor,k)
 		       os.system("%s" % command)
 	       	       x=x+1
 	       elif(choice == choices[4]):
-		       print "Ignored!"
+		       print("Ignored!")
 	       	       x=x+1
 	       else:
 		       continue
diff -Naur pacman-tools-1.3.4/pear-makefb pacman-tools-1.3.4.new/pear-makefb
--- pacman-tools-1.3.4/pear-makefb	2013-02-13 08:03:50.000000000 +0100
+++ pacman-tools-1.3.4.new/pear-makefb	2022-05-09 15:37:45.327581938 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 __author__ = "Miklos Vajna <vmiklos@frugalware.org>"
 __version__ = "0.8.4"
@@ -6,7 +6,7 @@
 __copyright__ = "Copyright (c) 2006, 2008 Miklos Vajna"
 __license__ = "GPL"
 
-import os, urllib, sys, hashlib
+import os, urllib.request, urllib.parse, urllib.error, sys, hashlib
 from xml.dom import minidom
 from email.Utils import formatdate
 
@@ -20,11 +20,11 @@
 	usage()
 	sys.exit(0)
 if sys.argv[1] == "--version":
-	print """pear-makefb (pacman-tools) %s
+	print("""pear-makefb (pacman-tools) %s
 
 %s
 This is free software; see the source for copying conditions.  There is NO
-warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.""" % (__version__, __copyright__)
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.""" % (__version__, __copyright__))
 	sys.exit(0)
 
 name = sys.argv[1]
@@ -39,9 +39,9 @@
 sys.stdout.write("Writing the FrugalBuild...")
 sys.stdout.flush()
 if pear:
-	sock = urllib.urlopen("http://cvs.php.net/viewvc.cgi/pear/%s/package.xml?revision=HEAD" % name)
+	sock = urllib.request.urlopen("http://cvs.php.net/viewvc.cgi/pear/%s/package.xml?revision=HEAD" % name)
 else:
-	sock = urllib.urlopen("http://cvs.php.net/viewvc.cgi/pecl/%s/package.xml?revision=HEAD" % name)
+	sock = urllib.request.urlopen("http://cvs.php.net/viewvc.cgi/pecl/%s/package.xml?revision=HEAD" % name)
 
 pkg = minidom.parse(sock)
 sock.close()
@@ -58,7 +58,7 @@
 try:
 	pkgver = pkg.getElementsByTagName('version')[0].firstChild.toxml()
 except IndexError:
-	print " No such package!"
+	print(" No such package!")
 	sys.exit(1)
 out.write("pkgver=%s\n" % pkgver)
 
@@ -92,7 +92,7 @@
 			s += rel + i.attributes["version"].value
 		deps.append(s)
 except IndexError:
-	print " The version of the package xml is probably not 1.0!"
+	print(" The version of the package xml is probably not 1.0!")
 	os.unlink("FrugalBuild")
 	sys.exit(1)
 out.write("depends=('%s')\n" % "' '".join(deps))
@@ -102,9 +102,9 @@
 	out.write("Finclude pecl\n")
 
 if pear:
-	remote = urllib.urlopen('http://pear.php.net/get/%s-%s.tgz' % (name, pkgver))
+	remote = urllib.request.urlopen('http://pear.php.net/get/%s-%s.tgz' % (name, pkgver))
 else:
-	remote = urllib.urlopen('http://pecl.php.net/get/%s-%s.tgz' % (name, pkgver))
+	remote = urllib.request.urlopen('http://pecl.php.net/get/%s-%s.tgz' % (name, pkgver))
 local = open('%s-%s.tgz' % (name, pkgver), 'w')
 local.write(remote.read())
 remote.close()
diff -Naur pacman-tools-1.3.4/syncpkgd/syncpkgcd.py pacman-tools-1.3.4.new/syncpkgd/syncpkgcd.py
--- pacman-tools-1.3.4/syncpkgd/syncpkgcd.py	2022-05-09 15:30:25.024434783 +0200
+++ pacman-tools-1.3.4.new/syncpkgd/syncpkgcd.py	2022-05-09 15:37:46.128587660 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # 
 #   syncpkgcd
 #  
@@ -20,12 +20,12 @@
 #   USA.
 #
 
-import xmlrpclib, time, os, getopt, sys, socket, glob, base64, pwd, signal
-import traceback, shutil, httplib
+import xmlrpc.client, time, os, getopt, sys, socket, glob, base64, pwd, signal
+import traceback, shutil, http.client
 sys.path.append("/etc/syncpkgcd")
 from cconfig import config
 
-server = xmlrpclib.Server(config.server_url)
+server = xmlrpc.client.Server(config.server_url)
 
 class Options:
 	def __init__(self):
@@ -59,16 +59,16 @@
 					continue
 				try:
 					pkg = server.request_pkg(config.server_user, config.server_pass, self.getarch())
-				except socket.error, msg:
+				except socket.error as msg:
 					self.sleep("can't connect to server (%s)" % msg)
 					continue
-				except xmlrpclib.ProtocolError:
+				except xmlrpc.client.ProtocolError:
 					self.sleep("can't connect to proxy")
 					continue
-				except xmlrpclib.Fault:
+				except xmlrpc.client.Fault:
 					self.sleep("remote error, probably can't log in")
 					continue
-				except httplib.BadStatusLine:
+				except http.client.BadStatusLine:
 					self.sleep("http: bad status line")
 					continue
 				if not len(pkg):
@@ -85,7 +85,7 @@
 					os.makedirs(os.path.join(self.home, ".pacman-g2/repos"))
 				except OSError:
 					pass
-				for k, v in confs.items():
+				for k, v in list(confs.items()):
 					sock = open(os.path.join(self.home, k), "w")
 					sock.write(base64.decodestring(v).replace('@CARCH@', self.getarch()))
 					sock.close()
@@ -205,13 +205,13 @@
 				self.log(pkg, "failed to get the repo")
 				try:
 					server.report_result(config.server_user, config.server_pass, pkg, 1, base64.encodestring("Failed to get the repo."))
-				except xmlrpclib.Fault:
+				except xmlrpc.client.Fault:
 					self.log(pkg, "failed to report 'failed to get the repo'")
 				return
 		if not self.go(pkgname):
 			try:
 				server.report_result(config.server_user, config.server_pass, pkg, 1, base64.encodestring("No such package."))
-			except xmlrpclib.Fault:
+			except xmlrpc.client.Fault:
 					self.log(pkg, "failed to report 'no such package'")
 			return
 		if scm == "git":
@@ -258,7 +258,7 @@
 		self.log(pkg, "build finished")
 		try:
 			server.report_result(config.server_user, config.server_pass, pkg, 0)
-		except (socket.error, xmlrpclib.ProtocolError):
+		except (socket.error, xmlrpc.client.ProtocolError):
 			pass
 		self.system("git clean -x -d -f")
 
diff -Naur pacman-tools-1.3.4/syncpkgd/syncpkgdctl.py pacman-tools-1.3.4.new/syncpkgd/syncpkgdctl.py
--- pacman-tools-1.3.4/syncpkgd/syncpkgdctl.py	2013-02-13 08:03:50.000000000 +0100
+++ pacman-tools-1.3.4.new/syncpkgd/syncpkgdctl.py	2022-05-09 15:37:46.096587432 +0200
@@ -1,25 +1,25 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
-import xmlrpclib, time, os, base64, re, sys
+import xmlrpc.client, time, os, base64, re, sys
 sys.path.append("/etc/syncpkgd")
 from ctlconfig import config
 
-server = xmlrpclib.Server(config.server_url)
+server = xmlrpc.client.Server(config.server_url)
 
 if len(sys.argv) > 1:
 	if sys.argv[1] == "-d":
 		if server.cancel_build(config.server_user, config.server_pass, sys.argv[2]):
-			print "Okay, the service will not build this package for you."
+			print("Okay, the service will not build this package for you.")
 		else:
-			print "Oops, something went wrong. Maybe this package was already removed from the queue?"
+			print("Oops, something went wrong. Maybe this package was already removed from the queue?")
 	else:
 		if server.request_build(config.server_user, config.server_pass, sys.argv[1]):
-			print "Okay, the service will build this package for you."
+			print("Okay, the service will build this package for you.")
 		else:
-			print "Oops, something went wrong. Maybe this package is already in the queue?"
+			print("Oops, something went wrong. Maybe this package is already in the queue?")
 else:
-	print """At the moment the following packages are waiting to be built:"""
+	print("""At the moment the following packages are waiting to be built:""")
 	for i, item in enumerate(server.get_todo(config.server_user, config.server_pass)):
-		print '\t%s. %s' % (i+1, item.encode('utf-8'))
-	print "Please note that this list does not include failed or already started builds."
-	print "See man syncpkgdctl for more info."
+		print('\t%s. %s' % (i+1, item.encode('utf-8')))
+	print("Please note that this list does not include failed or already started builds.")
+	print("See man syncpkgdctl for more info.")
diff -Naur pacman-tools-1.3.4/syncpkgd/syncpkgd.py pacman-tools-1.3.4.new/syncpkgd/syncpkgd.py
--- pacman-tools-1.3.4/syncpkgd/syncpkgd.py	2013-02-13 08:03:50.000000000 +0100
+++ pacman-tools-1.3.4.new/syncpkgd/syncpkgd.py	2022-05-09 15:37:46.053587125 +0200
@@ -1,8 +1,8 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 import sys, getopt, os, pwd, hashlib, time, base64, re, pickle, signal, glob
 sys.path.append("/etc/syncpkgd")
-from SimpleXMLRPCServer import SimpleXMLRPCServer
+from xmlrpc.server import SimpleXMLRPCServer
 from dconfig import config
 
 class Actions:
@@ -34,9 +34,9 @@
 		self.save()
 
 	def __login(self, login, password):
-		if login in config.passes.keys() and \
+		if login in list(config.passes.keys()) and \
 			hashlib.sha1(password).hexdigest() == config.passes[login]:
-				if login not in self.lags.keys():
+				if login not in list(self.lags.keys()):
 					self.lags[login] = time.time()
 				return True
 		return False
@@ -207,7 +207,7 @@
 
 	def __who(self):
 		ret = []
-		for k, v in self.lags.items():
+		for k, v in list(self.lags.items()):
 			if (time.time() - v) < 300:
 				ret.append(k)
 		return ret
@@ -246,7 +246,7 @@
 		except KeyboardInterrupt:
 			actions.save()
 			return
-		except Exception, ex:
+		except Exception as ex:
 			actions.log_exception()
 			return
 	
diff -Naur pacman-tools-1.3.4/tools/mirrors.py pacman-tools-1.3.4.new/tools/mirrors.py
--- pacman-tools-1.3.4/tools/mirrors.py	2013-02-13 08:03:50.000000000 +0100
+++ pacman-tools-1.3.4.new/tools/mirrors.py	2022-05-09 15:37:46.159587882 +0200
@@ -39,7 +39,7 @@
 	except KeyError:
 		mirrors[m.country] = []
 	mirrors[m.country].append(m)
-countries = mirrors.keys()
+countries = list(mirrors.keys())
 countries.sort()
 sock = open(out, "w")
 sock.write("""#
