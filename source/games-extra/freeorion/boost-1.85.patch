diff -Naur src-tarball/GG/src/dialogs/FileDlg.cpp src-tarball.new/GG/src/dialogs/FileDlg.cpp
--- src-tarball/GG/src/dialogs/FileDlg.cpp	2024-03-04 18:15:41.000000000 +0100
+++ src-tarball.new/GG/src/dialogs/FileDlg.cpp	2024-05-22 09:15:11.434321443 +0200
@@ -9,7 +9,7 @@
 
 #include <boost/cast.hpp>
 #include <boost/algorithm/string/predicate.hpp>
-#include <boost/filesystem/operations.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/format.hpp>
 // boost::spirit::classic pulls in windows.h which in turn defines macro
 // versions of min and max.  Defining NOMINMAX disables the creation of those
@@ -215,7 +215,7 @@
 
     if (!m_init_filename.empty()) {
         fs::path filename_path = fs::system_complete(fs::path(m_init_filename));
-        m_files_edit->SetText(filename_path.leaf().string());
+        m_files_edit->SetText(filename_path.filename().string());
     }
 }
 
@@ -548,7 +548,7 @@
     if (!m_in_win32_drive_selection) {
         // parent directory selector
         if ((s_working_dir.string() != s_working_dir.root_path().string() &&
-             !s_working_dir.branch_path().string().empty()) ||
+             !s_working_dir.parent_path().string().empty()) ||
             Win32Paths())
         {
             auto row = Wnd::Create<ListBox::Row>();
@@ -694,10 +694,10 @@
     } else if (directory == "..") {
         // move to parent directory of current directory
         if (s_working_dir.string() != s_working_dir.root_path().string() &&
-            !s_working_dir.branch_path().string().empty())
+            !s_working_dir.parent_path().string().empty())
         {
             // move to new directory
-            SetWorkingDirectory(s_working_dir.branch_path());
+            SetWorkingDirectory(s_working_dir.parent_path());
 
         } else {
             // switch to drive selection mode
diff -Naur src-tarball/util/Directories.cpp src-tarball.new/util/Directories.cpp
--- src-tarball/util/Directories.cpp	2024-03-04 18:15:41.000000000 +0100
+++ src-tarball.new/util/Directories.cpp	2024-05-22 09:15:11.434321443 +0200
@@ -4,9 +4,8 @@
 #include "i18n.h"
 
 #include <boost/algorithm/string/trim.hpp>
-#include <boost/filesystem/convenience.hpp>
-#include <boost/filesystem/operations.hpp>
 #include <boost/date_time/posix_time/posix_time.hpp>
+#include <boost/filesystem.hpp>
 
 #include <cstdlib>
 #include <mutex>
@@ -266,7 +265,7 @@
 #if defined(FREEORION_WIN32)
     try {
         fs::path binary_file = fs::system_complete(FilenameToPath(argv0));
-        bin_dir = binary_file.branch_path();
+        bin_dir = binary_file.parent_path();
     } catch (const fs::filesystem_error &) {
         bin_dir = fs::initial_path();
     }
@@ -315,7 +314,7 @@
             std::string path_text(buf);
 
             fs::path binary_file = fs::system_complete(fs::path(path_text));
-            bin_dir = binary_file.branch_path();
+            bin_dir = binary_file.parent_path();
 
             // check that a "freeoriond" file (hopefully the freeorion server binary) exists in the found directory
             fs::path p(bin_dir);
diff -Naur src-tarball/util/OptionsDB.cpp src-tarball.new/util/OptionsDB.cpp
--- src-tarball/util/OptionsDB.cpp	2024-03-04 18:15:41.000000000 +0100
+++ src-tarball.new/util/OptionsDB.cpp	2024-05-22 09:15:11.435321451 +0200
@@ -14,8 +14,7 @@
 #include <boost/algorithm/string/classification.hpp>
 #include <boost/algorithm/string/erase.hpp>
 #include <boost/algorithm/string/predicate.hpp>
-#include <boost/filesystem/fstream.hpp>
-#include <boost/filesystem/operations.hpp>
+#include <boost/filesystem.hpp>
 #include <boost/range/algorithm_ext/erase.hpp>
 #include <boost/tokenizer.hpp>
 
