From e8271cd1387e05eca3342da3584a64adb1aae7d8 Mon Sep 17 00:00:00 2001
From: Pentarctagon <Pentarctagon@users.noreply.github.com>
Date: Tue, 10 Dec 2024 07:41:25 -0600
Subject: [PATCH] Avoid keeping player_iterator that might get invalidated
 before use

---
 src/server/common/forum_user_handler.cpp | 8 ++++----
 src/server/common/forum_user_handler.hpp | 4 ++--
 src/server/common/user_handler.hpp       | 2 +-
 src/server/wesnothd/server.cpp           | 2 +-
 src/server/wesnothd/server.hpp           | 9 +++++++++
 5 files changed, 17 insertions(+), 8 deletions(-)

diff --git a/src/server/common/forum_user_handler.cpp b/src/server/common/forum_user_handler.cpp
index ed689cbc4b00..dfbb80a7dd5c 100644
--- a/src/server/common/forum_user_handler.cpp
+++ b/src/server/common/forum_user_handler.cpp
@@ -207,10 +207,10 @@ std::string fuh::get_tournaments(){
 	return conn_.get_tournaments();
 }
 
-void fuh::async_get_and_send_game_history(boost::asio::io_service& io_service, wesnothd::server& s, wesnothd::player_iterator player, int player_id, int offset, std::string& search_game_name, int search_content_type, std::string& search_content) {
-	boost::asio::post([this, &s, player, player_id, offset, &io_service, search_game_name, search_content_type, search_content] {
-		boost::asio::post(io_service, [player, &s, doc = conn_.get_game_history(player_id, offset, search_game_name, search_content_type, search_content)]{
-			s.send_to_player(player, *doc);
+void fuh::async_get_and_send_game_history(boost::asio::io_service& io_service, wesnothd::server& s, any_socket_ptr socket, int player_id, int offset, std::string& search_game_name, int search_content_type, std::string& search_content) {
+	boost::asio::post([this, &s, socket, player_id, offset, &io_service, search_game_name, search_content_type, search_content] {
+		boost::asio::post(io_service, [socket, &s, doc = conn_.get_game_history(player_id, offset, search_game_name, search_content_type, search_content)]{
+			s.send_to_player(socket, *doc);
 		});
 	 });
 }
diff --git a/src/server/common/forum_user_handler.hpp b/src/server/common/forum_user_handler.hpp
index d050f907a470..06189ab512fd 100644
--- a/src/server/common/forum_user_handler.hpp
+++ b/src/server/common/forum_user_handler.hpp
@@ -126,14 +126,14 @@ class fuh : public user_handler
 	 *
 	 * @param io_service The boost io_service to use to post the query results back to the main boost::asio thread.
 	 * @param s The server instance the player is connected to.
-	 * @param player The player iterator used to communicate with the player's client.
+	 * @param socket The socket used to communicate with the player's client.
 	 * @param player_id The forum ID of the player to get the game history for.
 	 * @param offset Where to start returning rows to the client from the query results.
 	 * @param search_game_name Query for games matching this name. Supports leading and/or trailing wildcards.
 	 * @param search_content_type The content type to query for (ie: scenario)
 	 * @param search_content Query for games using this content ID. Supports leading and/or trailing wildcards.
 	 */
-	void async_get_and_send_game_history(boost::asio::io_service& io_service, wesnothd::server& s, wesnothd::player_iterator player, int player_id, int offset, std::string& search_game_name, int search_content_type, std::string& search_content);
+	void async_get_and_send_game_history(boost::asio::io_service& io_service, wesnothd::server& s, any_socket_ptr socket, int player_id, int offset, std::string& search_game_name, int search_content_type, std::string& search_content);
 
 	/**
 	 * Inserts game related information.
diff --git a/src/server/common/user_handler.hpp b/src/server/common/user_handler.hpp
index d8e72f177c6c..cd21b1823cca 100644
--- a/src/server/common/user_handler.hpp
+++ b/src/server/common/user_handler.hpp
@@ -139,7 +139,7 @@ class user_handler
 
 	virtual std::string get_uuid() = 0;
 	virtual std::string get_tournaments() = 0;
-	virtual void async_get_and_send_game_history(boost::asio::io_service& io_service, wesnothd::server& s, wesnothd::player_iterator player, int player_id, int offset, std::string& search_game_name, int search_content_type, std::string& search_content) =0;
+	virtual void async_get_and_send_game_history(boost::asio::io_service& io_service, wesnothd::server& s, any_socket_ptr socket, int player_id, int offset, std::string& search_game_name, int search_content_type, std::string& search_content) =0;
 	virtual void db_insert_game_info(const std::string& uuid, int game_id, const std::string& version, const std::string& name, int reload, int observers, int is_public, int has_password) = 0;
 	virtual void db_update_game_end(const std::string& uuid, int game_id, const std::string& replay_location) = 0;
 	virtual void db_insert_game_player_info(const std::string& uuid, int game_id, const std::string& username, int side_number, int is_host, const std::string& faction, const std::string& version, const std::string& source, const std::string& current_user, const std::string& leaders) = 0;
diff --git a/src/server/wesnothd/server.cpp b/src/server/wesnothd/server.cpp
index 7c4b2a0331ec..0fcbd5348396 100644
--- a/src/server/wesnothd/server.cpp
+++ b/src/server/wesnothd/server.cpp
@@ -1170,7 +1170,7 @@ void server::handle_player_in_lobby(player_iterator player, simple_wml::document
 			std::string search_content = request->attr("search_content").to_string();
 			LOG_SERVER << "Querying game history requested by player `" << player->info().name() << "` for player id `" << player_id << "`."
 					   << "Searching for game name `" << search_game_name << "`, search content type `" << search_content_type << "`, search content `" << search_content << "`.";
-			user_handler_->async_get_and_send_game_history(io_service_, *this, player, player_id, offset, search_game_name, search_content_type, search_content);
+			user_handler_->async_get_and_send_game_history(io_service_, *this, player->socket(), player_id, offset, search_game_name, search_content_type, search_content);
 		}
 		return;
 	}
diff --git a/src/server/wesnothd/server.hpp b/src/server/wesnothd/server.hpp
index a07ca7144bf4..dc44304535a2 100644
--- a/src/server/wesnothd/server.hpp
+++ b/src/server/wesnothd/server.hpp
@@ -82,6 +82,15 @@ class server : public server_base
 			player->socket()
 		);
 	}
+	void send_to_player(any_socket_ptr socket, simple_wml::document& data) {
+		if(player_connections_.get<socket_t>().find(socket) != player_connections_.end())
+		{
+			utils::visit(
+				[this, &data](auto&& socket) { async_send_doc_queued(socket, data); },
+				socket
+			);
+		}
+	}
 	void send_server_message_to_lobby(const std::string& message, std::optional<player_iterator> exclude = {});
 	void send_server_message_to_all(const std::string& message, std::optional<player_iterator> exclude = {});
 
