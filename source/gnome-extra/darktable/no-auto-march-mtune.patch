diff -Naur darktable-3.0.0/src/CMakeLists.txt darktable-3.0.0-p/src/CMakeLists.txt
--- darktable-3.0.0/src/CMakeLists.txt	2020-01-03 13:35:18.208903536 +0100
+++ darktable-3.0.0-p/src/CMakeLists.txt	2020-01-03 13:34:59.076770468 +0100
@@ -502,13 +502,13 @@
   list(APPEND LIBS exchndl) # Needed for exception handling and backtrace()
 endif(WIN32)
 
+# FIXME: all that is broken S*IT - crazy -
 if(NOT CUSTOM_CFLAGS)
   if(BUILD_SSE2_CODEPATHS)
     #we MUST always specify our required instruction set, native might not detect it
     set(DT_REQ_INSTRUCTIONS "-msse2")
   endif()
 
-  include(march-mtune)
 
   #if(NOT BUILD_SSE2_CODEPATHS)
   #  set(MARCH "${MARCH} -mno-sse2 -D__DISABLE_SSE2__ -U__SSE2__ -D__DISABLE_SSE__ -U__SSE__")
@@ -516,12 +516,13 @@
 
   #-g MUST be set for ALL builds, or there will be no support for them when bugs happen
 
+  # OMFG what kind *piep* is that?
   # TODO: check if these flags bring some good :
   # -ftree-loop-distribution -fivopts -fipa-matrix-reorg -ftracer -fvect-cost-model -fvariable-expansion-in-unroller
   # -fprefetch-loop-arrays -ftree-vect-loop-version -freorder-blocks-and-partition -fmodulo-sched-allow-regmoves
   # -ftree-loop-im -ftree-loop-ivcanon -fsplit-ivs-in-unroller -funroll-loops
   # also, in IOPs, in-loops branches could be forced to be compiled as different loops variants
-  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${MARCH} ${DT_REQ_INSTRUCTIONS} -g")
+  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${DT_REQ_INSTRUCTIONS} -g")
   set(CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO} -O2")
   set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} ")
   if(CMAKE_COMPILER_IS_GNUCC)
@@ -535,7 +536,7 @@
     set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O0")
   endif()
 
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${MARCH} ${DT_REQ_INSTRUCTIONS} -g")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${DT_REQ_INSTRUCTIONS} -g")
   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} -O2")
   set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} ")
   if(CMAKE_COMPILER_IS_GNUCXX)
