diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7f88fb48..679c52ae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -294,6 +294,7 @@ endif (SUITESPARSE)
 # CXSparse.
 if (CXSPARSE)
   # Don't search with REQUIRED as we can continue without CXSparse.
+  find_package(SuiteSparse_config)
   find_package(CXSparse)
   if (CXSparse_FOUND)
     set(CXSparse_DEPENDENCY "find_dependency(CXSparse ${CXSparse_VERSION})")
diff --git a/internal/ceres/CMakeLists.txt b/internal/ceres/CMakeLists.txt
index 0e332631..0f52321d 100644
--- a/internal/ceres/CMakeLists.txt
+++ b/internal/ceres/CMakeLists.txt
@@ -123,7 +123,7 @@ endif (SUITESPARSE AND SuiteSparse_FOUND)
 if (CXSPARSE AND CXSparse_FOUND)
   # Define version information for use in Solver::FullReport.
   add_definitions(-DCERES_CXSPARSE_VERSION="${CXSparse_VERSION}")
-  list(APPEND CERES_LIBRARY_PRIVATE_DEPENDENCIES CXSparse::CXSparse)
+  list(APPEND CERES_LIBRARY_PRIVATE_DEPENDENCIES SuiteSparse::CXSparse)
 endif (CXSPARSE AND CXSparse_FOUND)
 
 if (ACCELERATESPARSE AND AccelerateSparse_FOUND)
diff --git a/internal/ceres/covariance_impl.cc b/internal/ceres/covariance_impl.cc
index 324b5531..21ba0459 100644
--- a/internal/ceres/covariance_impl.cc
+++ b/internal/ceres/covariance_impl.cc
@@ -628,7 +628,7 @@ bool CovarianceImpl::ComputeCovarianceValuesUsingSuiteSparseQR() {
   // more efficient, both in runtime as well as the quality of
   // ordering computed. So, it maybe worth doing that analysis
   // separately.
-  const SuiteSparse_long rank = SuiteSparseQR<double>(SPQR_ORDERING_BESTAMD,
+  const SuiteSparse_long rank = SuiteSparseQR<double, int64_t>(SPQR_ORDERING_BESTAMD,
                                                       SPQR_DEFAULT_TOL,
                                                       cholmod_jacobian.ncol,
                                                       &cholmod_jacobian,
