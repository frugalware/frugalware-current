diff -Naur evdi-1.6.0/module/evdi_connector.c evdi-1.6.0-p/module/evdi_connector.c
--- evdi-1.6.0/module/evdi_connector.c	2019-02-18 09:16:54.000000000 +0100
+++ evdi-1.6.0-p/module/evdi_connector.c	2019-05-06 19:15:56.460964014 +0200
@@ -116,6 +116,13 @@
 	.best_encoder = evdi_best_encoder,
 };
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+int drm_helper_probe_single_connector_modes(struct drm_connector
+                                            *connector, uint32_t maxX,
+                                            uint32_t maxY);
+#endif
+
+
 static const struct drm_connector_funcs evdi_connector_funcs = {
 #if KERNEL_VERSION(4, 14, 0) > LINUX_VERSION_CODE
 	.dpms = drm_atomic_helper_connector_dpms,
diff -Naur evdi-1.6.0/module/evdi_drv.c evdi-1.6.0-p/module/evdi_drv.c
--- evdi-1.6.0/module/evdi_drv.c	2019-02-18 09:16:54.000000000 +0100
+++ evdi-1.6.0-p/module/evdi_drv.c	2019-05-06 19:17:19.545488974 +0200
@@ -24,6 +24,14 @@
 
 #define EVDI_DEVICE_COUNT_MAX 16
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+void drm_kms_helper_poll_init(struct drm_device *dev);
+void drm_kms_helper_poll_fini(struct drm_device *dev);
+bool drm_helper_hpd_irq_event(struct drm_device *dev);
+void drm_kms_helper_poll_disable(struct drm_device *dev);
+#endif
+
+
 static struct evdi_context {
 	struct device *root_dev;
 	unsigned int dev_count;
diff -Naur evdi-1.6.0/module/evdi_drv.h evdi-1.6.0-p/module/evdi_drv.h
--- evdi-1.6.0/module/evdi_drv.h	2019-02-18 09:16:54.000000000 +0100
+++ evdi-1.6.0-p/module/evdi_drv.h	2019-05-06 19:35:50.621619571 +0200
@@ -120,9 +120,9 @@
 int evdi_drm_gem_mmap(struct file *filp, struct vm_area_struct *vma);
 
 #if KERNEL_VERSION(4, 11, 0) > LINUX_VERSION_CODE
-int evdi_gem_fault(struct vm_area_struct *vma, struct vm_fault *vmf);
+vm_fault_t evdi_gem_fault(struct vm_area_struct *vma, struct vm_fault *vmf);
 #else
-int evdi_gem_fault(struct vm_fault *vmf);
+vm_fault_t evdi_gem_fault(struct vm_fault *vmf);
 #endif
 
 bool evdi_painter_is_connected(struct evdi_device *evdi);
diff -Naur evdi-1.6.0/module/evdi_gem.c evdi-1.6.0-p/module/evdi_gem.c
--- evdi-1.6.0/module/evdi_gem.c	2019-02-18 09:16:54.000000000 +0100
+++ evdi-1.6.0-p/module/evdi_gem.c	2019-05-06 19:35:57.211662744 +0200
@@ -116,11 +116,11 @@
 }
 
 #if KERNEL_VERSION(4, 11, 0) <= LINUX_VERSION_CODE
-int evdi_gem_fault(struct vm_fault *vmf)
+vm_fault_t evdi_gem_fault(struct vm_fault *vmf)
 {
 	struct vm_area_struct *vma = vmf->vma;
 #else
-int evdi_gem_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
+vm_fault_t evdi_gem_fault(struct vm_area_struct *vma, struct vm_fault *vmf)
 {
 #endif
 	struct evdi_gem_object *obj = to_evdi_bo(vma->vm_private_data);
diff -Naur evdi-1.6.0/module/evdi_main.c evdi-1.6.0-p/module/evdi_main.c
--- evdi-1.6.0/module/evdi_main.c	2019-02-18 09:16:54.000000000 +0100
+++ evdi-1.6.0-p/module/evdi_main.c	2019-05-06 19:18:50.794064765 +0200
@@ -16,6 +16,14 @@
 #include "evdi_drv.h"
 #include "evdi_cursor.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+void drm_kms_helper_poll_init(struct drm_device *dev);
+void drm_kms_helper_poll_fini(struct drm_device *dev);
+bool drm_helper_hpd_irq_event(struct drm_device *dev);
+void drm_kms_helper_poll_disable(struct drm_device *dev);
+#endif
+
+
 int evdi_driver_setup(struct drm_device *dev)
 {
 	struct platform_device *platdev = NULL;
diff -Naur evdi-1.6.0/module/evdi_painter.c evdi-1.6.0-p/module/evdi_painter.c
--- evdi-1.6.0/module/evdi_painter.c	2019-02-18 09:16:54.000000000 +0100
+++ evdi-1.6.0-p/module/evdi_painter.c	2019-05-06 19:18:18.331860012 +0200
@@ -29,6 +29,13 @@
 }
 #endif
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+void drm_kms_helper_poll_init(struct drm_device *dev);
+void drm_kms_helper_poll_fini(struct drm_device *dev);
+bool drm_helper_hpd_irq_event(struct drm_device *dev);
+void drm_kms_helper_poll_disable(struct drm_device *dev);
+#endif
+
 struct evdi_event_cursor_set_pending {
 	struct drm_pending_event base;
 	struct drm_evdi_event_cursor_set cursor_set;
