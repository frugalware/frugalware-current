diff -Naur evdi-1.6.4/module/evdi_drv.c evdi-1.6.4-p/module/evdi_drv.c
--- evdi-1.6.4/module/evdi_drv.c	2019-11-21 08:42:24.000000000 +0100
+++ evdi-1.6.4-p/module/evdi_drv.c	2019-11-28 03:24:37.901389894 +0100
@@ -81,8 +81,12 @@
 }
 
 static struct drm_driver driver = {
-	.driver_features = DRIVER_MODESET | DRIVER_GEM | DRIVER_PRIME
-			 | DRIVER_ATOMIC,
+#if KERNEL_VERSION(5, 4, 0) < LINUX_VERSION_CODE
+        .driver_features = DRIVER_MODESET | DRIVER_GEM | DRIVER_PRIME
+                         | DRIVER_ATOMIC,
+#else
+        .driver_features = DRIVER_MODESET | DRIVER_GEM | DRIVER_ATOMIC,
+#endif
 #if KERNEL_VERSION(4, 12, 0) > LINUX_VERSION_CODE
 	.load = evdi_driver_load,
 #endif
diff -Naur evdi-1.6.4/module/evdi_drv.h evdi-1.6.4-p/module/evdi_drv.h
--- evdi-1.6.4/module/evdi_drv.h	2019-11-21 08:42:24.000000000 +0100
+++ evdi-1.6.4-p/module/evdi_drv.h	2019-11-28 03:43:50.723941195 +0100
@@ -20,7 +20,11 @@
 #include <drm/drm_crtc_helper.h>
 #include <drm/drm_rect.h>
 #include <drm/drm_gem.h>
+#if KERNEL_VERSION(5, 4, 0) < LINUX_VERSION_CODE
 #include <linux/reservation.h>
+#else
+#include <linux/dma-resv.h>
+#endif
 #include "evdi_debug.h"
 
 #define DRIVER_NAME   "evdi"
@@ -51,8 +55,13 @@
 	struct page **pages;
 	void *vmapping;
 	struct sg_table *sg;
-	struct reservation_object *resv;
-	struct reservation_object _resv;
+#if KERNEL_VERSION(5, 4, 0) < LINUX_VERSION_CODE
+        struct reservation_object *resv;
+        struct reservation_object _resv;
+#else
+        struct dma_resv *resv;
+        struct dma_resv _resv;
+#endif
 };
 
 #define to_evdi_bo(x) container_of(x, struct evdi_gem_object, base)
@@ -112,8 +121,7 @@
 
 struct drm_gem_object *evdi_gem_prime_import(struct drm_device *dev,
 					     struct dma_buf *dma_buf);
-struct dma_buf *evdi_gem_prime_export(struct drm_device *dev,
-				      struct drm_gem_object *obj, int flags);
+struct dma_buf *evdi_gem_prime_export(struct drm_gem_object *obj, int flags);
 
 int evdi_gem_vmap(struct evdi_gem_object *obj);
 void evdi_gem_vunmap(struct evdi_gem_object *obj);
diff -Naur evdi-1.6.4/module/evdi_gem.c evdi-1.6.4-p/module/evdi_gem.c
--- evdi-1.6.4/module/evdi_gem.c	2019-11-21 08:42:24.000000000 +0100
+++ evdi-1.6.4-p/module/evdi_gem.c	2019-11-28 04:01:58.021276607 +0100
@@ -61,7 +61,7 @@
 		return NULL;
 	}
 
-	reservation_object_init(&obj->_resv);
+	dma_resv_init(&obj->_resv);
 	obj->resv = &obj->_resv;
 
 	return obj;
@@ -255,7 +255,7 @@
 	if (gem_obj->dev->vma_offset_manager)
 		drm_gem_free_mmap_offset(gem_obj);
 
-	reservation_object_fini(&obj->_resv);
+	dma_resv_fini(&obj->_resv);
 	obj->resv = NULL;
 }
 
@@ -569,8 +569,7 @@
 	return ERR_PTR(ret);
 }
 
-struct dma_buf *evdi_gem_prime_export(__maybe_unused struct drm_device *dev,
-				      struct drm_gem_object *obj, int flags)
+struct dma_buf *evdi_gem_prime_export(__maybe_unused struct drm_gem_object *obj, int flags)
 {
 	struct evdi_gem_object *evdi_obj = to_evdi_bo(obj);
 	struct dma_buf_export_info exp_info = {
@@ -583,7 +582,7 @@
 	};
 
 #if KERNEL_VERSION(4, 9, 0) <= LINUX_VERSION_CODE
-	return drm_gem_dmabuf_export(dev, &exp_info);
+	return drm_gem_dmabuf_export(obj->dev, &exp_info);
 #else
 	return dma_buf_export(&exp_info);
 #endif

