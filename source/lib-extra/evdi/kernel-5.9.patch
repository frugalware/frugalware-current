diff -Naur evdi-1.8.0/module/evdi_cursor.c evdi-1.8.0.new/module/evdi_cursor.c
--- evdi-1.8.0/module/evdi_cursor.c	2020-07-31 12:07:08.000000000 +0200
+++ evdi-1.8.0.new/module/evdi_cursor.c	2020-10-12 16:11:58.141201173 +0200
@@ -55,7 +55,7 @@
 	if (obj)
 		drm_gem_object_get(&obj->base);
 	if (cursor->obj)
-		drm_gem_object_put_unlocked(&cursor->obj->base);
+		drm_gem_object_put(&cursor->obj->base);
 
 	cursor->obj = obj;
 }
diff -Naur evdi-1.8.0/module/evdi_drv.c evdi-1.8.0.new/module/evdi_drv.c
--- evdi-1.8.0/module/evdi_drv.c	2020-07-31 12:07:08.000000000 +0200
+++ evdi-1.8.0.new/module/evdi_drv.c	2020-10-12 16:12:53.541612862 +0200
@@ -91,7 +91,6 @@
 	.postclose = evdi_driver_postclose,
 
 	/* gem hooks */
-	.gem_free_object = evdi_gem_free_object,
 	.gem_vm_ops = &evdi_gem_vm_ops,
 
 	.dumb_create = evdi_dumb_create,
@@ -169,12 +168,6 @@
 
 	EVDI_CHECKPT();
 
-	/* Intel-IOMMU workaround: platform-bus unsupported, force ID-mapping */
-#if IS_ENABLED(CONFIG_IOMMU_API) && defined(CONFIG_INTEL_IOMMU)
-#define INTEL_IOMMU_DUMMY_DOMAIN                ((void *)-1)
-	pdev->dev.archdata.iommu = INTEL_IOMMU_DUMMY_DOMAIN;
-#endif
-
 	dev = drm_dev_alloc(&driver, &pdev->dev);
 	if (IS_ERR(dev))
 		return PTR_ERR(dev);
diff -Naur evdi-1.8.0/module/evdi_fb.c evdi-1.8.0.new/module/evdi_fb.c
--- evdi-1.8.0/module/evdi_fb.c	2020-07-31 12:07:08.000000000 +0200
+++ evdi-1.8.0.new/module/evdi_fb.c	2020-10-12 16:11:58.142201180 +0200
@@ -319,7 +319,7 @@
 
 	EVDI_CHECKPT();
 	if (efb->obj)
-		drm_gem_object_put_unlocked(&efb->obj->base);
+		drm_gem_object_put(&efb->obj->base);
 
 	drm_framebuffer_cleanup(fb);
 	kfree(efb);
@@ -438,7 +438,7 @@
 
 	return ret;
  out_gfree:
-	drm_gem_object_put_unlocked(&efbdev->efb.obj->base);
+	drm_gem_object_put(&efbdev->efb.obj->base);
  out:
 	return ret;
 }
@@ -464,7 +464,7 @@
 	if (efbdev->efb.obj) {
 		drm_framebuffer_unregister_private(&efbdev->efb.base);
 		drm_framebuffer_cleanup(&efbdev->efb.base);
-		drm_gem_object_put_unlocked(&efbdev->efb.obj->base);
+		drm_gem_object_put(&efbdev->efb.obj->base);
 	}
 }
 
diff -Naur evdi-1.8.0/module/evdi_gem.c evdi-1.8.0.new/module/evdi_gem.c
--- evdi-1.8.0/module/evdi_gem.c	2020-07-31 12:07:08.000000000 +0200
+++ evdi-1.8.0.new/module/evdi_gem.c	2020-10-12 16:11:58.142201180 +0200
@@ -82,7 +82,7 @@
 		return ret;
 	}
 
-	drm_gem_object_put_unlocked(&obj->base);
+	drm_gem_object_put(&obj->base);
 	*handle_p = handle;
 	return 0;
 }
diff -Naur evdi-1.8.0/module/evdi_modeset.c evdi-1.8.0.new/module/evdi_modeset.c
--- evdi-1.8.0/module/evdi_modeset.c	2020-07-31 12:07:08.000000000 +0200
+++ evdi-1.8.0.new/module/evdi_modeset.c	2020-10-12 16:11:58.142201180 +0200
@@ -130,7 +130,7 @@
 			eobj, width, height, hot_x, hot_y,
 			format, stride);
 
-	drm_gem_object_put_unlocked(obj);
+	drm_gem_object_put(obj);
 
 	/*
 	 * For now we don't care whether the application wanted the mouse set,
