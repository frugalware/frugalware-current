diff -Naur pyside2/libpyside/pysideqflags.cpp pyside2.new/libpyside/pysideqflags.cpp
--- pyside2/libpyside/pysideqflags.cpp	2022-06-30 09:54:16.000000000 +0200
+++ pyside2.new/libpyside/pysideqflags.cpp	2022-11-03 12:38:53.010504906 +0100
@@ -187,7 +187,7 @@
         }
         newspec.slots = SbkNewQFlagsType_spec.slots;
         PyTypeObject *type = (PyTypeObject *)SbkType_FromSpec(&newspec);
-        Py_TYPE(type) = &PyType_Type;
+        Py_SET_TYPE(type, &PyType_Type);
 
         PySideQFlagsType *flagsType = reinterpret_cast<PySideQFlagsType *>(type);
         PepType_PFTP(flagsType)->converterPtr = &PepType_PFTP(flagsType)->converter;
diff -Naur pyside2/libpyside/pysidesignal.cpp pyside2.new/libpyside/pysidesignal.cpp
--- pyside2/libpyside/pysidesignal.cpp	2022-06-30 09:54:16.000000000 +0200
+++ pyside2.new/libpyside/pysidesignal.cpp	2022-11-03 12:38:53.010504906 +0100
@@ -162,7 +162,7 @@
     if (!type) {
         type = reinterpret_cast<PyTypeObject *>(SbkType_FromSpec(&PySideSignalType_spec));
         PyTypeObject *hold = Py_TYPE(type);
-        Py_TYPE(type) = PySideMetaSignalTypeF();
+        Py_SET_TYPE(type, PySideMetaSignalTypeF());
         Py_INCREF(Py_TYPE(type));
         Py_DECREF(hold);
     }
diff -Naur pyside2/libpyside/pysideweakref.cpp pyside2.new/libpyside/pysideweakref.cpp
--- pyside2/libpyside/pysideweakref.cpp	2022-06-30 09:54:16.000000000 +0200
+++ pyside2.new/libpyside/pysideweakref.cpp	2022-11-03 12:38:53.010504906 +0100
@@ -90,7 +90,7 @@
 
     if (Py_TYPE(PySideCallableObjectTypeF()) == 0)
     {
-        Py_TYPE(PySideCallableObjectTypeF()) = &PyType_Type;
+        Py_SET_TYPE(PySideCallableObjectTypeF(), &PyType_Type);
         PyType_Ready(PySideCallableObjectTypeF());
     }
 
