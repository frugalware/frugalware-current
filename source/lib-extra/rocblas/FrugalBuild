# Compiling Time: 0.01 SBU
# Maintainer: DeX77 <dex+fw@dragonslave.de>

pkgname=rocblas
pkgver=6.4.1
pkgrel=1
pkgdesc='Next generation BLAS implementation for ROCm platform'
archs=('x86_64')
groups=('lib-extra')
url='https://rocblas.readthedocs.io/en/latest'
depends=('rocm-core' 'hip-runtime-amd' 'openmp' 'libcblas' 'roctracer')
makedepends=('rocm-cmake' 'doxygen' 'python3-tensile' 'msgpack-cxx' 'boost')
_F_github_author=ROCm
_F_github_name=rocBLAS
_F_github_tag_prefix=rocm-
_F_cmake_confopts="	-DCMAKE_C_COMPILER=/opt/rocm/lib/llvm/bin/amdclang \
			-DCMAKE_CXX_COMPILER=/opt/rocm/lib/llvm/bin/amdclang++ \
			-DCMAKE_INSTALL_PREFIX=/opt/rocm \
			-DCMAKE_PREFIX_PATH=/opt/rocm \
			-Damd_comgr_DIR=/opt/rocm/lib/cmake/amd_comgr \
			-DBUILD_FILE_REORG_BACKWARD_COMPATIBILITY=OFF \
			-DHIP_PLATFORM=amd \
			-DBLAS_LIBRARY=cblas \
			-DBUILD_WITH_TENSILE=ON \
			-DBUILD_WITH_PIP=OFF \
			-DTensile_LOGIC=asm_full \
			-DTensile_COMPILER=hipcc \
			-DTensile_LIBRARY_FORMAT=msgpack \
			-DTensile_CODE_OBJECT_VERSION=default \
			-DTensile_TEST_LOCAL_PATH=$Fsrcdir/Tensile-rocm-$pkgver
			-DBUILD_CLIENTS_SAMPLES=OFF \
			-DBUILD_CLIENTS_TESTS=OFF \
			-DBUILD_CLIENTS_BENCHMARKS=OFF \
			-DBUILD_WITH_HIPBLASLT=OFF"
Finclude github cmake
source=("https://github.com/ROCm/rocBLAS/archive/refs/tags/rocm-$pkgver.tar.gz" \
	"https://github.com/ROCm/Tensile/archive/refs/tags/rocm-$pkgver.zip" \
	rocBLAS-5.4.2-add-missing-header.patch \
	rocBLAS-5.4.2-link-cblas.patch \
	rocBLAS-6.0.2-expand-isa-compatibility.patch \
	rocBLAS-6.3.0-find-cblas.patch \
	no-git.patch)
sha1sums=('9920b6a7cce7b9c7ee1502dd0ca06d9736d0a75b' \
          'b22c3a88de3ad8a43fe2feda98cb08a4118ad5bf' \
          '3c78846806861dcb228ae98268bf542f2f079b8e' \
          '35f0f8486a06ed2a868765560633a6c863f0663d' \
          '49fd713667bd017ec5483394345f95859186ef75' \
          '7c569c28c4b209f2faf3a521867f0599e9127628' \
          '5720e7e12aa774ab48ebffe8944ac8cd3373fc8d')
_F_cd_path="rocBLAS-rocm-$pkgver"
options=('clang')

build() {

	# Compile source code for supported GPU archs in parallel
	export HIPCC_COMPILE_FLAGS_APPEND="-parallel-jobs=$(nproc)"
	export HIPCC_LINK_FLAGS_APPEND="-parallel-jobs=$(nproc)"

	export PATH=/opt/rocm/bin:$PATH
	export HIP_INCLUDE_PATH=/opt/rocm/include
	export HIP_PATH=/opt/rocm

	CMake_build
}


# optimization OK
