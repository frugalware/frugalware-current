From d6056e9293d25555e44713387ad884f36c34e162 Mon Sep 17 00:00:00 2001
From: Robbie Harwood <rharwood@redhat.com>
Date: Mon, 2 Aug 2021 12:07:22 -0400
Subject: [PATCH] nisplus: Fix leak on realloc failure in nis_getnames

If pos >= count but realloc fails, tmp will not have been placed in
getnames[pos] yet, and so will not be freed in free_null.  Detected
by Coveriy.

Also remove misleading comment from nis_getnames(), since it actually
did properly release getnames when out of memory.

Corresponds to glibc commit 60698263122b7c54ded3f70a466176e17a529480

Signed-off-by: Robbie Harwood <rharwood@redhat.com>
---
 src/nisplus/nis_subr.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/nisplus/nis_subr.c b/src/nisplus/nis_subr.c
index c6d4971..a875cb7 100644
--- a/src/nisplus/nis_subr.c
+++ b/src/nisplus/nis_subr.c
@@ -106,9 +106,6 @@ count_dots (const_nis_name str)
   return count;
 }
 
-/* If we run out of memory, we don't give already allocated memory
-   free. The overhead for bringing getnames back in a safe state to
-   free it is to big. */
 nis_name *
 nis_getnames (const_nis_name name)
 {
@@ -274,7 +271,10 @@ nis_getnames (const_nis_name name)
 	      nis_name *newp = realloc (getnames,
 					(count + 1) * sizeof (char *));
 	      if (newp == NULL)
-		goto free_null;
+		{
+		  free (newp);
+		  goto free_null;
+		}
 	      getnames = newp;
 	    }
 	  getnames[pos] = tmp;
