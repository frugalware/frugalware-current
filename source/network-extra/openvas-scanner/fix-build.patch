--- openvas-scanner-22.4.1/nasl/nasl_smb.c	2023-01-09 09:58:17.000000000 +0100
+++ openvas-scanner-22.4.1.new/nasl/nasl_smb.c	2023-03-06 17:16:03.817812410 +0100
@@ -97,7 +97,7 @@
   char *share = get_str_var_by_name (lexic, "share");
 
   tree_cell *retc;
-  SMB_HANDLE handle;
+  SMB_HANDLE handle = 0;
   int value;
 
   if ((host == NULL) || (username == NULL) || (password == NULL)
From 19c12ef2d1e8d8abf20d8f3650ae87e5ae9dc297 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Juan=20Jos=C3=A9=20Nicola?= <juan.nicola@greenbone.net>
Date: Tue, 28 Feb 2023 07:43:25 +0100
Subject: [PATCH] Change: try first pkg-config and then with find_library for
 ksba and gpgme (#1339)

* Change: try first pkg-config and then with find_library for ksba

It seems libksba 1.6.x had dropped the ksba-config support completely

* Change: try first pkg-config and then with find_library for gpgme

* Change: remove leading whitespaces from LDFLAGS for libpcap
---
 misc/CMakeLists.txt |  1 +
 nasl/CMakeLists.txt | 74 +++++++++++++++++++++++++--------------------
 src/CMakeLists.txt  |  1 +
 3 files changed, 43 insertions(+), 33 deletions(-)

diff --git a/misc/CMakeLists.txt b/misc/CMakeLists.txt
index 911b9bfb2..eeb16accd 100644
--- a/misc/CMakeLists.txt
+++ b/misc/CMakeLists.txt
@@ -49,6 +49,7 @@ if (PCAP_CONFIG)
   execute_process (COMMAND pcap-config --libs
     OUTPUT_VARIABLE PCAP_LDFLAGS
     OUTPUT_STRIP_TRAILING_WHITESPACE)
+  string(STRIP ${PCAP_LDFLAGS} PCAP_LDFLAGS)
   execute_process (COMMAND pcap-config --cflags
     OUTPUT_VARIABLE PCAP_CFLAGS
     OUTPUT_STRIP_TRAILING_WHITESPACE)
diff --git a/nasl/CMakeLists.txt b/nasl/CMakeLists.txt
index 2720ea2e6..3197d1a32 100644
--- a/nasl/CMakeLists.txt
+++ b/nasl/CMakeLists.txt
@@ -37,44 +37,52 @@ pkg_check_modules (OPENVAS_WMICLIENT libopenvas_wmiclient>=1.0.5)
 # for 'nasl' binary
 pkg_check_modules (LIBSSH REQUIRED libssh>=0.6.0)
 
+
 set (KSBA_MIN_VERSION "1.0.7")
-message (STATUS "Looking for ksba >= ${KSBA_MIN_VERSION}...")
-find_library (KSBA ksba)
-message (STATUS "Looking for ksba >= ${KSBA_MIN_VERSION}... ${KSBA}")
-if (NOT KSBA)
-  message (SEND_ERROR "The ksba library is required.")
-else (NOT KSBA)
-  execute_process (COMMAND ksba-config --version
-    OUTPUT_VARIABLE KSBA_VERSION
-    OUTPUT_STRIP_TRAILING_WHITESPACE)
-  message (STATUS "Found ksba ${KSBA_VERSION}...")
-  if (${KSBA_VERSION} VERSION_LESS ${KSBA_MIN_VERSION})
-    message (SEND_ERROR "The ksba library >= ${KSBA_MIN_VERSION} is required.")
-  else (${KSBA_VERSION} VERSION_LESS ${KSBA_MIN_VERSION})
-    execute_process (COMMAND ksba-config --libs
-      OUTPUT_VARIABLE KSBA_LDFLAGS
-      OUTPUT_STRIP_TRAILING_WHITESPACE)
-    execute_process (COMMAND ksba-config --cflags
-      OUTPUT_VARIABLE KSBA_CFLAGS
+# try with package config
+pkg_check_modules (KSBA REQUIRED ksba>=1.0.7)
+if (NOT KSBA_FOUND)
+  # try with find library
+  find_library (KSBA ksba)
+  message (STATUS "Looking for ksba >= ${KSBA_MIN_VERSION}...")
+  if (NOT KSBA)
+    message (SEND_ERROR "The ksba library is required.")
+  else (NOT KSBA)
+    execute_process (COMMAND ksba-config --version
+      OUTPUT_VARIABLE KSBA_VERSION
       OUTPUT_STRIP_TRAILING_WHITESPACE)
-  endif (${KSBA_VERSION} VERSION_LESS ${KSBA_MIN_VERSION})
-endif (NOT KSBA)
+    message (STATUS "Found ksba ${KSBA_VERSION}...")
+    if (${KSBA_VERSION} VERSION_LESS ${KSBA_MIN_VERSION})
+      message (SEND_ERROR "The ksba library >= ${KSBA_MIN_VERSION} is required.")
+    else (${KSBA_VERSION} VERSION_LESS ${KSBA_MIN_VERSION})
+      execute_process (COMMAND ksba-config --libs
+        OUTPUT_VARIABLE KSBA_LDFLAGS
+        OUTPUT_STRIP_TRAILING_WHITESPACE)
+      execute_process (COMMAND ksba-config --cflags
+        OUTPUT_VARIABLE KSBA_CFLAGS
+        OUTPUT_STRIP_TRAILING_WHITESPACE)
+    endif (${KSBA_VERSION} VERSION_LESS ${KSBA_MIN_VERSION})
+  endif (NOT KSBA)
+endif (NOT KSBA_FOUND)
 
 message (STATUS "Looking for pcap...")
 find_library (PCAP pcap)
 
-find_library (GPGME gpgme)
-message (STATUS "Looking for gpgme... ${GPGME}")
-if (NOT GPGME)
-  message (SEND_ERROR "The gpgme library is required.")
-endif (NOT GPGME)
+pkg_check_modules (GPGME REQUIRED gpgme)
+if (NOT GPGME_FOUND)
+  find_library (GPGME gpgme)
+  message (STATUS "Looking for gpgme... ${GPGME}")
+  if (NOT GPGME)
+    message (SEND_ERROR "The gpgme library is required.")
+  endif (NOT GPGME)
 
-execute_process (COMMAND gpgme-config --libs
-  OUTPUT_VARIABLE GPGME_LDFLAGS
-  OUTPUT_STRIP_TRAILING_WHITESPACE)
-execute_process (COMMAND gpgme-config --cflags
-  OUTPUT_VARIABLE GPGME_CFLAGS
-  OUTPUT_STRIP_TRAILING_WHITESPACE)
+  execute_process (COMMAND gpgme-config --libs
+    OUTPUT_VARIABLE GPGME_LDFLAGS
+    OUTPUT_STRIP_TRAILING_WHITESPACE)
+  execute_process (COMMAND gpgme-config --cflags
+    OUTPUT_VARIABLE GPGME_CFLAGS
+    OUTPUT_STRIP_TRAILING_WHITESPACE)
+endif (NOT GPGME_FOUND)
 
 message (STATUS "Looking for netsnmp...")
 find_library (SNMP netsnmp)
@@ -155,9 +163,9 @@ if (NOT OPENVAS_WMICLIENT_FOUND)
   set (FILES smb_interface_stub.c wmi_interface_stub.c ${FILES})
 endif (NOT OPENVAS_WMICLIENT_FOUND)
 
-if (KSBA)
+if (KSBA OR KSBA_FOUND)
   add_definitions (-DHAVE_LIBKSBA)
-endif (KSBA)
+endif (KSBA OR KSBA_FOUND)
 
 if (OPENVAS_CONF)
   add_definitions (-DOPENVAS_CONF="${OPENVAS_CONF}")
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 720d15a43..ccce18c19 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -69,6 +69,7 @@ if (PCAP_CONFIG)
   execute_process (COMMAND pcap-config --libs
     OUTPUT_VARIABLE PCAP_LDFLAGS
     OUTPUT_STRIP_TRAILING_WHITESPACE)
+  string(STRIP ${PCAP_LDFLAGS} PCAP_LDFLAGS)
   execute_process (COMMAND pcap-config --cflags
     OUTPUT_VARIABLE PCAP_CFLAGS
     OUTPUT_STRIP_TRAILING_WHITESPACE)
