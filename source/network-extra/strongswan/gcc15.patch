diff '--color=auto' -Naur strongswan-6.0.1/src/charon-cmd/cmd/cmd_connection.c strongswan-6.0.1.new/src/charon-cmd/cmd/cmd_connection.c
--- strongswan-6.0.1/src/charon-cmd/cmd/cmd_connection.c	2023-11-14 22:02:42.000000000 +0100
+++ strongswan-6.0.1.new/src/charon-cmd/cmd/cmd_connection.c	2025-05-22 09:00:37.422641344 +0200
@@ -585,7 +585,7 @@
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create_with_prio(
 			(callback_job_cb_t)initiate, this, NULL,
-			(callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+			callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 
 	return &this->public;
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/charon-nm/nm/nm_handler.c strongswan-6.0.1.new/src/charon-nm/nm/nm_handler.c
--- strongswan-6.0.1/src/charon-nm/nm/nm_handler.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/charon-nm/nm/nm_handler.c	2025-05-22 09:00:41.963226813 +0200
@@ -195,7 +195,7 @@
 		.public = {
 			.handler = {
 				.handle = _handle,
-				.release = nop,
+				.release = (void*)nop,
 				.create_attribute_enumerator = _create_attribute_enumerator,
 			},
 			.create_enumerator = _create_enumerator,
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/encoding/payloads/encrypted_payload.c strongswan-6.0.1.new/src/libcharon/encoding/payloads/encrypted_payload.c
--- strongswan-6.0.1/src/libcharon/encoding/payloads/encrypted_payload.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/encoding/payloads/encrypted_payload.c	2025-05-22 09:00:41.963299439 +0200
@@ -1023,7 +1023,7 @@
 				.get_length = _frag_get_length,
 				.add_payload = _frag_add_payload,
 				.remove_payload = (void*)return_null,
-				.generate_payloads = nop,
+				.generate_payloads = (void*)nop,
 				.set_transform = _frag_set_transform,
 				.get_transform = _frag_get_transform,
 				.encrypt = _frag_encrypt,
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/network/receiver.c strongswan-6.0.1.new/src/libcharon/network/receiver.c
--- strongswan-6.0.1/src/libcharon/network/receiver.c	2025-03-10 19:13:06.000000000 +0100
+++ strongswan-6.0.1.new/src/libcharon/network/receiver.c	2025-05-22 09:00:41.961624540 +0200
@@ -737,7 +737,7 @@
 
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create_with_prio((callback_job_cb_t)receive_packets,
-			this, NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+			this, NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 
 	return &this->public;
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/network/sender.c strongswan-6.0.1.new/src/libcharon/network/sender.c
--- strongswan-6.0.1/src/libcharon/network/sender.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/network/sender.c	2025-05-22 09:00:41.961717595 +0200
@@ -216,7 +216,7 @@
 
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create_with_prio((callback_job_cb_t)send_packets,
-			this, NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+			this, NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 
 	return &this->public;
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/android_dns/android_dns_handler.c strongswan-6.0.1.new/src/libcharon/plugins/android_dns/android_dns_handler.c
--- strongswan-6.0.1/src/libcharon/plugins/android_dns/android_dns_handler.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/android_dns/android_dns_handler.c	2025-05-22 09:00:41.963380672 +0200
@@ -191,7 +191,7 @@
 	VA_ARGS_VGET(args, type, data);
 	*type = INTERNAL_IP4_DNS;
 	*data = chunk_empty;
-	this->venumerate = return_false;
+	this->venumerate = (void*)return_false;
 	return TRUE;
 }
 
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/bypass_lan/bypass_lan_listener.c strongswan-6.0.1.new/src/libcharon/plugins/bypass_lan/bypass_lan_listener.c
--- strongswan-6.0.1/src/libcharon/plugins/bypass_lan/bypass_lan_listener.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/bypass_lan/bypass_lan_listener.c	2025-05-22 09:00:41.961778439 +0200
@@ -227,7 +227,7 @@
 {
 	lib->processor->queue_job(lib->processor,
 			(job_t*)callback_job_create((callback_job_cb_t)update_bypass, this,
-									NULL, (callback_job_cancel_t)return_false));
+									NULL, callback_job_cancel_thread));
 	return TRUE;
 }
 
@@ -269,7 +269,7 @@
 	this->mutex->unlock(this->mutex);
 	lib->processor->queue_job(lib->processor,
 			(job_t*)callback_job_create((callback_job_cb_t)update_bypass, this,
-									NULL, (callback_job_cancel_t)return_false));
+									NULL, callback_job_cancel_thread));
 }
 
 METHOD(bypass_lan_listener_t, destroy, void,
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/eap_radius/eap_radius_accounting.c strongswan-6.0.1.new/src/libcharon/plugins/eap_radius/eap_radius_accounting.c
--- strongswan-6.0.1/src/libcharon/plugins/eap_radius/eap_radius_accounting.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/eap_radius/eap_radius_accounting.c	2025-05-22 09:00:41.961889278 +0200
@@ -706,7 +706,7 @@
 			(job_t*)callback_job_create_with_prio(
 				(callback_job_cb_t)send_interim,
 				data, (void*)destroy_interim_data,
-				(callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL), tv);
+				callback_job_cancel_thread, JOB_PRIO_CRITICAL), tv);
 	}
 }
 
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/eap_radius/eap_radius_plugin.c strongswan-6.0.1.new/src/libcharon/plugins/eap_radius/eap_radius_plugin.c
--- strongswan-6.0.1/src/libcharon/plugins/eap_radius/eap_radius_plugin.c	2025-03-02 18:04:10.000000000 +0100
+++ strongswan-6.0.1.new/src/libcharon/plugins/eap_radius/eap_radius_plugin.c	2025-05-22 09:00:41.961989186 +0200
@@ -445,7 +445,7 @@
 		lib->processor->queue_job(lib->processor,
 				(job_t*)callback_job_create_with_prio(
 						(callback_job_cb_t)delete_all_async, NULL, NULL,
-						(callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+						callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 	}
 	else if (id)
 	{
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/ha/ha_attribute.c strongswan-6.0.1.new/src/libcharon/plugins/ha/ha_attribute.c
--- strongswan-6.0.1/src/libcharon/plugins/ha/ha_attribute.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/ha/ha_attribute.c	2025-05-22 09:00:41.963430796 +0200
@@ -381,7 +381,7 @@
 			.provider = {
 				.acquire_address = _acquire_address,
 				.release_address = _release_address,
-				.create_attribute_enumerator = enumerator_create_empty,
+				.create_attribute_enumerator = (void*)enumerator_create_empty,
 			},
 			.reserve = _reserve,
 			.destroy = _destroy,
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/ha/ha_ctl.c strongswan-6.0.1.new/src/libcharon/plugins/ha/ha_ctl.c
--- strongswan-6.0.1/src/libcharon/plugins/ha/ha_ctl.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/ha/ha_ctl.c	2025-05-22 09:00:41.962067403 +0200
@@ -199,6 +199,6 @@
 
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create_with_prio((callback_job_cb_t)dispatch_fifo,
-			this, NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+			this, NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 	return &this->public;
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/ha/ha_dispatcher.c strongswan-6.0.1.new/src/libcharon/plugins/ha/ha_dispatcher.c
--- strongswan-6.0.1/src/libcharon/plugins/ha/ha_dispatcher.c	2025-03-02 18:04:10.000000000 +0100
+++ strongswan-6.0.1.new/src/libcharon/plugins/ha/ha_dispatcher.c	2025-05-22 09:00:41.962156791 +0200
@@ -1184,7 +1184,7 @@
 	);
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create_with_prio((callback_job_cb_t)dispatch, this,
-				NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+				NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 
 	return &this->public;
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/ha/ha_segments.c strongswan-6.0.1.new/src/libcharon/plugins/ha/ha_segments.c
--- strongswan-6.0.1/src/libcharon/plugins/ha/ha_segments.c	2025-03-02 18:04:10.000000000 +0100
+++ strongswan-6.0.1.new/src/libcharon/plugins/ha/ha_segments.c	2025-05-22 09:00:41.962248834 +0200
@@ -316,7 +316,7 @@
 	this->heartbeat_active = TRUE;
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create_with_prio((callback_job_cb_t)watchdog, this,
-				NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+				NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 }
 
 METHOD(ha_segments_t, handle_status, void,
@@ -404,7 +404,7 @@
 {
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create_with_prio((callback_job_cb_t)send_status,
-			this, NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+			this, NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 }
 
 /**
@@ -451,7 +451,7 @@
 	DBG1(DBG_CFG, "scheduling HA autobalance every %ds", this->autobalance);
 	lib->scheduler->schedule_job(lib->scheduler,
 		(job_t*)callback_job_create_with_prio((callback_job_cb_t)autobalance,
-			this, NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL),
+			this, NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL),
 		this->autobalance);
 }
 
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/kernel_libipsec/kernel_libipsec_esp_handler.c strongswan-6.0.1.new/src/libcharon/plugins/kernel_libipsec/kernel_libipsec_esp_handler.c
--- strongswan-6.0.1/src/libcharon/plugins/kernel_libipsec/kernel_libipsec_esp_handler.c	2023-06-08 12:35:17.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/kernel_libipsec/kernel_libipsec_esp_handler.c	2025-05-22 09:00:41.962326309 +0200
@@ -337,7 +337,7 @@
 	}
 	lib->processor->queue_job(lib->processor,
 			(job_t*)callback_job_create(send_esp, this, NULL,
-										(callback_job_cancel_t)return_false));
+										callback_job_cancel_thread));
 	return &this->public;
 }
 
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/kernel_libipsec/kernel_libipsec_router.c strongswan-6.0.1.new/src/libcharon/plugins/kernel_libipsec/kernel_libipsec_router.c
--- strongswan-6.0.1/src/libcharon/plugins/kernel_libipsec/kernel_libipsec_router.c	2023-06-08 12:35:17.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/kernel_libipsec/kernel_libipsec_router.c	2025-05-22 09:00:41.962399307 +0200
@@ -364,7 +364,7 @@
 	charon->receiver->add_esp_cb(charon->receiver, receiver_esp_cb, NULL);
 	lib->processor->queue_job(lib->processor,
 			(job_t*)callback_job_create((callback_job_cb_t)handle_plain, this,
-									NULL, (callback_job_cancel_t)return_false));
+										NULL, callback_job_cancel_thread));
 
 	router = &this->public;
 	return &this->public;
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/smp/smp.c strongswan-6.0.1.new/src/libcharon/plugins/smp/smp.c
--- strongswan-6.0.1/src/libcharon/plugins/smp/smp.c	2024-03-19 11:25:55.000000000 +0100
+++ strongswan-6.0.1.new/src/libcharon/plugins/smp/smp.c	2025-05-22 09:00:41.962472635 +0200
@@ -710,7 +710,7 @@
 	fdp = malloc_thing(int);
 	*fdp = fd;
 	job = callback_job_create((callback_job_cb_t)process, fdp, free,
-							  (callback_job_cancel_t)return_false);
+							  callback_job_cancel_thread);
 	lib->processor->queue_job(lib->processor, (job_t*)job);
 
 	return JOB_REQUEUE_DIRECT;
@@ -800,7 +800,7 @@
 
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create_with_prio((callback_job_cb_t)dispatch, this,
-				NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+				NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 
 	return &this->public.plugin;
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/tnc_pdp/tnc_pdp_connections.c strongswan-6.0.1.new/src/libcharon/plugins/tnc_pdp/tnc_pdp_connections.c
--- strongswan-6.0.1/src/libcharon/plugins/tnc_pdp/tnc_pdp_connections.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/tnc_pdp/tnc_pdp_connections.c	2025-05-22 09:00:41.962549539 +0200
@@ -210,7 +210,7 @@
 	/* schedule timeout checking */
 	lib->scheduler->schedule_job_ms(lib->scheduler,
 				(job_t*)callback_job_create((callback_job_cb_t)check_timeouts,
-					this, NULL, (callback_job_cancel_t)return_false),
+					this, NULL, callback_job_cancel_thread),
 				this->timeout * 1000);
 
 	dbg_nas_user(nas_id, user_name, FALSE, "created");
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/uci/uci_control.c strongswan-6.0.1.new/src/libcharon/plugins/uci/uci_control.c
--- strongswan-6.0.1/src/libcharon/plugins/uci/uci_control.c	2023-05-06 09:16:02.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/uci/uci_control.c	2025-05-22 09:00:41.962612498 +0200
@@ -296,7 +296,7 @@
 	{
 		lib->processor->queue_job(lib->processor,
 			(job_t*)callback_job_create_with_prio((callback_job_cb_t)receive,
-							this, NULL, (callback_job_cancel_t)return_false,
+							this, NULL, callback_job_cancel_thread,
 							JOB_PRIO_CRITICAL));
 	}
 	return &this->public;
diff '--color=auto' -Naur strongswan-6.0.1/src/libcharon/plugins/updown/updown_handler.c strongswan-6.0.1.new/src/libcharon/plugins/updown/updown_handler.c
--- strongswan-6.0.1/src/libcharon/plugins/updown/updown_handler.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libcharon/plugins/updown/updown_handler.c	2025-05-22 09:00:41.963485339 +0200
@@ -220,7 +220,7 @@
 			.handler = {
 				.handle = _handle,
 				.release = _release,
-				.create_attribute_enumerator = enumerator_create_empty,
+				.create_attribute_enumerator = (void*)enumerator_create_empty,
 			},
 			.create_dns_enumerator = _create_dns_enumerator,
 			.destroy = _destroy,
diff '--color=auto' -Naur strongswan-6.0.1/src/libipsec/ipsec_event_relay.c strongswan-6.0.1.new/src/libipsec/ipsec_event_relay.c
--- strongswan-6.0.1/src/libipsec/ipsec_event_relay.c	2023-06-08 12:35:17.000000000 +0200
+++ strongswan-6.0.1.new/src/libipsec/ipsec_event_relay.c	2025-05-22 09:00:41.962664215 +0200
@@ -230,7 +230,7 @@
 
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create((callback_job_cb_t)handle_events, this,
-			NULL, (callback_job_cancel_t)return_false));
+			NULL, callback_job_cancel_thread));
 
 	return &this->public;
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/libipsec/ipsec_processor.c strongswan-6.0.1.new/src/libipsec/ipsec_processor.c
--- strongswan-6.0.1/src/libipsec/ipsec_processor.c	2023-06-08 12:35:17.000000000 +0200
+++ strongswan-6.0.1.new/src/libipsec/ipsec_processor.c	2025-05-22 09:00:41.962714029 +0200
@@ -336,9 +336,9 @@
 
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create((callback_job_cb_t)process_inbound, this,
-									NULL, (callback_job_cancel_t)return_false));
+									NULL, callback_job_cancel_thread));
 	lib->processor->queue_job(lib->processor,
 		(job_t*)callback_job_create((callback_job_cb_t)process_outbound, this,
-									NULL, (callback_job_cancel_t)return_false));
+									NULL, callback_job_cancel_thread));
 	return &this->public;
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/libpttls/pt_tls_dispatcher.c strongswan-6.0.1.new/src/libpttls/pt_tls_dispatcher.c
--- strongswan-6.0.1/src/libpttls/pt_tls_dispatcher.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libpttls/pt_tls_dispatcher.c	2025-05-22 09:00:41.962773821 +0200
@@ -156,7 +156,7 @@
 		lib->processor->queue_job(lib->processor,
 				(job_t*)callback_job_create_with_prio((callback_job_cb_t)handle,
 										connection, (void*)cleanup,
-										(callback_job_cancel_t)return_false,
+										callback_job_cancel_thread,
 										JOB_PRIO_CRITICAL));
 	}
 }
diff '--color=auto' -Naur strongswan-6.0.1/src/libstrongswan/networking/streams/stream_service.c strongswan-6.0.1.new/src/libstrongswan/networking/streams/stream_service.c
--- strongswan-6.0.1/src/libstrongswan/networking/streams/stream_service.c	2025-03-10 19:13:06.000000000 +0100
+++ strongswan-6.0.1.new/src/libstrongswan/networking/streams/stream_service.c	2025-05-22 09:00:41.962834395 +0200
@@ -221,7 +221,7 @@
 
 		lib->processor->queue_job(lib->processor,
 			(job_t*)callback_job_create_with_prio((void*)accept_async, data,
-				(void*)destroy_async_data, (callback_job_cancel_t)return_false,
+				(void*)destroy_async_data, callback_job_cancel_thread,
 				this->prio));
 	}
 	else
diff '--color=auto' -Naur strongswan-6.0.1/src/libstrongswan/processing/jobs/callback_job.c strongswan-6.0.1.new/src/libstrongswan/processing/jobs/callback_job.c
--- strongswan-6.0.1/src/libstrongswan/processing/jobs/callback_job.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libstrongswan/processing/jobs/callback_job.c	2025-05-22 09:00:41.962886373 +0200
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2009-2012 Tobias Brunner
+ * Copyright (C) 2009-2025 Tobias Brunner
  * Copyright (C) 2007-2011 Martin Willi
  *
  * Copyright (C) secunet Security Networks AG
@@ -131,3 +131,11 @@
 	return callback_job_create_with_prio(cb, data, cleanup, cancel,
 										 JOB_PRIO_MEDIUM);
 }
+
+/*
+ * Described in header
+ */
+bool callback_job_cancel_thread(void *data)
+{
+	return FALSE;
+}
diff '--color=auto' -Naur strongswan-6.0.1/src/libstrongswan/processing/jobs/callback_job.h strongswan-6.0.1.new/src/libstrongswan/processing/jobs/callback_job.h
--- strongswan-6.0.1/src/libstrongswan/processing/jobs/callback_job.h	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libstrongswan/processing/jobs/callback_job.h	2025-05-22 09:00:41.962929133 +0200
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2012 Tobias Brunner
+ * Copyright (C) 2012-2025 Tobias Brunner
  * Copyright (C) 2007-2011 Martin Willi
  *
  * Copyright (C) secunet Security Networks AG
@@ -63,6 +63,15 @@
 typedef bool (*callback_job_cancel_t)(void *data);
 
 /**
+ * Default implementation of callback_job_cancel_t that simply returns FALSE
+ * to force cancellation of the thread by the processor.
+ *
+ * @param data			ignored argument
+ * @return				always returns FALSE
+ */
+bool callback_job_cancel_thread(void *data);
+
+/**
  * Class representing an callback Job.
  *
  * This is a special job which allows a simple callback function to
diff '--color=auto' -Naur strongswan-6.0.1/src/libstrongswan/processing/scheduler.c strongswan-6.0.1.new/src/libstrongswan/processing/scheduler.c
--- strongswan-6.0.1/src/libstrongswan/processing/scheduler.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libstrongswan/processing/scheduler.c	2025-05-22 09:00:41.962973987 +0200
@@ -329,7 +329,8 @@
 	this->heap = (event_t**)calloc(this->heap_size + 1, sizeof(event_t*));
 
 	job = callback_job_create_with_prio((callback_job_cb_t)schedule, this,
-										NULL, return_false, JOB_PRIO_CRITICAL);
+										NULL, callback_job_cancel_thread,
+										JOB_PRIO_CRITICAL);
 	lib->processor->queue_job(lib->processor, (job_t*)job);
 
 	return &this->public;
diff '--color=auto' -Naur strongswan-6.0.1/src/libstrongswan/processing/watcher.c strongswan-6.0.1.new/src/libstrongswan/processing/watcher.c
--- strongswan-6.0.1/src/libstrongswan/processing/watcher.c	2023-10-04 07:50:25.000000000 +0200
+++ strongswan-6.0.1.new/src/libstrongswan/processing/watcher.c	2025-05-22 09:00:41.963044620 +0200
@@ -291,7 +291,7 @@
 
 	this->jobs->insert_last(this->jobs,
 					callback_job_create_with_prio((void*)notify_async, data,
-						(void*)notify_end, (callback_job_cancel_t)return_false,
+						(void*)notify_end, callback_job_cancel_thread,
 						JOB_PRIO_CRITICAL));
 }
 
@@ -559,7 +559,7 @@
 
 		lib->processor->queue_job(lib->processor,
 			(job_t*)callback_job_create_with_prio((void*)watch, this,
-				NULL, (callback_job_cancel_t)return_false, JOB_PRIO_CRITICAL));
+				NULL, callback_job_cancel_thread, JOB_PRIO_CRITICAL));
 	}
 	else
 	{
diff '--color=auto' -Naur strongswan-6.0.1/src/libstrongswan/utils/identification.c strongswan-6.0.1.new/src/libstrongswan/utils/identification.c
--- strongswan-6.0.1/src/libstrongswan/utils/identification.c	2024-03-13 20:13:10.000000000 +0100
+++ strongswan-6.0.1.new/src/libstrongswan/utils/identification.c	2025-05-22 09:00:41.963575599 +0200
@@ -1625,7 +1625,7 @@
 			this->public.hash = _hash_binary;
 			this->public.equals = _equals_binary;
 			this->public.matches = _matches_any;
-			this->public.contains_wildcards = return_true;
+			this->public.contains_wildcards = (void*)return_true;
 			break;
 		case ID_FQDN:
 		case ID_RFC822_ADDR:
@@ -1660,13 +1660,13 @@
 			this->public.hash = _hash_binary;
 			this->public.equals = _equals_binary;
 			this->public.matches = _matches_range;
-			this->public.contains_wildcards = return_false;
+			this->public.contains_wildcards = (void*)return_false;
 			break;
 		default:
 			this->public.hash = _hash_binary;
 			this->public.equals = _equals_binary;
 			this->public.matches = _matches_binary;
-			this->public.contains_wildcards = return_false;
+			this->public.contains_wildcards = (void*)return_false;
 			break;
 	}
 	return this;
diff '--color=auto' -Naur strongswan-6.0.1/src/libtls/tests/suites/test_socket.c strongswan-6.0.1.new/src/libtls/tests/suites/test_socket.c
--- strongswan-6.0.1/src/libtls/tests/suites/test_socket.c	2023-03-27 23:00:49.000000000 +0200
+++ strongswan-6.0.1.new/src/libtls/tests/suites/test_socket.c	2025-05-22 09:00:41.963135441 +0200
@@ -587,7 +587,7 @@
 
 	lib->processor->queue_job(lib->processor, (job_t*)
 				callback_job_create((void*)serve_echo, config, NULL,
-									(callback_job_cancel_t)return_false));
+									callback_job_cancel_thread));
 }
 
 /**
From a7b5de569082398a14b7e571498e55d005903aaf Mon Sep 17 00:00:00 2001
From: Tobias Brunner <tobias@strongswan.org>
Date: Fri, 21 Feb 2025 17:18:35 +0100
Subject: [PATCH] pki: Fix signature of help() to match that of a callback in
 command_t

---
 src/pki/command.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/pki/command.c b/src/pki/command.c
index accec5fe51b..6e6bf041e18 100644
--- a/src/pki/command.c
+++ b/src/pki/command.c
@@ -265,7 +265,7 @@ int command_usage(char *error)
 /**
  * Show usage information
  */
-static int help(int c, char *v[])
+static int help()
 {
 	return command_usage(NULL);
 }
