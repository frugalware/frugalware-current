# Compiling Time: 10.63 SBU
# Maintainer: DeX77 <dex77@frugalware.org>
# Contributor: crazy <crazy@frugalware.org>


: ${USE_DEBUG="n"}
: ${USE_DEVEL="n"}

: ${USE_DRI="y"}
: ${USE_DRI_OLD="y"}
: ${USE_EGL="y"}
: ${USE_GALLIUM="y"}
: ${USE_GLES1="y"}
: ${USE_GLES2="y"}
: ${USE_GLX="y"}
: ${USE_OPENCL="y"}
: ${USE_OSMESA="y"}
: ${USE_VDPAU="y"}
: ${USE_VAAPI="y"}
: ${USE_TEXTURE_FLOAT="y"}
: ${USE_WAYLAND_EGL="y"}
: ${USE_XA="y"}
: ${USE_NINE="y"}
: ${USE_OMX="y"}
: ${USE_VULKAN="y"}

if Fuse WAYLAND_EGL; then
	USE_EGL=y
fi

## NOTE: on major bumps OR when enabling new features _comment_ out last 2 lines from FB
##       we want to see whatever we are missing things in splitting. If we go and just Frm stuff
##       we may 1) not notice new libs/files and 2) while 1 we may break things.
pkgname=mesa
pkgver=17.3.7
pkgrel=1
pkgdesc="Mesa is a 3D graphics library"
url="http://mesa3d.sourceforge.net/"
_F_archive_grepv="-rc"
up2date="Flasttar https://mesa.freedesktop.org/archive/"
depends=()
makedepends=('makedepend>=1.0.5-3' 'mako>=1.0.4-2' 'xorgproto' 'dri2proto' 'xproto' \
	'lib32-libglvnd' 'libglvnd' 'kbproto' 'xcb-proto' 'lib32-xcb-proto' 'xextproto'  \
	'damageproto' 'fixesproto' 'lib32-wayland-protocols' 'wayland-protocols' \
	'systemd>=231-6' 'llvm>=6.0.0' 'lib32-llvm>=6.0.0' 'clang>=6.0.0' 'lib32-clang>=6.0.0')
archs=('x86_64')
groups=('x11' 'xorg-core' 'xorg-libs')
Finclude cross32

if Fuse DEVEL; then
	unset source sha1sums
	pkgver=9999.g11efe42
	pkgrel=0
	_F_scm_type="git"
	_F_scm_url="git://anongit.freedesktop.org/mesa/mesa"
	_F_cd_path="mesa"
	_F_scm_want_up2date=yes
	Finclude scm
else
	## please do NOT remove nouveau patches .. they may need re-diff'ing
	## on major bumps  -- crazy --
	source=(https://mesa.freedesktop.org/archive/$pkgname-$pkgver.tar.xz \
		nouveau_locking_1.patch \
		nouveau_locking_2.patch \
		nouveau_locking_3.patch \
		0002-hardware-gloat.patch )
	signatures=("${source[0]}".sig '' '' '' '' )
fi

subpkgs=('mesa-libgl-headers')
subdescs=('Mesa OpenGL headers files.')
subdepends=('')
subrodepends=('khr-headers')
subgroups=('x11')
subarchs=("${archs[*]}")
subbackup=('')
subprovides=('libgl-headers')
subreplaces=('')
subconflicts=('')

subpkgs+=('lib32-mesa-libgl-headers')
subdescs+=('Mesa OpenGL headers files (32-Bit).')
subdepends+=('')
subrodepends+=('lib32-khr-headers')
subgroups+=('lib32-extra')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('lib32-libgl-headers')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('mesa-dri-drivers')
subdescs+=('Mesa OpenGL DRI drivers.')
subdepends+=('expat>=2.1.0-6 libdrm>=2.4.71 elfutils>=0.167-2 llvm-libs>=6.0.0 libffi>=3.2.1-2 libunwind lmsensors')
subrodepends+=('')
subgroups+=('x11')
subarchs+=("${archs[*]}")
subbackup+=('etc/drirc')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('lib32-mesa-dri-drivers')
subdescs+=('Mesa OpenGL DRI drivers. (32-Bit)')
subdepends+=("lib32-expat>=2.1.0-6 lib32-libdrm>=2.4.71 lib32-elfutils>=0.167-3 lib32-llvm-libs>=6.0.0 lib32-libffi>=3.2.1-2 lib32-libunwind lib32-lmsensors")
subrodepends+=('')
subgroups+=('lib32-extra')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('libgbm')
subdescs+=('Mesa gbm library.')
subdepends+=('libdrm>=2.4.71 wayland>=1.11.0-3')
subrodepends+=('libglapi')
subgroups+=('x11')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('lib32-libgbm')
subdescs+=('Mesa gbm library. (32-Bit)')
subdepends+=('lib32-libdrm>=2.4.71 lib32-wayland>=1.11.0-3')
subrodepends+=('lib32-libglapi')
subgroups+=('lib32-extra')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('libglapi')
subdescs+=('Mesa OpenGL API library.')
subdepends+=('glibc>=2.24-4')
subrodepends+=('')
subgroups+=('x11')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('lib32-libglapi')
subdescs+=('Mesa OpenGL API library. (32-Bit)')
subdepends+=('glibc>=2.24-4')
subrodepends+=('')
subgroups+=('lib32-extra')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('mesa-libgles')
subdescs+=('Mesa OpenGL ES1/ES2 libraries.')
subdepends+=('glibc>=2.24-4')
subrodepends+=('libglapi khr-headers')
subgroups+=('x11')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('lib32-mesa-libgles')
subdescs+=('Mesa OpenGL ES1/ES2 libraries. (32-bit)')
subdepends+=('glibc>=2.24-4')
subrodepends+=('lib32-libglapi lib32-khr-headers')
subgroups+=('lib32-extra')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('mesa-libglx')
subdescs+=('Mesa OpenGL GLX')
subdepends+=('zlib expat libxshmfence libxext libxdamage libdrm')
subrodepends+=('libglapi')
subgroups+=('x11')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('libtxc_dxtn s2tc')
subreplaces+=('libtxc_dxtn s2tc')
subconflicts+=('libtxc_dxtn s2tc')

subpkgs+=('lib32-mesa-libglx')
subdescs+=('Mesa OpenGL GLX. (32-bit)')
subdepends+=('lib32-zlib lib32-expat lib32-libxshmfence lib32-libxext lib32-libxdamage lib32-libdrm')
subrodepends+=('lib32-libglapi')
subgroups+=('lib32-extra')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('lib32-libtxc_dxtn lib32-s2tc')
subreplaces+=('lib32-libtxc_dxtn lib32-s2tc')
subconflicts+=('lib32-libtxc_dxtn lib32-s2tc')

if Fuse EGL; then
	subpkgs+=('mesa-libegl')
	subdescs+=('Mesa OpenEGL library.')
	subdepends+=('libx11>=1.6.4 libxshmfence>=1.2-3 wayland>=1.11.0-3 libdrm>=2.4.70-2')
	subrodepends+=('khr-headers libgbm')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-mesa-libegl')
	subdescs+=('Mesa OpenEGL library. (32-bit)')
	subdepends+=('lib32-libx11>=1.6.4 lib32-libxshmfence>=1.2-3 lib32-wayland>=1.11.0-3 lib32-libdrm>=2.4.70-2')
	subrodepends+=('lib32-khr-headers lib32-libgbm')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')
fi


subpkgs+=('khr-headers')
subdescs+=('Khronos generic header.')
subdepends+=('')
subrodepends+=('')
subgroups+=('x11')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')

subpkgs+=('lib32-khr-headers')
subdescs+=('Khronos generic header. (32-bit)')
subdepends+=('')
subrodepends+=('')
subgroups+=('lib32-extra')
subarchs+=("${archs[*]}")
subbackup+=('')
subprovides+=('')
subreplaces+=('')
subconflicts+=('')


if Fuse OPENCL; then
	subpkgs+=('libcl')
	subdescs+=('Mesa OpenCL library.')
	subdepends+=('expat>=2.1.0-6 libdrm>=2.4.71  elfutils>=0.167-2 llvm-libs>=6.0.0 libffi>=3.2.1-2 libclc')
	subrodepends+=('')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('mesa-libcl')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-libcl')
	subdescs+=('Mesa OpenCL library. (32-bit)')
	subdepends+=('lib32-expat>=2.1.0-6 lib32-libdrm>=2.4.71 lib32-elfutils>=0.167-3 lib32-llvm-libs>=6.0.0 lib32-libffi>=3.2.1-2 lib32-libclc')
	subrodepends+=('')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('lib32-mesa-libcl')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('mesa-pipe-drivers')
	subdescs+=('Mesa gallium pipe drivers.')
	subdepends+=("libdrm>=2.4.70 llvm-libs>=6.0.0 elfutils>=0.167-2  libffi>=3.2.1-2")
	subrodepends+=('')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('etc/drirc')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-mesa-pipe-drivers')
	subdescs+=('Mesa gallium pipe drivers. (32-bit)')
	subdepends+=("lib32-libdrm>=2.4.70 lib32-llvm-libs>=6.0.0 lib32-elfutils>=0.167-2 lib32-libffi>=3.2.1-2")
	subrodepends+=('')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')
fi

if Fuse XA; then
	subpkgs+=('libxatracker')
	subdescs+=('Mesa xatracker library')
	subdepends+=('expat>=2.1.0-6 libdrm>=2.4.71 llvm-libs>=6.0.0 libffi>=3.2.1-2 zlib>=1.2.8-8')
	subrodepends+=('')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-libxatracker')
	subdescs+=('Mesa xatracker library (32-bit)')
	subdepends+=('lib32-expat>=2.1.0-6 lib32-libdrm>=2.4.71 lib32-llvm-libs>=6.0.0 lib32-libffi>=3.2.1-2 lib32-zlib>=1.2.8-8')
	subrodepends+=('')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')
fi

if Fuse VDPAU; then
	subpkgs+=('mesa-vdpau-drivers')
	subdescs+=('Mesa VDPAU drivers.')
	subdepends+=('libx11>=1.6.3-4 expat>=2.1.0-6 libdrm>=2.4.70-2 elfutils>=0.167-2 llvm-libs>=6.0.0 libffi>=3.2.1-2')
	subrodepends+=('')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	makedepends+=('libvdpau')

	subpkgs+=('lib32-mesa-vdpau-drivers')
	subdescs+=('Mesa VDPAU drivers. (32-bit)')
	subdepends+=('lib32-libx11>=1.6.3-4 lib32-expat>=2.1.0-6 lib32-libdrm>=2.4.70-2 lib32-elfutils>=0.167-3 lib32-llvm-libs>=6.0.0 lib32-libffi>=3.2.1-2')
	subrodepends+=('')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	makedepends+=('lib32-libvdpau')
fi

if Fuse OSMESA; then
	subpkgs+=('libosmesa')
	subdescs+=('Mesa Off-screen Rendering')
	subdepends+=('libx11>=1.6.3-4 expat>=2.1.0-6 libdrm>=2.4.70-2 elfutils>=0.167-2 llvm-libs>=6.0.0 libffi>=3.2.1-2')
	subrodepends+=('')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-libosmesa')
	subdescs+=('Mesa Off-screen Rendering (32-bit)')
	subdepends+=('lib32-libx11>=1.6.3-4 lib32-expat>=2.1.0-6 lib32-libdrm>=2.4.70-2 lib32-elfutils>=0.167-2 lib32-llvm-libs>=6.0.0 lib32-libffi>=3.2.1-2')
	subrodepends+=('')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')
fi

if Fuse VAAPI; then
	subpkgs+=('libva-mesa-driver')
	subdescs+=('VAAPI mesa driver')
	subdepends+=('libx11>=1.6.3-4 expat>=2.1.0-6 libdrm>=2.4.70-2 elfutils>=0.167-2 llvm-libs>=6.0.0 libffi>=3.2.1-2')
	subrodepends+=('')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	makedepends+=('libva>=1.7.1')

	subpkgs+=('lib32-libva-mesa-driver')
	subdescs+=('VAAPI mesa driver (32-Bit)')
	subdepends+=('lib32-libx11>=1.6.3-4 lib32-expat>=2.1.0-6 lib32-libdrm>=2.4.70-2 lib32-elfutils>=0.167-3 lib32-llvm-libs>=6.0.0 lib32-libffi>=3.2.1-2')
	subrodepends+=('')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	makedepends+=('lib32-libva>=1.7.1')
fi

if Fuse WAYLAND_EGL; then
	subpkgs+=('libwayland-egl')
	subdescs+=('Mesa Wayland EGL library.')
	subdepends+=('')
	subrodepends+=('mesa-libegl')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('mesa-libwayland-egl') # hmm ?
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-libwayland-egl')
	subdescs+=('Mesa Wayland EGL library. (32-bit)')
	subdepends+=('')
	subrodepends+=('lib32-mesa-libegl')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('lib32-mesa-libwayland-egl') # hmm?
	subreplaces+=('')
	subconflicts+=('')
fi

if Fuse NINE; then
	subpkgs+=('mesa-nine')
	subdescs+=('Mesa Support for DirectX 9')
	subdepends+=('expat>=2.1.0-6 libdrm>=2.4.70 elfutils>=0.167-2 llvm-libs>=6.0.0 libffi>=3.2.1-2 libunwind lmsensors')
	subrodepends+=('')
	subgroups+=('x11')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-mesa-nine')
	subdescs+=('Mesa Support for DirectX 9 (32-bit)')
	subdepends+=('lib32-expat>=2.1.0-6 lib32-libdrm>=2.4.70 lib32-elfutils>=0.167-3 lib32-llvm-libs>=6.0.0 lib32-libffi>=3.2.1-2 lib32-libunwind lib32-lmsensors')
	subrodepends+=('')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')
fi

if Fuse OMX; then
        subpkgs+=('mesa-opemax')
        subdescs+=('Mesa Support for OpenMAX')
	subdepends+=('libomxil-bellagio>=0.9.3-3 libx11>=1.6.3-4 expat>=2.1.0-6 libdrm>=2.4.70-2 elfutils>=0.167-2 llvm-libs>=6.0.0 libffi>=3.2.1-2')
        subrodepends+=('')
        subgroups+=('x11')
        subarchs+=("${archs[*]}")
        subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-mesa-opemax')
	subdescs+=('Mesa Support for OpenMAX (32-bit)')
	subdepends+=('lib32-libomxil-bellagio>=0.9.3-3 lib32-libx11>=1.6.3-4 lib32-expat>=2.1.0-6 lib32-libdrm>=2.4.70-2 lib32-elfutils>=0.167-3 lib32-llvm-libs>=6.0.0 lib32-libffi>=3.2.1-2')
	subrodepends+=('')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')
fi

if Fuse VULKAN; then
	subpkgs+=('mesa-vulkan-intel')
	subdescs+=('Intel Mesa Support for Vulkan')
	subdepends+=('')
	subrodepends+=('vulkan-icd-loader')
	subgroups+=('x11-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-mesa-vulkan-intel')
	subdescs+=('Intel Mesa Support for Vulkan (32-bit)')
	subdepends+=('')
	subrodepends+=('lib32-vulkan-icd-loader')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('lib32-mesa-vulkan') # why these ?
	subreplaces+=('lib32-mesa-vulkan')
	subconflicts+=('lib32-mesa-vulkan')

	subpkgs+=('mesa-vulkan-amd')
	subdescs+=('AMD Mesa Support for Vulkan')
	subdepends+=('')
	subrodepends+=('vulkan-icd-loader')
	subgroups+=('x11-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')

	subpkgs+=('lib32-mesa-vulkan-amd')
	subdescs+=('AMD Mesa Support for Vulkan (32-bit)')
	subdepends+=('')
	subrodepends+=('lib32-vulkan-icd-loader')
	subgroups+=('lib32-extra')
	subarchs+=("${archs[*]}")
	subbackup+=('')
	subprovides+=('')
	subreplaces+=('')
	subconflicts+=('')
fi


Fconfopts+="	--enable-gbm \
		--enable-llvm-shared-libs \
		--enable-libglvnd \
		--enable-libunwind \
		--enable-lmsensors \
		--enable-shared-glapi"

F32confopts+="	--with-dri-driverdir=/usr/lib32/dri \
		--libdir=/usr/lib32 \
		--includedir=/usr/i686-frugalware-linux/include"

if Fuse DEBUG; then
	Fconfopts+=" --enable-debug"
else
	Fconfopts+=" --disable-debug"
fi

if Fuse DRI; then
	Fconfopts+=" --enable-dri"
	Fconfopts+=" --enable-dri3"
else
	Fconfopts+=" --disable-dri"
	Fconfopts+=" --disable-dri3"
fi

## FIXME: figure a way to disable building the libs
##        we only need the -devel files -- crazy --
if Fuse GLES1; then
	Fconfopts+=" --enable-gles1"
else
	Fconfopts+=" --disable-gles1"
fi

if Fuse GLES2; then
	Fconfopts+=" --enable-gles2"
else
	Fconfopts+=" --disable-gles2"
fi


if Fuse GLX; then
	Fconfopts+=" --enable-glx --enable-glx-tls"
else
	Fconfopts+=" --disable-glx"
fi

if Fuse OPENCL; then
	Fconfopts+=" --enable-opencl"
	Fconfopts+=" --enable-opencl-icd"
else
	Fconfopts+=" --disable-opencl"
	Fconfopts+=" --disable-opencl-icd"
fi

if Fuse OSMESA; then
	Fconfopts+=" --enable-osmesa"
else
	Fconfopts+=" --disable-osmesa"
fi

if Fuse TEXTURE_FLOAT; then
	Fconfopts+=" --enable-texture-float=yes"
else
	Fconfopts+=" --disable-texture-float"
fi

if Fuse VAAPI; then
	Fconfopts+=" --enable-va"
else
	Fconfopts+=" --disable-va"
fi

if Fuse VDPAU; then
	Fconfopts+=" --enable-vdpau"
else
	Fconfopts+=" --disable-vdpau"
fi

if Fuse XA; then
	Fconfopts+=" --enable-xa"
else
	Fconfopts+=" --disable-xa"
fi

if Fuse DRI_OLD; then
	Fconfopts+=" --with-dri-drivers=yes"
else
	Fconfopts+=" --with-dri-drivers=no"
fi

if Fuse EGL; then
	EGL_PLATFORMS="drm,x11"
	if Fuse WAYLAND_EGL; then
		EGL_PLATFORMS+=",wayland"
	fi
	Fconfopts+=" --with-platforms=$EGL_PLATFORMS"
	Fconfopts+=" --enable-egl"
else
	Fconfopts+=" --disable-egl"
fi

if Fuse GALLIUM; then
	GALLIUM_DRIVERS+="i915"
	GALLIUM_DRIVERS+=",nouveau"
	GALLIUM_DRIVERS+=",r300,r600,radeonsi"
	GALLIUM_DRIVERS+=",svga"
	GALLIUM_DRIVERS+=",swrast"
	GALLIUM_DRIVERS+=",swr"
	GALLIUM_DRIVERS+=",virgl"
	Fconfopts+=" --with-gallium-drivers=$GALLIUM_DRIVERS"
	Fconfopts+=" --enable-llvm"
	Fconfopts+=" --with-swr-archs=avx,avx2"
	if ! Fuse OSMESA; then
		Fconfopts+=" --enable-gallium-osmesa"
	fi
else
	Fconfopts+=" --disable-gallium"
fi

if Fuse NINE; then
	Fconfopts+=" --enable-nine"
fi

if Fuse OMX; then
	Fconfopts+=" --enable-omx-bellagio"
fi

if Fuse VULKAN; then
	Fconfopts+=" --with-vulkan-drivers=intel,radeon"
fi

_Fbuild_autoreconf=yes
_Fbuild_no_patch=yes

build() {

	if Fuse DEVEL; then
		Funpack_scm
	fi

	Fcd
	Fpatchall
	## we need gl to point at libglvnd so GL
	Fsed "l@GL_LIB@" "lGL" src/mesa/gl.pc.in
	## next one
	Fsed "mapi/glapi/libglapi.la" "mapi/shared-glapi/libglapi.la" src/gallium/targets/osmesa/Makefile.am

	Fsed  "LLVM_SO_NAME=.*" "LLVM_SO_NAME=LLVM" configure.ac

	# 32-Bit build
	export LLVM_CONFIG="/usr/bin/llvm-config32"
	Fcross32_common_build

	## remove , provided by libglvnd
	Frm usr/lib32/libGLES*

	Fsplit lib32-libglapi usr/lib32/libglapi.\*

	Fsplit lib32-libgbm usr/i686-frugalware-linux/include/gbm.h
	Fsplit lib32-libgbm usr/lib32/libgbm.\*
	Fsplit lib32-libgbm usr/lib32/pkgconfig/gbm.pc

	Fsplit lib32-mesa-libgl-headers usr/i686-frugalware-linux/include/GL/{gl.h,glext.h,glx.h,glxext.h,glx_mangle.h,glcorearb.h,gl_mangle.h}
	Fsplit lib32-mesa-libgl-headers usr/i686-frugalware-linux/include/GL/internal
	Fsplit lib32-mesa-libgl-headers usr/lib32/pkgconfig/gl.pc

	Fln /usr/lib32/libGLX_mesa.so.0 /usr/lib32/libGLX_indirect.so.0
	Fsplit lib32-mesa-libglx usr/lib32/libGLX_mesa*
	Fsplit lib32-mesa-libglx usr/lib32/libGLX_indirect*

	# Must be before mesa-dri-drivers
	if Fuse VAAPI; then
		Fsplit lib32-libva-mesa-driver usr/lib32/dri/nouveau_drv_video.so
		Fsplit lib32-libva-mesa-driver usr/lib32/dri/r600_drv_video.so
		Fsplit lib32-libva-mesa-driver usr/lib32/dri/radeonsi_drv_video.so
	fi


	Fsplit lib32-mesa-dri-drivers usr/lib32/dri/
	Fsplit lib32-mesa-dri-drivers usr/lib32/pkgconfig/dri.pc

	Fsplit lib32-khr-headers usr/i686-frugalware-linux/include/KHR/

        if Fuse EGL; then
                Fsplit lib32-mesa-libegl usr/i686-frugalware-linux/include/EGL/
                Fsplit lib32-mesa-libegl usr/lib32/libEGL_mesa.*
                Fsplit lib32-mesa-libegl usr/lib32/pkgconfig/egl.pc
        fi

        if Fuse GLES1 || Fuse GLES2; then
                Fsplit lib32-mesa-libgles usr/i686-frugalware-linux/include/GLES*/
                Fsplit lib32-mesa-libgles usr/lib32/pkgconfig/gles*.pc
        fi


 	if Fuse OPENCL; then
		Fsplit lib32-libcl usr/lib32/libMesaOpenCL*
		Fsplit lib32-mesa-pipe-drivers usr/lib32/gallium-pipe/
		## SWR is special it is a lib since one could
		## build 4 backends .. and so we'll have libswr$backend_name.so.*
		## which gets then loaded at runtime
		Fsplit lib32-mesa-pipe-drivers usr/lib32/libswr*
	fi

	if Fuse VULKAN; then
                Fsplit lib32-mesa-vulkan-amd usr/lib32/libvulkan_radeon*
                Fsplit lib32-mesa-vulkan-amd usr/share/vulkan/icd.d/radeon_icd*.json

                Fsplit lib32-mesa-vulkan-intel usr/i686-frugalware-linux/include/vulkan/vulkan_intel.h
                Fsplit lib32-mesa-vulkan-intel usr/lib32/libvulkan*
                Fsplit lib32-mesa-vulkan-intel usr/share/vulkan/icd.d/intel_icd*.json
	fi

	if Fuse OSMESA; then
		Fsplit lib32-libosmesa usr/i686-frugalware-linux/include/GL/osmesa.h
		Fsplit lib32-libosmesa usr/lib32/libOSMesa.*
		Fsplit lib32-libosmesa usr/lib32/pkgconfig/osmesa.pc
	else
		Frm usr/i686-frugalware-linux/include/GL/osmesa.h
	fi

	if Fuse VDPAU; then
		Fsplit lib32-mesa-vdpau-drivers usr/lib32/vdpau/
	fi

	if Fuse OMX; then
		Fsplit lib32-mesa-opemax usr/lib32/bellagio/
	fi

	if Fuse NINE; then
		Fsplit lib32-mesa-nine usr/i686-frugalware-linux/include/d3dadapter/
		Fsplit lib32-mesa-nine usr/lib32/d3d/
		Fsplit lib32-mesa-nine usr/lib32/pkgconfig/d3d.pc
	fi

	if Fuse XA; then
		Fsplit lib32-libxatracker usr/lib32/libxatracker.*
		Fsplit lib32-libxatracker usr/i686-frugalware-linux/include/xa_*.h
		Fsplit lib32-libxatracker usr/lib32/pkgconfig/xatracker.pc
	fi

	if Fuse WAYLAND_EGL; then
		Fsplit lib32-libwayland-egl usr/lib32/libwayland-egl.*
		Fsplit lib32-libwayland-egl usr/lib32/pkgconfig/wayland-egl.pc
	fi
	Fcross32_delete_empty

	# 64-Bit build
	export LLVM_CONFIG="/usr/bin/llvm-config"
	export PKG_CONFIG_PATH="/usr/lib/pkgconfig"

	Fbuild

	Fmkdir /usr/share/doc/$pkgname-$pkgver
	cp -r docs/{README.*,*.html} \
		$Fdestdir/usr/share/doc/$pkgname-$pkgver/ || Fdie

	## remove , provided by libglvnd
	Frm usr/lib/libGLES*
	Fsplit libglapi usr/lib/libglapi.*

	Fsplit libgbm usr/include/gbm.h
	Fsplit libgbm usr/lib/libgbm.*
	Fsplit libgbm usr/lib/pkgconfig/gbm.pc

	Fsplit mesa-libgl-headers usr/include/GL/{gl.h,glext.h,glx.h,glxext.h,glx_mangle.h,glcorearb.h,gl_mangle.h}
	Fsplit mesa-libgl-headers usr/include/GL/internal
	Fsplit mesa-libgl-headers usr/lib/pkgconfig/gl.pc

	Fln /usr/lib/libGLX_mesa.so.0 /usr/lib/libGLX_indirect.so.0
	Fsplit mesa-libglx usr/lib/libGLX_mesa*
	Fsplit mesa-libglx usr/lib/libGLX_indirect*

	# Must be before mesa-dri-drivers
	if Fuse VAAPI; then
		Fsplit libva-mesa-driver usr/lib/dri/nouveau_drv_video.so
		Fsplit libva-mesa-driver usr/lib/dri/r600_drv_video.so
		Fsplit libva-mesa-driver usr/lib/dri/radeonsi_drv_video.so
	fi

	Fsplit mesa-dri-drivers etc/drirc
	Fsplit mesa-dri-drivers usr/lib/dri/
	Fsplit mesa-dri-drivers usr/lib/pkgconfig/dri.pc

	Fsplit khr-headers usr/include/KHR/

        if Fuse EGL; then
                Fsplit mesa-libegl usr/include/EGL/
                Fsplit mesa-libegl usr/lib/libEGL_mesa.*
                Fsplit mesa-libegl usr/lib/pkgconfig/egl.pc
		Fsplit mesa-libegl usr/share/glvnd
        fi

        if Fuse GLES1 || Fuse GLES2; then
                Fsplit mesa-libgles usr/include/GLES*/
                Fsplit mesa-libgles usr/lib/pkgconfig/gles*.pc
        fi


	## FIXME: in setup too .. we use Fuse GALLIUM but have all these under
	##        Fuse OPENCL ..
	if Fuse OPENCL; then
		Fsplit mesa-pipe-drivers usr/lib/gallium-pipe/
		## SWR is special it is a lib since one could
		## build 4 backends .. and so we'll have libswr$backend_name.so.*
		## which gets then loaded at runtime
		Fsplit mesa-pipe-drivers usr/lib/libswr*

		Fsplit libcl usr/lib/libMesaOpenCL*
		Fsplit libcl etc/OpenCL
	fi

	if Fuse XA; then
		Fsplit libxatracker usr/lib/libxatracker.*
		Fsplit libxatracker usr/include/xa_*.h
		Fsplit libxatracker usr/lib/pkgconfig/xatracker.pc
	fi

	if Fuse OSMESA; then
		Fsplit libosmesa usr/include/GL/osmesa.h
		Fsplit libosmesa usr/lib/libOSMesa.*
		Fsplit libosmesa usr/lib/pkgconfig/osmesa.pc
	else
		Frm usr/include/GL/osmesa.h
	fi

	if Fuse VDPAU; then
		Fsplit mesa-vdpau-drivers usr/lib/vdpau/
	fi

	if Fuse WAYLAND_EGL; then
		Fsplit libwayland-egl usr/lib/libwayland-egl.*
		Fsplit libwayland-egl usr/lib/pkgconfig/wayland-egl.pc
	fi

	if Fuse NINE; then
		Fsplit mesa-nine usr/include/d3dadapter/
		Fsplit mesa-nine usr/lib/d3d/
		Fsplit mesa-nine usr/lib/pkgconfig/d3d.pc
	fi

	if Fuse OMX; then
		Fsplit mesa-opemax usr/lib/bellagio/
	fi

	if Fuse VULKAN; then
                Fsplit mesa-vulkan-amd usr/lib/libvulkan_radeon*
                Fsplit mesa-vulkan-amd usr/share/vulkan/icd.d/radeon_icd*.json

                Fsplit mesa-vulkan-intel usr/include/vulkan/vulkan_intel.h
                Fsplit mesa-vulkan-intel usr/lib/libvulkan*
                Fsplit mesa-vulkan-intel usr/share/vulkan/icd.d/intel_icd*.json

	fi

	# empty dirs
	Frm usr/{lib,include,i686-frugalware-linux,lib32,share/vulkan}/
	Frm etc
}

# optimization OK
