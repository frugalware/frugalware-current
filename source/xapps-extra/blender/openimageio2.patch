diff -Naur blender-2.79b/intern/cycles/blender/blender_python.cpp blender-2.79b-p/intern/cycles/blender/blender_python.cpp
--- blender-2.79b/intern/cycles/blender/blender_python.cpp	2018-03-23 16:22:25.000000000 +0100
+++ blender-2.79b-p/intern/cycles/blender/blender_python.cpp	2019-03-29 15:01:42.508566589 +0100
@@ -493,7 +493,7 @@
 				socket_type = "NodeSocketString";
 				data_type = BL::NodeSocket::type_STRING;
 				if(param->validdefault)
-					default_string = param->sdefault[0];
+					default_string = param->sdefault[0].string();
 			}
 			else
 				continue;
diff -Naur blender-2.79b/intern/cycles/graph/node_xml.cpp blender-2.79b-p/intern/cycles/graph/node_xml.cpp
--- blender-2.79b/intern/cycles/graph/node_xml.cpp	2018-03-23 16:22:25.000000000 +0100
+++ blender-2.79b-p/intern/cycles/graph/node_xml.cpp	2019-03-29 15:02:50.355004556 +0100
@@ -250,7 +250,7 @@
 		}
 	}
 
-	if(node->name)
+	if(!node->name.empty())
 		reader.node_map[node->name] = node;
 }
 
diff -Naur blender-2.79b/intern/cycles/render/buffers.cpp blender-2.79b-p/intern/cycles/render/buffers.cpp
--- blender-2.79b/intern/cycles/render/buffers.cpp	2018-03-23 16:22:25.000000000 +0100
+++ blender-2.79b-p/intern/cycles/render/buffers.cpp	2019-03-29 15:37:51.445338819 +0100
@@ -27,6 +27,7 @@
 #include "util/util_opengl.h"
 #include "util/util_time.h"
 #include "util/util_types.h"
+#include "util/util_unique_ptr.h"
 
 CCL_NAMESPACE_BEGIN
 
@@ -444,7 +445,7 @@
 
 	if(w == 0 || h == 0)
 		return;
-	
+
 	if(half_float)
 		return;
 
@@ -453,7 +454,7 @@
 	device->pixels_copy_from(rgba, 0, w, h);
 
 	/* write image */
-	ImageOutput *out = ImageOutput::create(filename);
+	unique_ptr<ImageOutput> out(ImageOutput::create(filename));
 	ImageSpec spec(w, h, 4, TypeDesc::UINT8);
 	int scanlinesize = w*4*sizeof(uchar);
 
@@ -468,7 +469,6 @@
 
 	out->close();
 
-	delete out;
 }
 
 device_memory& DisplayBuffer::rgba_data()
diff -Naur blender-2.79b/intern/cycles/render/image.cpp blender-2.79b-p/intern/cycles/render/image.cpp
--- blender-2.79b/intern/cycles/render/image.cpp	2018-03-23 16:22:25.000000000 +0100
+++ blender-2.79b-p/intern/cycles/render/image.cpp	2019-03-29 15:15:53.365056558 +0100
@@ -23,6 +23,7 @@
 #include "util/util_path.h"
 #include "util/util_progress.h"
 #include "util/util_texture.h"
+#include "util/util_unique_ptr.h"
 
 #ifdef WITH_OSL
 #include <OSL/oslexec.h>
@@ -148,7 +149,7 @@
 		return IMAGE_DATA_TYPE_BYTE4;
 	}
 
-	ImageInput *in = ImageInput::create(filename);
+	unique_ptr<ImageInput> in(ImageInput::create(filename));
 
 	if(in) {
 		ImageSpec spec;
@@ -194,7 +195,6 @@
 			in->close();
 		}
 
-		delete in;
 	}
 
 	if(is_half) {
@@ -449,7 +449,7 @@
 }
 
 bool ImageManager::file_load_image_generic(Image *img,
-                                           ImageInput **in,
+                                           unique_ptr<ImageInput> *in,
                                            int &width,
                                            int &height,
                                            int &depth,
@@ -465,7 +465,7 @@
 		}
 
 		/* load image from file through OIIO */
-		*in = ImageInput::create(img->filename);
+		*in = unique_ptr<ImageInput>(ImageInput::create(img->filename));
 
 		if(!*in)
 			return false;
@@ -477,8 +477,6 @@
 			config.attribute("oiio:UnassociatedAlpha", 1);
 
 		if(!(*in)->open(img->filename, spec, config)) {
-			delete *in;
-			*in = NULL;
 			return false;
 		}
 
@@ -500,8 +498,6 @@
 	if(!(components >= 1 && components <= 4)) {
 		if(*in) {
 			(*in)->close();
-			delete *in;
-			*in = NULL;
 		}
 
 		return false;
@@ -519,7 +515,7 @@
                                    device_vector<DeviceType>& tex_img)
 {
 	const StorageType alpha_one = (FileFormat == TypeDesc::UINT8)? 255 : 1;
-	ImageInput *in = NULL;
+	unique_ptr<ImageInput> in = NULL;
 	int width, height, depth, components;
 	if(!file_load_image_generic(img, &in, width, height, depth, components)) {
 		return false;
@@ -575,7 +571,6 @@
 		}
 		cmyk = strcmp(in->format_name(), "jpeg") == 0 && components == 4;
 		in->close();
-		delete in;
 	}
 	else {
 		if(FileFormat == TypeDesc::FLOAT) {
diff -Naur blender-2.79b/intern/cycles/render/image.h blender-2.79b-p/intern/cycles/render/image.h
--- blender-2.79b/intern/cycles/render/image.h	2018-03-23 16:22:25.000000000 +0100
+++ blender-2.79b-p/intern/cycles/render/image.h	2019-03-29 15:17:36.695725341 +0100
@@ -23,6 +23,7 @@
 #include "util/util_image.h"
 #include "util/util_string.h"
 #include "util/util_thread.h"
+#include "util/util_unique_ptr.h"
 #include "util/util_vector.h"
 
 CCL_NAMESPACE_BEGIN
@@ -133,7 +134,7 @@
 	bool pack_images;
 
 	bool file_load_image_generic(Image *img,
-	                             ImageInput **in,
+	                             unique_ptr<ImageInput> *in,
 	                             int &width,
 	                             int &height,
 	                             int &depth,
diff -Naur blender-2.79b/intern/cycles/util/util_unique_ptr.h blender-2.79b-p/intern/cycles/util/util_unique_ptr.h
--- blender-2.79b/intern/cycles/util/util_unique_ptr.h	1970-01-01 01:00:00.000000000 +0100
+++ blender-2.79b-p/intern/cycles/util/util_unique_ptr.h	2019-03-29 15:19:16.059368295 +0100
@@ -0,0 +1,28 @@
+/*
+ * Copyright 2011-2013 Blender Foundation
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#ifndef __UTIL_UNIQUE_PTR_H__
+#define __UTIL_UNIQUE_PTR_H__
+
+#include <memory>
+
+CCL_NAMESPACE_BEGIN
+
+using std::unique_ptr;
+
+CCL_NAMESPACE_END
+
+#endif  /* __UTIL_UNIQUE_PTR_H__ */
diff -Naur blender-2.79b/source/blender/imbuf/intern/oiio/openimageio_api.cpp blender-2.79b-p/source/blender/imbuf/intern/oiio/openimageio_api.cpp
--- blender-2.79b/source/blender/imbuf/intern/oiio/openimageio_api.cpp	2018-02-20 10:26:29.000000000 +0100
+++ blender-2.79b-p/source/blender/imbuf/intern/oiio/openimageio_api.cpp	2019-03-29 15:31:41.143059322 +0100
@@ -35,6 +35,10 @@
 #include "utfconv.h"
 #endif
 
+#include <memory>
+#include <openimageio_api.h>
+#include <OpenImageIO/imageio.h>
+
 extern "C"
 {
 #include "MEM_guardedalloc.h"
@@ -48,12 +52,10 @@
 #include "IMB_colormanagement_intern.h"
 }
 
-#include <openimageio_api.h>
-#include <OpenImageIO/imageio.h>
-
 OIIO_NAMESPACE_USING
 
 using std::string;
+using std::unique_ptr;
 
 typedef unsigned char uchar;
 
@@ -197,7 +199,7 @@
 
 struct ImBuf *imb_load_photoshop(const char *filename, int flags, char colorspace[IM_MAX_SPACE])
 {
-	ImageInput *in = NULL;
+
 	struct ImBuf *ibuf = NULL;
 	int width, height, components;
 	bool is_float, is_alpha;
@@ -210,7 +212,7 @@
 
 	colorspace_set_default_role(colorspace, IM_MAX_SPACE, COLOR_ROLE_DEFAULT_BYTE);
 
-	in = ImageInput::create(filename);
+	unique_ptr<ImageInput> in(ImageInput::create(filename));
 	if (!in) {
 		std::cerr << __func__ << ": ImageInput::create() failed:" << std::endl
 		          << OIIO_NAMESPACE::geterror() << std::endl;
@@ -223,7 +225,6 @@
 	if (!in->open(filename, spec, config)) {
 		std::cerr << __func__ << ": ImageInput::open() failed:" << std::endl
 		          << in->geterror() << std::endl;
-		delete in;
 		return NULL;
 	}
 
@@ -249,19 +250,17 @@
 	if (!(components >= 1 && components <= 4)) {
 		if (in) {
 			in->close();
-			delete in;
 		}
 		return NULL;
 	}
 
 	if (is_float)
-		ibuf = imb_oiio_load_image_float(in, width, height, components, flags, is_alpha);
+		ibuf = imb_oiio_load_image_float(in.get(), width, height, components, flags, is_alpha);
 	else
-		ibuf = imb_oiio_load_image(in, width, height, components, flags, is_alpha);
+		ibuf = imb_oiio_load_image(in.get(), width, height, components, flags, is_alpha);
 
 	if (in) {
 		in->close();
-		delete in;
 	}
 
 	if (!ibuf)
