# Compiling Time: 26.46 SBU
# Maintainer: Marius Cirsta <mcirsta@frugalware.org>


## Clang only build for now GCC need patching and logic changes to $USE
USE_CLANG=${USE_CLANG:-"y"}
## try to use chromium stuff to build with LTO
USE_DISTRO_LTO=${USE_DISTRO_LTO:-"n"}
USE_DISTRO_FLAGS=${USE_DISTRO_FLAGS:-"y"}

pkgname=chromium-browser
pkgver=81.0.4044.138
pkgrel=2
pkgdesc='Chromium browser'
url='http://www.chromium.org/'
depends=('nss>=3.21-3' 'libxscrnsaver>=1.2.2-2' 'libpulse>=7.1-4' 'snappy>=1.1.6' 'libcups' \
	'speech-dispatcher>=0.7.1-4' 'libxtst>=1.2.2-2' 'pango' 'atk' 'libxkbcommon' 'libxml2' \
	'libatomic' 'pciutils>=3.5' 'gtk+3' 'libxslt' 'libdrm' 'icu4c>=67.1' 'json-glib' 'ffmpeg' 'opus' \
	'harfbuzz' 'libjpeg-turbo' 'fontconfig' 'libva' 'libvpx' 'libwebp')
#using the built in ones for now
#depends+=('libevent>=2.0.22-3')
makedepends=('ninja' 'yasm' 'libexif' 'gperf' 'libpthread-stubs' 'gn' \
		'x11-protos' 'krb5' 'cups' 'gtk+2' 'python-ply' 'llvm' \
		'python-markupsafe' 'beautifulsoup4' 'html5lib-python' \
		'webencodings' 'protobuf-python' 'nodejs' 'openjdk' 'bison' \
		'mesa-dri-drivers' 'clang' 'spirv-headers' 'compiler-rt')
license=('BSD')
groups=('xapps-extra')
archs=('x86_64')
_F_gnome_iconcache="y"
Finclude gnome-scriptlet
_F_archive_name="chromium"
up2date="Flasttar 'http://chromium.woolyss.com/#stable-chromium-version'"
## NOTE: *-flags-* patches need re-diffed maybe _do not drop_
##       also do not drop -fpermissive one just re-diff
## TODO: figure headless build maybe ?
source=(https://commondatastorage.googleapis.com/chromium-browser-official/chromium-${pkgver}.tar.xz \
        $pkgname.desktop \
        $pkgname.sh)

sha1sums=('b8e9d534f5e0079d0b7471996ea1eafcfc55cb10' \
          '264b8e7c4e3273263d504e041e5e4d152677922c' \
          '4c41d59b4d85a9f0443d6ca1dec456e50059dab5')

chromium_path="chromium"

provides=('chromium-dev')
replaces=('chromium-dev')
conflicts=('chromium-dev')

if Fuse $USE_CLANG; then
	# stupid compiler, clash protection = none
	options+=('noclash')
fi

if ! Fuse $USE_DISTRO_LTO; then
	options+=('nolto')
fi
options+=('osmall')
# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
# Note: These are for Frugalware use ONLY. For your own distribution, please
# get your own set of keys. Feel free to contact mcirsta@frugalware.org for
# more information.
_google_api_key='AIzaSyAyPS4UjipJS1mWQFE6i68YSPiEhVcjoO0'
_google_default_client_id='387642567090-0qid1hle2fbcmne03mut06enn9dtu7ta.apps.googleusercontent.com'
_google_default_client_secret='c9M5X8JHr4ARTvoqDU4vkRt_'

build() {
	Fcd
	Fpatchall

	export LANG=en_US.UTF-8

	local keeplibs=(

		base/third_party/cityhash
		base/third_party/double_conversion
		base/third_party/dynamic_annotations
		base/third_party/icu
		base/third_party/nspr
		base/third_party/superfasthash
		base/third_party/symbolize
		base/third_party/valgrind
		base/third_party/xdg_mime
		base/third_party/xdg_user_dirs
		buildtools/third_party/libc++
		buildtools/third_party/libc++abi
		chrome/third_party/mozilla_security_manager
		courgette/third_party
		net/third_party/mozilla_security_manager
		net/third_party/nss
		net/third_party/quic
		net/third_party/uri_template
		third_party/abseil-cpp
		third_party/angle
		third_party/angle/src/common/third_party/base
		third_party/angle/src/common/third_party/smhasher
		third_party/angle/src/common/third_party/xxhash
		third_party/angle/src/third_party/volk
		third_party/angle/src/third_party/compiler
		third_party/angle/src/third_party/libXNVCtrl
		third_party/angle/src/third_party/trace_event
		third_party/angle/third_party/glslang
		third_party/angle/third_party/spirv-headers
		third_party/angle/third_party/spirv-tools
		third_party/angle/third_party/vulkan-headers
		third_party/angle/third_party/vulkan-loader
		third_party/angle/third_party/vulkan-tools
		third_party/angle/third_party/vulkan-validation-layers
		third_party/apple_apsl
		third_party/axe-core
		third_party/blink
		third_party/boringssl
		third_party/boringssl/src/third_party/fiat
		third_party/breakpad
		third_party/breakpad/breakpad/src/third_party/curl
		third_party/brotli
		third_party/cacheinvalidation
		third_party/catapult
		third_party/catapult/common/py_vulcanize/third_party/rcssmin
		third_party/catapult/common/py_vulcanize/third_party/rjsmin
		third_party/catapult/third_party/beautifulsoup4
		third_party/catapult/third_party/html5lib-python
		third_party/catapult/third_party/polymer
		third_party/catapult/third_party/six
		third_party/catapult/tracing/third_party/d3
		third_party/catapult/tracing/third_party/gl-matrix
		third_party/catapult/tracing/third_party/jpeg-js
		third_party/catapult/tracing/third_party/jszip
		third_party/catapult/tracing/third_party/mannwhitneyu
		third_party/catapult/tracing/third_party/oboe
		third_party/catapult/tracing/third_party/pako
		third_party/ced
		third_party/cld_3
		third_party/closure_compiler
		third_party/crashpad
		third_party/crashpad/crashpad/third_party/lss
		third_party/crashpad/crashpad/third_party/zlib
		third_party/crc32c
		third_party/cros_system_api
		third_party/dav1d
		third_party/dawn
		third_party/depot_tools
		third_party/devscripts
		third_party/devtools-frontend
		third_party/devtools-frontend/src/third_party
		third_party/devtools-frontend/src/front_end/third_party/wasmparser
		third_party/devtools-frontend/src/front_end/third_party/fabricjs
		third_party/dom_distiller_js
		third_party/emoji-segmenter
		third_party/flatbuffers
		third_party/freetype
		third_party/libgifcodec
		third_party/glslang
		third_party/google_input_tools
		third_party/google_input_tools/third_party/closure_library
		third_party/google_input_tools/third_party/closure_library/third_party/closure
		third_party/googletest
		third_party/openh264
		third_party/hunspell
		third_party/iccjpeg
		third_party/inspector_protocol
		third_party/jinja2
		third_party/jsoncpp
		third_party/jstemplate
		third_party/khronos
		third_party/leveldatabase
		third_party/libXNVCtrl
		third_party/libaddressinput
		third_party/libaom
		third_party/libaom/source/libaom/third_party/vector
		third_party/libaom/source/libaom/third_party/x86inc
		third_party/libjingle
		third_party/libphonenumber
		third_party/libsecret
		third_party/libsrtp
		third_party/libsync
		third_party/libudev
		third_party/libwebm
		third_party/libxml/chromium
		third_party/libyuv
		third_party/llvm
		third_party/lss
		third_party/lzma_sdk
		third_party/markupsafe
		third_party/mesa
		third_party/metrics_proto
		third_party/modp_b64
		third_party/nasm
		third_party/node
		third_party/node/node_modules/polymer-bundler/lib/third_party/UglifyJS2
		third_party/one_euro_filter
		third_party/openscreen
		third_party/openscreen/src/third_party/tinycbor/src/src
		third_party/ots
		third_party/pdfium
		third_party/pdfium/third_party/agg23
		third_party/pdfium/third_party/base
		third_party/pdfium/third_party/bigint
		third_party/pdfium/third_party/freetype
		third_party/pdfium/third_party/lcms
		third_party/pdfium/third_party/libopenjpeg20
		third_party/pdfium/third_party/libpng16
		third_party/pdfium/third_party/libtiff
		third_party/pdfium/third_party/skia_shared
		third_party/perfetto
		third_party/pffft
		third_party/ply
		third_party/polymer
		third_party/private-join-and-compute
		third_party/protobuf
		third_party/protobuf/third_party/six
		third_party/pyjson5
		third_party/qcms
		third_party/rnnoise
		third_party/s2cellid
		third_party/simplejson
		third_party/skia
		third_party/skia/include/third_party/skcms
		third_party/skia/include/third_party/vulkan
		third_party/skia/third_party/skcms
		third_party/skia/third_party/vulkan
		third_party/smhasher
		third_party/spirv-headers
		third_party/SPIRV-Tools
		third_party/sqlite
		third_party/swiftshader
		third_party/swiftshader/third_party/llvm-7.0
		third_party/swiftshader/third_party/llvm-subzero
		third_party/swiftshader/third_party/marl
		third_party/swiftshader/third_party/subzero
		third_party/swiftshader/third_party/SPIRV-Headers/include/spirv/unified1
		third_party/unrar
		third_party/usrsctp
		third_party/vulkan
		third_party/web-animations-js
		third_party/webdriver
		third_party/webrtc
		third_party/webrtc/common_audio/third_party/fft4g
		third_party/webrtc/common_audio/third_party/spl_sqrt_floor
		third_party/webrtc/modules/third_party/fft
		third_party/webrtc/modules/third_party/g711
		third_party/webrtc/modules/third_party/g722
		third_party/webrtc/rtc_base/third_party/base64
		third_party/webrtc/rtc_base/third_party/sigslot
		third_party/widevine
		third_party/woff2
		third_party/wuffs
		third_party/zlib/google
		tools/grit/third_party/six
		url/third_party/mozilla
		v8/src/third_party/siphash
		v8/src/third_party/valgrind
		v8/src/third_party/utf8-decoder
		v8/third_party/inspector_protocol
		v8/third_party/v8
		base/third_party/libevent
		third_party/adobe
		third_party/speech-dispatcher
		third_party/usb_ids
		third_party/xdg-utils
		third_party/re2
		third_party/yasm/run_yasm.py )
	# Remove most bundled libraries. Some are still needed.

	Fexec build/linux/unbundle/remove_bundled_libraries.py "${keeplibs[@]}" --do-remove || Fdie

	## FIXME: some things missing..
	## eg: opus , libusb and some more
	gn_system_libraries="
		fontconfig
		ffmpeg
		freetype
		flac
		icu
		libdrm
		libpng
		libjpeg
		libvpx
		libwebp
		libxslt
		opus
		snappy
		yasm
		libxml
		zlib"

	Fexec build/linux/unbundle/replace_gn_files.py --system-libraries ${gn_system_libraries} || Fdie

	Fexec touch chrome/test/data/webui/i18n_process_css_test.html || Fdie

	Fexec third_party/libaddressinput/chromium/tools/update-strings.py || Fdie

	if Fuse $USE_CLANG; then
        myconf_gn+=" is_clang=true clang_base_path=\"/usr\" clang_use_chrome_plugins=false "
	else
        myconf_gn+=" is_clang=false clang_use_chrome_plugins=false"
    fi
	myconf_gn+=" use_gold=false"
	myconf_gn+=" is_debug=false"
	myconf_gn+=" enable_iterator_debugging=false"
	myconf_gn+=" enable_nacl=false"

	myconf_gn+=" enable_hangout_services_extension=false"
	myconf_gn+=" enable_widevine=true"
	## !!Do NOT change that!!
	myconf_gn+=" use_allocator=\"none\" "
	myconf_gn+=" use_kerberos=true"
	myconf_gn+=" use_pulseaudio=true"
	myconf_gn+=" fieldtrial_testing_like_official_build=true"
	myconf_gn+=" linux_use_bundled_binutils=false"
	myconf_gn+=" use_sysroot=false"
	myconf_gn+=" proprietary_codecs=true "
	myconf_gn+=" enable_mse_mpeg2ts_stream_parser=true "
	myconf_gn+=" use_gio=false "
	myconf_gn+=" use_gnome_keyring=false "
	myconf_gn+=" use_aura=true "
	myconf_gn+=" use_glib=true "
	#myconf_gn+=" use_gtk3=true "
	myconf_gn+=" use_xkbcommon=true"
	## FIXME: all that stuff isn't really working..
	myconf_gn+=" enable_remoting=true "
	myconf_gn+=" use_system_libjpeg=true "
	myconf_gn+=" use_custom_libcxx=false "
	## TODO: some BUILD.gn breaks and mixes that.. figure
	myconf_gn+=" use_system_harfbuzz=true"
	myconf_gn+=" enable_swiftshader=true "
	myconf_gn+=" is_component_build=false "
	myconf_gn+=" treat_warnings_as_errors=false "
	myconf_gn+=" ffmpeg_branding=\"Chrome\" "

	myconf_gn+=" google_api_key=\"${_google_api_key}\""
	myconf_gn+=" google_default_client_id=\"${_google_default_client_id}\""
	myconf_gn+=" google_default_client_secret=\"${_google_default_client_secret}\""

	myconf_gn+=" treat_warnings_as_errors=false"
	myconf_gn+=" fatal_linker_warnings=false"
	myconf_gn+=" target_cpu=\"x64\""
	myconf_gn+=" icu_use_data_file=false"

	myconf_gn+=" enable_vulkan=true "
	myconf_gn+=" enable_av1_decoder=true "

#	# Enable VA-API
#	#myconf_gn+=" use_vaapi=true "

	## that kills chromium shitty flags, but we may run into some issues
	if Fuse $USE_DISTRO_FLAGS; then
		myconf_gn+=" custom_toolchain=\"//build/toolchain/linux/unbundle:default\""
		myconf_gn+=" host_toolchain=\"//build/toolchain/linux/unbundle:default\""
		myconf_gn+=" v8_snapshot_toolchain=\"//build/toolchain/linux/unbundle:default\""
	fi

	if ! Fuse $USE_DISTRO_LTO; then
		if Fuse $USE_CLANG; then
			myconf_gn+=" thin_lto_enable_optimizations=true use_lld=true use_thin_lto=true"
			export LD="ld.lld"
		fi
	fi

	if Fuse $USE_CLANG; then
		CFLAGS+=" -Qunused-arguments -fPIE -pie -fPIC"
		CXXFLAGS+=" -Qunused-arguments -fPIE -pie -fPIC"
		_lto_cpus="$(getconf _NPROCESSORS_ONLN)"
		LDFLAGS+=" -Wl,--thinlto-jobs=$_lto_cpus"
		export AR="llvm-ar"
		export NM="llvm-nm"
		export RANLIB="llvm-ranlib"
		export CC=clang
		export CXX=clang++
	else
		## this need some patches to work actually, do not use is broken
		export LD="ld.bfd"
		export AR="gcc-ar"
		export NM="gcc-nm"
		export RANLIB="gcc-ranlib"
		export CC=gcc
		export CXX=g++
	fi

	## kill weird warnings
	CFLAGS+=" -Wno-unknown-warning-option"
	CXXFLAGS+=" -Wno-unknown-warning-option"

	Fexec gn gen --args="${myconf_gn}" out/Release --script-executable=/usr/bin/python || Fdie
	Fexec mkdir -p third_party/node/linux/node-linux-x64/bin || Fdie
	Fexec rm -rf third_party/node/linux/node-linux-x64/bin/node
	Fexec ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/

	Fexec ninja -vvv -C out/Release pdf chrome chrome_sandbox chromedriver clear_key_cdm || Fdie

	Fmessage "Plulling ls on out/Release.."
	Fexec ls out/Release

	Fmkdir usr/lib/${chromium_path}
	Fexerel out/Release/chrome usr/lib/${chromium_path}/chromium
	Finstallrel 4755 out/Release/chrome_sandbox usr/lib/${chromium_path}/chrome-sandbox
	Ffileschown usr/lib/${chromium_path}/chrome-sandbox root root

	Fcprel out/Release/\*.pak usr/lib/${chromium_path}/
	Fcprel out/Release/locales usr/lib/${chromium_path}/
	Fcprel out/Release/resources usr/lib/${chromium_path}/

	if [[ -d out/Release/swiftshader ]]; then
		Fcprel out/Release/swiftshader usr/lib/${chromium_path}/
	fi

	#Fcprel out/Release/icudtl.dat usr/lib/${chromium_path}/

	find $Fdestdir/usr/lib/${chromium_path}/ -name '*.d' -type f -delete
	find $Fdestdir/usr/lib/${chromium_path}/ -name '*.TOC' -type f -delete

	Finstall 644 $pkgname.desktop usr/share/applications/$pkgname.desktop

	local size size2 j
	for size in 24 48 64 128 256; do
		Finstallrel 644 "chrome/app/theme/chromium/product_logo_$size.png" \
			"usr/share/icons/hicolor/${size}x${size}/apps/$pkgname.png"
	done

	for size2 in 16 32; do
		Finstallrel 644 "chrome/app/theme/default_100_percent/chromium/product_logo_$size2.png" \
		"usr/share/icons/hicolor/${size2}x${size2}/apps/$pkgname.png"
	done

	for j in $(ls out/Release/*.bin)
	do
		Finstallrel 644 ${j} usr/lib/${chromium_path}
	done

	Finstallrel 644 out/Release/snapshot_blob.bin usr/lib/${chromium_path}
	Finstallrel 644 out/Release/chromedriver usr/lib/${chromium_path}

	if [[ -e out/Release/libclearkeycdm.so ]]; then
		Finstallrel 644 out/Release/libclearkeycdm.so usr/lib/${chromium_path}
	fi


	Fdirschmod usr/lib/${chromium_path}/locales 755
	Fexe $pkgname.sh usr/bin/$pkgname
	Fdocrel LICENSE
	Fbuild_gnome_scriptlet
}

# optimization OK
