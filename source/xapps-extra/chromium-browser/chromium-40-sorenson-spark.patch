diff -up chromium-79.0.3945.88/media/base/mime_util_internal.h.38~ chromium-79.0.3945.88/media/base/mime_util_internal.h
--- chromium-79.0.3945.88/media/base/mime_util_internal.h.38~	2019-12-23 23:06:19.769386144 +0100
+++ chromium-79.0.3945.88/media/base/mime_util_internal.h	2019-12-23 23:06:19.772386143 +0100
@@ -50,7 +50,19 @@ class MEDIA_EXPORT MimeUtil {
     MP2,
     MPEG4_SP,
     MPEG4_ASP,
-    LAST_CODEC = MPEG4_ASP
+    MSMPEG4v1,
+    MSMPEG4v2,
+    MSMPEG4v3,
+    WMV7,
+    WMV8,
+    WMV9,
+    VC1,
+    WMA,
+    VP6,
+    MPEG1,
+    MPEG2,
+    FLV1,
+    LAST_CODEC = FLV1
   };
 
   // Platform configuration structure.  Controls which codecs are supported at
diff -up chromium-79.0.3945.88/media/base/supported_types.cc.38~ chromium-79.0.3945.88/media/base/supported_types.cc
--- chromium-79.0.3945.88/media/base/supported_types.cc.38~	2019-12-23 23:06:19.769386144 +0100
+++ chromium-79.0.3945.88/media/base/supported_types.cc	2019-12-23 23:07:16.831383375 +0100
@@ -236,6 +236,15 @@ bool IsVideoCodecProprietary(VideoCodec
     case kCodecMPEG4:
     case kCodecHEVC:
     case kCodecDolbyVision:
+    case kCodecMSMPEG4V1:
+    case kCodecMSMPEG4V2:
+    case kCodecMSMPEG4V3:
+    case kCodecWMV7:
+    case kCodecWMV8:
+    case kCodecWMV9:
+    case kCodecVP6:
+    case kCodecMPEG1:
+    case kCodecSorensonSpark:
       return true;
     case kUnknownVideoCodec:
     case kCodecTheora:
@@ -277,6 +286,15 @@ bool IsDefaultSupportedVideoType(const V
     case kCodecVC1:
     case kCodecMPEG2:
     case kCodecHEVC:
+    case kCodecMSMPEG4V1:
+    case kCodecMSMPEG4V2:
+    case kCodecMSMPEG4V3:
+    case kCodecWMV7:
+    case kCodecWMV8:
+    case kCodecWMV9:
+    case kCodecVP6:
+    case kCodecMPEG1:
+    case kCodecSorensonSpark:
       return true;
 
     case kUnknownVideoCodec:
diff -up chromium-79.0.3945.88/media/base/video_codecs.cc.38~ chromium-79.0.3945.88/media/base/video_codecs.cc
--- chromium-79.0.3945.88/media/base/video_codecs.cc.38~	2019-12-16 22:50:49.000000000 +0100
+++ chromium-79.0.3945.88/media/base/video_codecs.cc	2019-12-23 23:06:19.773386143 +0100
@@ -37,6 +37,24 @@ std::string GetCodecName(VideoCodec code
       return "vp9";
     case kCodecAV1:
       return "av1";
+    case kCodecMSMPEG4V1:
+      return "msmpeg4v1";
+    case kCodecMSMPEG4V2:
+      return "msmpeg4v2";
+    case kCodecMSMPEG4V3:
+      return "msmpeg4v2";
+    case kCodecWMV7:
+      return "wmv1";
+    case kCodecWMV8:
+      return "wmv2";
+    case kCodecWMV9:
+      return "wmv3";
+    case kCodecVP6:
+      return "vp6";
+    case kCodecMPEG1:
+      return "mpeg1video";
+    case kCodecSorensonSpark:
+      return "flv1";
   }
   NOTREACHED();
   return "";
@@ -858,6 +876,28 @@ VideoCodec StringToVideoCodec(const std:
   if (ParseDolbyVisionCodecId(codec_id, &profile, &level))
     return kCodecDolbyVision;
 #endif
+  if (codec_id == "msmpeg4v1")
+    return kCodecMSMPEG4V1;
+  if (codec_id == "msmpeg4v2")
+    return kCodecMSMPEG4V2;
+  if (codec_id == "msmpeg4v2")
+    return kCodecMSMPEG4V3;
+  if (codec_id == "wmv1")
+    return kCodecWMV7;
+  if (codec_id == "wmv2")
+    return kCodecWMV8;
+  if (codec_id == "wmv3")
+    return kCodecWMV9;
+  if (codec_id == "vc1")
+    return kCodecVC1;
+  if (codec_id == "vp6")
+    return kCodecVP6;
+  if (codec_id == "mpeg1video")
+    return kCodecMPEG1;
+  if (codec_id == "mpeg2video")
+    return kCodecMPEG2;
+  if (codec_id == "flv1")
+    return kCodecSorensonSpark;
   return kUnknownVideoCodec;
 }
 
diff -up chromium-79.0.3945.88/media/base/video_codecs.h.38~ chromium-79.0.3945.88/media/base/video_codecs.h
--- chromium-79.0.3945.88/media/base/video_codecs.h.38~	2019-12-16 22:51:27.000000000 +0100
+++ chromium-79.0.3945.88/media/base/video_codecs.h	2019-12-23 23:06:19.773386143 +0100
@@ -31,12 +31,21 @@ enum VideoCodec {
   kCodecHEVC,
   kCodecDolbyVision,
   kCodecAV1,
+  kCodecMSMPEG4V1,
+  kCodecMSMPEG4V2,
+  kCodecMSMPEG4V3,
+  kCodecWMV7,
+  kCodecWMV8,
+  kCodecWMV9,
+  kCodecVP6,
+  kCodecMPEG1,
+  kCodecSorensonSpark,
   // DO NOT ADD RANDOM VIDEO CODECS!
   //
   // The only acceptable time to add a new codec is if there is production code
   // that uses said codec in the same CL.
 
-  kVideoCodecMax = kCodecAV1,  // Must equal the last "real" codec above.
+  kVideoCodecMax = kCodecSorensonSpark,  // Must equal the last "real" codec above.
 };
 
 // Video codec profiles. Keep in sync with mojo::VideoCodecProfile (see
diff -up chromium-79.0.3945.88/media/ffmpeg/ffmpeg_common.cc.38~ chromium-79.0.3945.88/media/ffmpeg/ffmpeg_common.cc
--- chromium-79.0.3945.88/media/ffmpeg/ffmpeg_common.cc.38~	2019-12-23 23:06:19.770386144 +0100
+++ chromium-79.0.3945.88/media/ffmpeg/ffmpeg_common.cc	2019-12-23 23:06:19.772386143 +0100
@@ -204,6 +204,28 @@ static VideoCodec CodecIDToVideoCodec(AV
       return kCodecVP9;
     case AV_CODEC_ID_AV1:
       return kCodecAV1;
+    case AV_CODEC_ID_MSMPEG4V1:
+      return kCodecMSMPEG4V1;
+    case AV_CODEC_ID_MSMPEG4V2:
+      return kCodecMSMPEG4V2;
+    case AV_CODEC_ID_MSMPEG4V3:
+      return kCodecMSMPEG4V3;
+    case AV_CODEC_ID_WMV1:
+      return kCodecWMV7;
+    case AV_CODEC_ID_WMV2:
+      return kCodecWMV8;
+    case AV_CODEC_ID_WMV3:
+      return kCodecWMV9;
+    case AV_CODEC_ID_VC1:
+      return kCodecVC1;
+    case AV_CODEC_ID_VP6:
+      return kCodecVP6;
+    case AV_CODEC_ID_MPEG1VIDEO:
+      return kCodecMPEG1;
+    case AV_CODEC_ID_MPEG2VIDEO:
+      return kCodecMPEG2;
+    case AV_CODEC_ID_FLV1:
+      return kCodecSorensonSpark;
     default:
       DVLOG(1) << "Unknown video CodecID: " << codec_id;
   }
@@ -228,6 +250,28 @@ AVCodecID VideoCodecToCodecID(VideoCodec
       return AV_CODEC_ID_VP9;
     case kCodecAV1:
       return AV_CODEC_ID_AV1;
+    case kCodecMSMPEG4V1:
+      return AV_CODEC_ID_MSMPEG4V1;
+    case kCodecMSMPEG4V2:
+      return AV_CODEC_ID_MSMPEG4V2;
+    case kCodecMSMPEG4V3:
+      return AV_CODEC_ID_MSMPEG4V3;
+    case kCodecWMV7:
+      return AV_CODEC_ID_WMV1;
+    case kCodecWMV8:
+      return AV_CODEC_ID_WMV2;
+    case kCodecWMV9:
+      return AV_CODEC_ID_WMV3;
+    case kCodecVC1:
+      return AV_CODEC_ID_VC1;
+    case kCodecVP6:
+      return AV_CODEC_ID_VP6;
+    case kCodecMPEG1:
+      return AV_CODEC_ID_MPEG1VIDEO;
+    case kCodecMPEG2:
+      return AV_CODEC_ID_MPEG2VIDEO;
+    case kCodecSorensonSpark:
+      return AV_CODEC_ID_FLV1;
     default:
       DVLOG(1) << "Unknown VideoCodec: " << video_codec;
   }
diff -up chromium-79.0.3945.88/media/filters/ffmpeg_video_decoder.cc.38~ chromium-79.0.3945.88/media/filters/ffmpeg_video_decoder.cc
--- chromium-79.0.3945.88/media/filters/ffmpeg_video_decoder.cc.38~	2019-12-23 23:06:19.770386144 +0100
+++ chromium-79.0.3945.88/media/filters/ffmpeg_video_decoder.cc	2019-12-23 23:06:19.773386143 +0100
@@ -46,6 +46,15 @@ static int GetFFmpegVideoDecoderThreadCo
 
     case kCodecTheora:
     case kCodecMPEG4:
+    case kCodecMSMPEG4V1:
+    case kCodecMSMPEG4V2:
+    case kCodecMSMPEG4V3:
+    case kCodecWMV7:
+    case kCodecWMV8:
+    case kCodecWMV9:
+    case kCodecVP6:
+    case kCodecMPEG1:
+    case kCodecSorensonSpark:
       // No extra threads for these codecs.
       break;
 
diff -up chromium-79.0.3945.88/media/remoting/media_remoting_rpc.proto.38~ chromium-79.0.3945.88/media/remoting/media_remoting_rpc.proto
--- chromium-79.0.3945.88/media/remoting/media_remoting_rpc.proto.38~	2019-12-23 23:06:19.770386144 +0100
+++ chromium-79.0.3945.88/media/remoting/media_remoting_rpc.proto	2019-12-23 23:06:19.773386143 +0100
@@ -158,6 +158,15 @@ message VideoDecoderConfig {
     kCodecHEVC = 8;
     kCodecDolbyVision = 9;
     kCodecAV1 = 10;
+    kCodecMSMPEG4V1 = 11;
+    kCodecMSMPEG4V2 = 12;
+    kCodecMSMPEG4V3 = 13;
+    kCodecWMV7 = 14;
+    kCodecWMV8 = 15;
+    kCodecWMV9 = 16;
+    kCodecVP6 = 17;
+    kCodecMPEG1 = 18;
+    kCodecSorensonSpark = 19;
   }
 
   // Proto version of media::VideoCodecProfile.
diff -up chromium-79.0.3945.88/media/remoting/proto_enum_utils.cc.38~ chromium-79.0.3945.88/media/remoting/proto_enum_utils.cc
--- chromium-79.0.3945.88/media/remoting/proto_enum_utils.cc.38~	2019-12-23 23:06:19.770386144 +0100
+++ chromium-79.0.3945.88/media/remoting/proto_enum_utils.cc	2019-12-23 23:06:19.773386143 +0100
@@ -235,6 +235,15 @@ base::Optional<VideoCodec> ToMediaVideoC
     CASE_RETURN_OTHER(kCodecHEVC);
     CASE_RETURN_OTHER(kCodecDolbyVision);
     CASE_RETURN_OTHER(kCodecAV1);
+    CASE_RETURN_OTHER(kCodecMSMPEG4V1);
+    CASE_RETURN_OTHER(kCodecMSMPEG4V2);
+    CASE_RETURN_OTHER(kCodecMSMPEG4V3);
+    CASE_RETURN_OTHER(kCodecWMV7);
+    CASE_RETURN_OTHER(kCodecWMV8);
+    CASE_RETURN_OTHER(kCodecWMV9);
+    CASE_RETURN_OTHER(kCodecVP6);
+    CASE_RETURN_OTHER(kCodecMPEG1);
+    CASE_RETURN_OTHER(kCodecSorensonSpark);
   }
   return base::nullopt;  // Not a 'default' to ensure compile-time checks.
 }
@@ -255,6 +264,15 @@ base::Optional<pb::VideoDecoderConfig::C
     CASE_RETURN_OTHER(kCodecHEVC);
     CASE_RETURN_OTHER(kCodecDolbyVision);
     CASE_RETURN_OTHER(kCodecAV1);
+    CASE_RETURN_OTHER(kCodecMSMPEG4V1);
+    CASE_RETURN_OTHER(kCodecMSMPEG4V2);
+    CASE_RETURN_OTHER(kCodecMSMPEG4V3);
+    CASE_RETURN_OTHER(kCodecWMV7);
+    CASE_RETURN_OTHER(kCodecWMV8);
+    CASE_RETURN_OTHER(kCodecWMV9);
+    CASE_RETURN_OTHER(kCodecVP6);
+    CASE_RETURN_OTHER(kCodecMPEG1);
+    CASE_RETURN_OTHER(kCodecSorensonSpark);
   }
   return base::nullopt;  // Not a 'default' to ensure compile-time checks.
 }
