From 13ff9f3325e4bc03e2331656acb3d1376cdf84bd Mon Sep 17 00:00:00 2001
From: Thomas Klausner <wiz@gatalith.at>
Date: Wed, 19 Jul 2023 10:04:23 +0200
Subject: [PATCH] Fix build with exiv2 0.28.

---
 src/Exif/ExifOperations.cpp                 | 18 +++++++++---------
 src/Libpfs/exif/exifdata.cpp                |  6 +++---
 src/TransplantExif/TransplantExifDialog.cpp |  2 +-
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/Exif/ExifOperations.cpp b/src/Exif/ExifOperations.cpp
index 8f6ba7398..7a78b195f 100644
--- a/src/Exif/ExifOperations.cpp
+++ b/src/Exif/ExifOperations.cpp
@@ -108,7 +108,7 @@ void copyExifData(const std::string &from, const std::string &to,
 #endif
 
     try {
-        Exiv2::Image::AutoPtr sourceImage;
+        Exiv2::Image::UniquePtr sourceImage;
         Exiv2::ExifData srcExifData;
 
         if (!from.empty()) {
@@ -128,7 +128,7 @@ void copyExifData(const std::string &from, const std::string &to,
         }
 
         // get destination exif data
-        Exiv2::Image::AutoPtr destinationImage = Exiv2::ImageFactory::open(to);
+        Exiv2::Image::UniquePtr destinationImage = Exiv2::ImageFactory::open(to);
 
         if (dontOverwrite) {
             // doesn't throw anything if it is empty
@@ -212,7 +212,7 @@ void copyExifData(const std::string &from, const std::string &to,
             destinationImage->setExifData(srcExifData);
         }
         destinationImage->writeMetadata();
-    } catch (Exiv2::AnyError &e) {
+    } catch (Exiv2::Error &e) {
 #ifndef NDEBUG
         qDebug() << e.what();
 #endif
@@ -250,7 +250,7 @@ float obtain_avg_lum(const std::string& filename)
 {
     try
     {
-        Exiv2::Image::AutoPtr image = Exiv2::ImageFactory::open(filename);
+        Exiv2::Image::UniquePtr image = Exiv2::ImageFactory::open(filename);
         image->readMetadata();
         Exiv2::ExifData &exifData = image->exifData();
         if (exifData.empty())
@@ -329,7 +329,7 @@ allowed for ev computation purposes.
             return -1;
         }
     }
-    catch (Exiv2::AnyError& e)
+    catch (Exiv2::Error& e)
     {
         return -1;
     }
@@ -338,7 +338,7 @@ allowed for ev computation purposes.
 
 float getExposureTime(const std::string &filename) {
     try {
-        Exiv2::Image::AutoPtr image = Exiv2::ImageFactory::open(filename);
+        Exiv2::Image::UniquePtr image = Exiv2::ImageFactory::open(filename);
         image->readMetadata();
         Exiv2::ExifData &exifData = image->exifData();
         if (exifData.empty()) return -1;
@@ -374,14 +374,14 @@ float getExposureTime(const std::string &filename) {
         } else {
             return -1;
         }
-    } catch (Exiv2::AnyError &e) {
+    } catch (Exiv2::Error &e) {
         return -1;
     }
 }
 
 float getAverageLuminance(const std::string &filename) {
     try {
-        Exiv2::Image::AutoPtr image = Exiv2::ImageFactory::open(filename);
+        Exiv2::Image::UniquePtr image = Exiv2::ImageFactory::open(filename);
         image->readMetadata();
         Exiv2::ExifData &exifData = image->exifData();
 
@@ -403,7 +403,7 @@ float getAverageLuminance(const std::string &filename) {
                   << std::endl;
 
         return -1.0;
-    } catch (Exiv2::AnyError &e) {
+    } catch (Exiv2::Error &e) {
         return -1.0;
     }
 }
diff --git a/src/Libpfs/exif/exifdata.cpp b/src/Libpfs/exif/exifdata.cpp
index 2237931ab..75b8109fb 100644
--- a/src/Libpfs/exif/exifdata.cpp
+++ b/src/Libpfs/exif/exifdata.cpp
@@ -57,7 +57,7 @@ void ExifData::fromFile(const std::string &filename) {
       return;
     }
     try {
-        ::Exiv2::Image::AutoPtr image = Exiv2::ImageFactory::open(filename);
+        ::Exiv2::Image::UniquePtr image = Exiv2::ImageFactory::open(filename);
         image->readMetadata();
         ::Exiv2::ExifData &exifData = image->exifData();
 
@@ -129,7 +129,7 @@ void ExifData::fromFile(const std::string &filename) {
          */
         if ((it = exifData.findKey(Exiv2::ExifKey("Exif.Image.Orientation"))) !=
             exifData.end()) {
-            long rotation = it->toLong();
+            long rotation = it->toInt64();
             switch (rotation) {
                 case 3:
                     m_orientation = 180;
@@ -142,7 +142,7 @@ void ExifData::fromFile(const std::string &filename) {
                     break;
             }
         }
-    } catch (Exiv2::AnyError &e) {
+    } catch (Exiv2::Error &e) {
         return;
     }
 }
diff --git a/src/TransplantExif/TransplantExifDialog.cpp b/src/TransplantExif/TransplantExifDialog.cpp
index ef7ac354d..01ad368c0 100644
--- a/src/TransplantExif/TransplantExifDialog.cpp
+++ b/src/TransplantExif/TransplantExifDialog.cpp
@@ -347,7 +347,7 @@ void TransplantExifDialog::transplant_requested() {
                 QFile::encodeName((*i_dest)).constData(),
                 m_Ui->checkBox_dont_overwrite->isChecked());
             m_Ui->rightlist->item(index)->setBackground(QBrush("#a0ff87"));
-        } catch (Exiv2::AnyError &e) {
+        } catch (Exiv2::Error &e) {
             add_log_message("ERROR:" + QString::fromStdString(e.what()));
             m_Ui->rightlist->item(index)->setBackground(QBrush("#ff743d"));
         }
