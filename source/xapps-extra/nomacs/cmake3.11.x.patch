diff -Naur nomacs-3.8.0/ImageLounge/3rdparty/libqpsd/CMakeLists.txt nomacs-3.8.0-p/ImageLounge/3rdparty/libqpsd/CMakeLists.txt
--- nomacs-3.8.0/ImageLounge/3rdparty/libqpsd/CMakeLists.txt	2017-11-09 10:48:54.000000000 +0100
+++ nomacs-3.8.0-p/ImageLounge/3rdparty/libqpsd/CMakeLists.txt	2018-06-14 22:47:14.405702698 +0200
@@ -22,7 +22,7 @@
 add_library(${PROJECT_NAME} SHARED ${LIBQPSD_SOURCES})
 target_link_libraries(${PROJECT_NAME} ${QT_LIBRARIES})
 
-qt5_use_modules(${PROJECT_NAME} Gui)
+target_link_libraries(${PROJECT_NAME} Qt5::Gui)
 
 set_target_properties(${PROJECT_NAME} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}/libs)
 set_target_properties(${PROJECT_NAME} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR}/libs)
diff -Naur nomacs-3.8.0/ImageLounge/3rdparty/quazip-0.7/quazip/CMakeLists.txt nomacs-3.8.0-p/ImageLounge/3rdparty/quazip-0.7/quazip/CMakeLists.txt
--- nomacs-3.8.0/ImageLounge/3rdparty/quazip-0.7/quazip/CMakeLists.txt	2017-11-09 10:48:54.000000000 +0100
+++ nomacs-3.8.0-p/ImageLounge/3rdparty/quazip-0.7/quazip/CMakeLists.txt	2018-06-14 22:48:06.263020803 +0200
@@ -10,7 +10,7 @@
 target_include_directories(quazip PRIVATE 	${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR} ${ZLIB_INCLUDE_DIRS})
 # Link against ZLIB_LIBRARIES if needed (on Windows this variable is empty)
 target_link_libraries(quazip ${QT_QTMAIN_LIBRARY} ${QT_QTCORE_LIBRARY} ${ZLIB_LIBRARIES})
-qt5_use_modules(quazip Core)
+target_link_libraries(quazip Qt5::Core)
 
 # added by stefan for nomacs
 # message(STATUS "binarydir: ${NOMACS_BUILD_DIRECTORY}")
diff -Naur nomacs-3.8.0/ImageLounge/cmake/UnixBuildTarget.cmake nomacs-3.8.0-p/ImageLounge/cmake/UnixBuildTarget.cmake
--- nomacs-3.8.0/ImageLounge/cmake/UnixBuildTarget.cmake	2017-11-09 10:48:54.000000000 +0100
+++ nomacs-3.8.0-p/ImageLounge/cmake/UnixBuildTarget.cmake	2018-06-14 22:51:17.117125831 +0200
@@ -58,8 +58,8 @@
 	${QUAZIP_DEPENDENCY}
 	${LIBQPSD_LIBRARY})
 
-qt5_use_modules(${BINARY_NAME} 		Widgets Gui Network LinguistTools PrintSupport Concurrent Svg)
-qt5_use_modules(${DLL_CORE_NAME} 	Widgets Gui Network LinguistTools PrintSupport Concurrent Svg)
+target_link_libraries(${BINARY_NAME} 	Qt5::Widgets Qt5::Gui Qt5::Network  Qt5::PrintSupport Qt5::Concurrent Qt5::Svg)
+target_link_libraries(${DLL_CORE_NAME} 	Qt5::Widgets Qt5::Gui Qt5::Network Qt5::PrintSupport Qt5::Concurrent Qt5::Svg)
 
 # core flags
 set_target_properties(${DLL_CORE_NAME} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}/libs)
