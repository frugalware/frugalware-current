--- a/src/VBox/Devices/USB/linux/USBProxyDevice-linux.cpp
+++ b/src/VBox/Devices/USB/linux/USBProxyDevice-linux.cpp
@@ -95,22 +95,10 @@
 typedef struct USBPROXYURBLNX
 {
-    /** The kernel URB data. */
-#if RT_GNUC_PREREQ(6, 0)
-    /* gcc 6.2 complains about the [] member of KUrb */
-# pragma GCC diagnostic push
-# pragma GCC diagnostic ignored "-Wpedantic"
-#endif
-    struct usbdevfs_urb             KUrb;
-#if RT_GNUC_PREREQ(6, 0)
-# pragma GCC diagnostic pop
-#endif
-    /** Space filler for the isochronous packets. */
-    struct usbdevfs_iso_packet_desc aIsocPktsDonUseTheseUseTheOnesInKUrb[8];
     /** Node to link the URB in of the existing lists. */
     RTLISTNODE                      NodeList;
     /** If we've split the VUSBURB up into multiple linux URBs, this is points to the head. */
-    struct USBPROXYURBLNX           *pSplitHead;
+    struct USBPROXYURBLNX          *pSplitHead;
     /** The next linux URB if split up. */
-    struct USBPROXYURBLNX           *pSplitNext;
+    struct USBPROXYURBLNX          *pSplitNext;
     /** Don't report these back. */
     bool                            fCanceledBySubmit;
@@ -121,4 +109,14 @@
     /** Size to transfer in remaining fragments of a split URB */
     uint32_t                        cbSplitRemaining;
+
+#if RT_GNUC_PREREQ(6, 0) /* gcc 6.2 complains about the [] member of KUrb */
+# pragma GCC diagnostic push
+# pragma GCC diagnostic ignored "-Wpedantic"
+#endif
+    /** The kernel URB data (variable size array included). */
+    struct usbdevfs_urb             KUrb;
+#if RT_GNUC_PREREQ(6, 0)
+# pragma GCC diagnostic pop
+#endif
 } USBPROXYURBLNX, *PUSBPROXYURBLNX;
 
@@ -274,6 +272,8 @@
 }
 
+
 /**
  * Unlinks the given URB from the in flight list.
+ *
  * @returns nothing.
  * @param   pDevLnx         The proxy device instance - Linux specific data.
@@ -295,6 +295,8 @@
 }
 
+
 /**
  * Allocates a linux URB request structure.
+ *
  * @returns Pointer to an active URB request.
  * @returns NULL on failure.
@@ -323,5 +325,7 @@
     {
         RTCritSectLeave(&pDevLnx->CritSect);
-        pUrbLnx = (PUSBPROXYURBLNX)RTMemAlloc(sizeof(*pUrbLnx));
+        PVUSBURB pVUrbDummy; RT_NOREF(pVUrbDummy);
+        pUrbLnx = (PUSBPROXYURBLNX)RTMemAlloc(RT_UOFFSETOF_DYN(USBPROXYURBLNX,
+                                                               KUrb.iso_frame_desc[RT_ELEMENTS(pVUrbDummy->aIsocPkts)]));
         if (!pUrbLnx)
             return NULL;
@@ -992,5 +996,6 @@
  * Clean up after a failed URB submit.
  */
-static void usbProxyLinuxCleanupFailedSubmit(PUSBPROXYDEV pProxyDev, PUSBPROXYURBLNX pUrbLnx, PUSBPROXYURBLNX pCur, PVUSBURB pUrb, bool *pfUnplugged)
+static void usbProxyLinuxCleanupFailedSubmit(PUSBPROXYDEV pProxyDev, PUSBPROXYURBLNX pUrbLnx, PUSBPROXYURBLNX pCur,
+                                             PVUSBURB pUrb, bool *pfUnplugged)
 {
     if (pUrb->enmType == VUSBXFERTYPE_MSG)
@@ -1499,5 +1504,5 @@
                 return NULL;
             }
-        pUrbLnx = (PUSBPROXYURBLNX)pKUrb;
+        pUrbLnx = RT_FROM_MEMBER(pKUrb, USBPROXYURBLNX, KUrb);
 
         /* split list: Is the entire split list done yet? */

