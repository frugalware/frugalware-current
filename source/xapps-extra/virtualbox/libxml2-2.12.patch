diff -Naur VirtualBox-7.0.12/include/iprt/cpp/xml.h VirtualBox-7.0.12.new/include/iprt/cpp/xml.h
--- VirtualBox-7.0.12/include/iprt/cpp/xml.h	2023-10-12 18:16:18.000000000 +0200
+++ VirtualBox-7.0.12.new/include/iprt/cpp/xml.h	2023-11-23 20:59:46.770402451 +0100
@@ -65,7 +65,6 @@
 typedef struct _xmlParserCtxt xmlParserCtxt;
 typedef xmlParserCtxt *xmlParserCtxtPtr;
 typedef struct _xmlError xmlError;
-typedef xmlError *xmlErrorPtr;
 
 typedef struct _xmlAttr xmlAttr;
 typedef struct _xmlNode xmlNode;
@@ -113,9 +112,9 @@
 class RT_DECL_CLASS XmlError : public RuntimeError
 {
 public:
-    XmlError(xmlErrorPtr aErr);
+    XmlError(const xmlError *aErr);
 
-    static char* Format(xmlErrorPtr aErr);
+    static char* Format(const xmlError *aErr);
 };
 
 // Logical errors
diff -Naur VirtualBox-7.0.12/src/VBox/Runtime/r3/xml.cpp VirtualBox-7.0.12.new/src/VBox/Runtime/r3/xml.cpp
--- VirtualBox-7.0.12/src/VBox/Runtime/r3/xml.cpp	2023-10-12 18:29:09.000000000 +0200
+++ VirtualBox-7.0.12.new/src/VBox/Runtime/r3/xml.cpp	2023-11-23 20:50:00.738032380 +0100
@@ -131,7 +131,7 @@
     RTStrFree(msg);
 }
 
-XmlError::XmlError(xmlErrorPtr aErr)
+XmlError::XmlError(const xmlError *aErr)
 {
     if (!aErr)
         throw EInvalidArg(RT_SRC_POS);
@@ -145,7 +145,7 @@
  * Composes a single message for the given error. The caller must free the
  * returned string using RTStrFree() when no more necessary.
  */
-/* static */ char *XmlError::Format(xmlErrorPtr aErr)
+/* static */ char *XmlError::Format(const xmlError *aErr)
 {
     const char *msg = aErr->message ? aErr->message : "<none>";
     size_t msgLen = strlen(msg);
@@ -1856,7 +1856,7 @@
     va_end(args);
 }
 
-static void xmlParserBaseStructuredError(void *pCtx, xmlErrorPtr error) RT_NOTHROW_DEF
+static void xmlParserBaseStructuredError(void *pCtx, const xmlError *error) RT_NOTHROW_DEF
 {
     NOREF(pCtx);
     /* we expect that there is always a trailing NL */
