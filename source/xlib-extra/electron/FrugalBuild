# Compiling Time: 0.01 SBU
# Maintainer: DeX77 <dex77@frugalware.org>

_chromiumver=61.0.3163.100
_nodever=8.9.3
pkgname=electron
pkgver=2.0.16
pkgrel=1
pkgdesc='Build cross platform desktop apps with web technologies'
archs=('x86_64')
groups=('xlib-extra')
url='https://electronjs.org/'
license=('MIT' 'custom')
depends=('gtk+3' 'libxscrnsaver' 'nss' 'ffmpeg' 'libxslt' 'snappy' 'libatomic' 'c-ares')
makedepends=('clang' 'git' 'gperf' 'jsoncpp' 'libnotify' 'llvm' 'ninja' 'nodejs' \
	'pciutils' 'python' 'wget' 'yasm' 'libatomic' 'libwebp' 'libevent' \
	'ca-certificates' 'cups' 'x11-protos' 'libxscrnsaver' 'libkrb5')
_F_github_tag_v=yes
_F_scm_type=git
_F_scm_url="https://github.com/electron/electron.git"
_F_scm_tag="v${pkgver}"
_F_scm_git_cloneopts=" --recurse-submodules"
Finclude scm github
source=("https://commondatastorage.googleapis.com/chromium-browser-official/chromium-${_chromiumver}.tar.xz"
	'breakpad-glibc2.26.patch'
        'electron.desktop'
        'default_app-icon.patch'
        'dont-bootstrap-libchromiumcontent.patch'
        'dont-update-submodules.patch'
        'dont-use-sysroot.patch'
        'no-whole-archive.patch'
        'use-system-libraries-in-node.patch'
        'use-system-ffmpeg.patch'
        'gyp-no-rpath.patch'
        'libchromiumcontent-fix-v8-patches.patch'
        'libchromiumcontent-settings.patch'
        'libchromiumcontent-sort-filenames.patch'
        'libchromiumcontent-static-library-only.patch'
        'libchromiumcontent-use-system-tools.patch'
        'chromium-atk-r1.patch'
        'chromium-gn-bootstrap-r14.patch'
        'chromium-include-functional.patch'
        'chromium-use-system-ffmpeg.patch'
        'chromium-use-system-minizip.patch'
        'chromium-use-system-re2.patch'
	'allow-root-build.patch')
sha1sums=('1f79366ab95100349755e6f81769e913b47b7eb4' \
          '8ee22299a37328173d005225399be00f4bd1417b' \
          '10b2dd0747bd1fc1c6a8f988d589e7fee8b6a9a0' \
          'e4a588f31481454875ef28f53915d8150ac79af1' \
          '7418f1416093d0a7d3650f57254d8584d3ea9b5f' \
          'cf263a966ae47a05f49cbfb6f7bdfba6ad1abefb' \
          '140e738cb4c79d573b303a8f957ba4afec7fa7c1' \
          'c3ac460c9feb7b9ce053c2d253b6105dcff93169' \
          '2195f79c704a4336251fedff437a20001606e8fc' \
          'fc91c965b3d6324432c05cca14e7d722f18877b2' \
          '8b4a08611372098f77ba58beda9a72bcdc5ad995' \
          'c864c340253619470e4cf9f0a36e13dd56a2828f' \
          'c20824193d33cffe62cfdd8830cd881e02f6873f' \
          '3d4f239695bfd29adcf4638e2749e1ab4a62edad' \
          'ce11a67fc60f5e25f84c59b598f2c25b2546fa8f' \
          'a3db2a86f80eeed28aa025694a95e1620f1e8c09' \
          '94c1eaeb2265ab4c55542ebf528f266481e21cc0' \
          'e2e1f8641e922f59f57f9f81777725d061810468' \
          '2f76031e4b5348116be434b74edc1a838de49364' \
          '1dd8497b44b50ca6f3b24b726fb1912436501088' \
          '3c25b7d45e05ac3894b57498dab7376b5e9a91d8' \
          'e6b1924f37458e3574ed24a248c5d630491d64bc' \
          '69f402d716d85f076a66cb8ed000e6c05e73796e')

_system_libs=( 'flac'
                'libdrm'
                'libpng'
                'libjpeg'
                'libxslt'
                'snappy'
                'yasm'
                'libxml'
                'zlib')

build() {
	export LC_ALL=en_US.UTF-8
	Funpack_scm

	Fcd
	Fpatch default_app-icon.patch  # Icon from .desktop file
	Fpatch use-system-libraries-in-node.patch
	Fpatch use-system-ffmpeg.patch
	Fpatch dont-update-submodules.patch
	Fpatch dont-use-sysroot.patch
	Fpatch dont-bootstrap-libchromiumcontent.patch
	Fpatch no-whole-archive.patch

	# Add extra libraries for unbundling, remove unneeded libraries
	sed -e "s/'-lexpat',/'-lexpat', '<\!@(pkg-config --libs-only-l libavcodec libavformat libavutil libevent flac harfbuzz-icu jsoncpp minizip libpulse vpx libwebpdemux libwebpmux libxml-2.0 libxslt zlib libpng)', '-ljpeg', '-lsnappy', '-latomic',/" \
		-e 's/ gconf-2.0//' \
		-i brightray/brightray.gyp


	Fexec cd "${Fsrcdir}"/electron/vendor/
	Fexec rm -rf breakpad
	Fexec git clone https://github.com/electron/chromium-breakpad.git --depth=1 breakpad || Fdie
	Fexec cd "${Fsrcdir}"/electron/vendor/breakpad || Fdie
	Fpatch breakpad-glibc2.26.patch
	Fexec rm -rf src
	Fexec git clone https://chromium.googlesource.com/breakpad/breakpad/src --depth=1 || Fdie

	Fexec cd "${Fsrcdir}"/electron/vendor/
	Fexec rm -rf gyp
	Fexec git clone https://github.com/electron/gyp.git --depth=1 || Fdie
	Fexec cd gyp
	# Remove a useless $ORIGIN/lib/ rpath from the electron binary
	Fpatch gyp-no-rpath.patch

	Fexec cd "${Fsrcdir}"/electron/vendor/ || Fdie
	Fexec rm -rf libchromiumcontent || Fdie
	Fexec git clone https://github.com/electron/libchromiumcontent.git --branch "$pkgname-$pkgver"|| Fdie
	Fexec cd libchromiumcontent || Fdie
	Fpatch libchromiumcontent-fix-v8-patches.patch
	Fpatch libchromiumcontent-settings.patch
	Fpatch libchromiumcontent-sort-filenames.patch  # deterministic build
	Fpatch libchromiumcontent-use-system-tools.patch
	Fpatch libchromiumcontent-static-library-only.patch
	Fexec rm patches/third_party/ffmpeg/001-build_gn.patch || Fdie

	Fexec cd "${Fsrcdir}"/electron/vendor/ || Fdie
        Fexec rm -rf native_mate || Fdie
        Fexec git clone https://github.com/electron/native-mate.git native_mate --branch electron-2-0-x || Fdie

	Fexec cd "${Fsrcdir}"/electron/vendor/ || Fdie
        Fexec rm -rf node || Fdie
        Fexec git clone https://github.com/electron/node.git --branch electron-node-v${_nodever}|| Fdie

	Fexec cd "${Fsrcdir}"/electron/vendor/ || Fdie
        Fexec rm -rf pdf_viewer || Fdie
        Fexec git clone https://github.com/electron/pdf-viewer.git pdf_viewer --depth=1 || Fdie

	Fexec cd "${Fsrcdir}"/electron/vendor/pdf_viewer/vendor || Fdie
	Fexec rm -rf grit || Fdie
	Fexec git clone https://chromium.googlesource.com/chromium/src/tools/grit.git --depth=1 || Fdie

	Fexec cd "${Fsrcdir}/electron/vendor/libchromiumcontent"
	Fexec mv "${Fsrcdir}/chromium-${_chromiumver}" src || Fdie
	Fexec cd src || Fdie
	Fpatch chromium-atk-r1.patch
	Fpatch chromium-gn-bootstrap-r14.patch
	Fpatch chromium-include-functional.patch
	Fpatch chromium-use-system-ffmpeg.patch
	Fpatch chromium-use-system-minizip.patch

	for lib in "${_system_libs[@]}" libjpeg_turbo; do
	find -type f -path "*third_party/${lib}/*" \
		\! -path "*third_party/${lib}/chromium/*" \
		\! -path "*third_party/${lib}/google/*" \
		\! -path "*base/third_party/icu/*" \
		\! -path "*base/third_party/libevent/*" \
		\! -regex '.*\.\(gn\|gni\|isolate\|py\)' \
		-delete
	done
	Fexec python build/linux/unbundle/replace_gn_files.py --system-libraries "${_system_libs[@]}" || Fdie

	# Create sysmlink to system Node.js
	Fexec mkdir -p third_party/node/linux/node-linux-x64/bin || Fdie
	Fexec ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin || Fdie

	gn_flags=(
		'clang_base_path="/usr"'
		'clang_use_chrome_plugins=false'
		'treat_warnings_as_errors=false'
		'use_custom_libcxx=false'
		'use_sysroot=false'
		'use_gconf=false'
		'use_gnome_keyring=false'
		)
	export CC=clang
	export CXX=clang++
	Fexec python tools/gn/bootstrap/bootstrap.py --gn-gen-args "${gn_flags[*]}" || Fdie

	Fexec cd "${Fsrcdir}/electron/vendor/libchromiumcontent" || Fdie

	Fexec script/update -t x64 --skip_gclient || Fdie
	Fexec script/build -t x64 -c static_library native_mksnapshot || Fdie
	Fexec script/create-dist -c static_library -t x64 --no_zip -t x64 || Fdie

	cd "${Fsrcdir}"/electron
	Fpatch allow-root-build.patch
	export LDFLAGS="${LDFLAGS} -Wl,-z,noexecstack -L/usr/lib"
	distdir="${Fsrcdir}/electron/vendor/libchromiumcontent/dist/main"
	Fexec script/bootstrap.py --verbose \
		--clang_dir=/usr \
		--libcc_source_path="${distdir}/src" \
		--libcc_shared_library_path="${distdir}/shared_library" \
		--libcc_static_library_path="${distdir}/static_library" || Fdie

	Fexec script/build.py -c Release --ninja-path=ninja || Fdie

	Fmkdir usr/lib/electron
	_cc="${Fsrcdir}"/electron/vendor/libchromiumcontent/dist/main

	Fexec cd out/R || Fdie
	Finstallrel 644 usr/lib/electron/blink_image_resources_200_percent.pak
	Finstallrel 644 usr/lib/electron/content_resources_200_percent.pak
	Finstallrel 644 usr/lib/electron/content_shell.pak
	Finstallrel 644 usr/lib/electron/icudtl.dat
	Finstallrel 644 usr/lib/electron/natives_blob.bin
	Finstallrel 644 usr/lib/electron/pdf_viewer_resources.pak
	Finstallrel 644 usr/lib/electron/snapshot_blob.bin
	Finstallrel 644 usr/lib/electron/ui_resources_200_percent.pak
	Finstallrel 644 usr/lib/electron/views_resources_200_percent.pak
	Finstallrel 755 usr/lib/electron/electron
	Fln ../lib/electron/electron usr/bin/electron

	# namcap warning: Referenced library 'libnode.so' is an uninstalled dependency
	# Fixable by moving libnode.so to /usr/lib
	Finstallrel 644 libnode.so usr/lib/electron
	Fcprel locales usr/lib/electron/
	Fcprel resources usr/lib/electron/
	Fexec cd ../.. || Fdie

	echo -n "v${pkgver}" > "${Fdestdir}"/usr/lib/electron/version

	# Install .desktop and icon file
	Finstall 644 usr/share/applications/electron.desktop
	Finstallrel 644 default_app/icon.png \
		usr/share/pixmaps/electron.png  # hicolor has no 1024x1024

	# Install Node headers
	_headers_dest="${Fdestdir}/usr/lib/electron/node"
	install -d -m755 "${_headers_dest}"
	cd "${Fsrcdir}"/electron/vendor/node
	find src deps/http_parser deps/zlib deps/uv deps/npm \
		-name "*.gypi" \
		-exec install -D -m644 '{}' "${_headers_dest}/{}" \; \
		-or -name "*.h" \
		-exec install -D -m644 '{}' "${_headers_dest}/{}" \;
	install -m644 {common,config}.gypi "${_headers_dest}"
	cd "${_cc}"/src
	find v8 -name "*.h" \
		-exec install -D -m644 '{}' "${_headers_dest}/deps/{}" \;

}
