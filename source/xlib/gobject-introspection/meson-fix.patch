diff -Naur gobject-introspection-1.70.0/gir/meson.build gobject-introspection-1.70.0.new/gir/meson.build
--- gobject-introspection-1.70.0/gir/meson.build	2021-09-17 18:02:42.502052000 +0200
+++ gobject-introspection-1.70.0.new/gir/meson.build	2022-06-12 22:40:28.802011779 +0200
@@ -98,8 +98,8 @@
 
 if dep_type == 'pkgconfig'
   glib_command += ['--external-library', '--pkg=glib-2.0']
-  glib_libdir = get_option('gi_cross_pkgconfig_sysroot_path') + glib_dep.get_pkgconfig_variable('libdir')
-  glib_incdir = get_option('gi_cross_pkgconfig_sysroot_path') + join_paths(glib_dep.get_pkgconfig_variable('includedir'), 'glib-2.0')
+  glib_libdir = get_option('gi_cross_pkgconfig_sysroot_path') + glib_dep.get_variable(pkgconfig: 'libdir')
+  glib_incdir = get_option('gi_cross_pkgconfig_sysroot_path') + join_paths(glib_dep.get_variable(pkgconfig: 'includedir'), 'glib-2.0')
   glib_libincdir = join_paths(glib_libdir, 'glib-2.0', 'include')
   glib_files += join_paths(glib_incdir, 'gobject', 'glib-types.h')
   glib_files += join_paths(glib_libincdir, 'glibconfig.h')
@@ -133,8 +133,8 @@
   # We know exactly what headers will be installed, so just fetch that
   glib_subproject = subproject('glib')
 
-  glibproj_sourcedir = join_paths(meson.source_root(), subprojdir, 'glib')
-  glibproj_builddir = join_paths(meson.build_root(), subprojdir, 'glib')
+  glibproj_sourcedir = join_paths(meson.project_source_root(), subprojdir, 'glib')
+  glibproj_builddir = join_paths(meson.project_build_root(), subprojdir, 'glib')
 
   glib_files += join_paths(glibproj_sourcedir, 'gobject', 'glib-types.h')
 
@@ -184,13 +184,13 @@
   # XXX: We need include paths to all glib dependencies too. We assume that the
   # dependencies are only libffi and proxy-libintl, and that they are used as
   # subprojects. In the worst case we add paths to non-existent directories.
-  ffi_incdir = join_paths(meson.build_root(), subprojdir, 'libffi', 'include')
+  ffi_incdir = join_paths(meson.project_build_root(), subprojdir, 'libffi', 'include')
   glib_includes += ['-I' + ffi_incdir]
-  intl_incdir = join_paths(meson.source_root(), subprojdir, 'proxy-libintl')
+  intl_incdir = join_paths(meson.project_source_root(), subprojdir, 'proxy-libintl')
   glib_includes += ['-I' + intl_incdir]
 
-  ffi_libdir = join_paths(meson.build_root(), subprojdir, 'libffi', 'src')
-  intl_libdir = join_paths(meson.build_root(), subprojdir, 'proxy-libintl')
+  ffi_libdir = join_paths(meson.project_build_root(), subprojdir, 'libffi', 'src')
+  intl_libdir = join_paths(meson.project_build_root(), subprojdir, 'proxy-libintl')
   glib_libpaths = [
     '-L' + ffi_libdir,
     '-L' + intl_libdir,
@@ -412,7 +412,7 @@
   dep_type = giounix_dep.type_name()
   if dep_type == 'pkgconfig'
     gio_command += ['--pkg=gio-unix-2.0']
-    giounix_includedir = get_option('gi_cross_pkgconfig_sysroot_path') + join_paths(giounix_dep.get_pkgconfig_variable('includedir'), 'gio-unix-2.0')
+    giounix_includedir = get_option('gi_cross_pkgconfig_sysroot_path') + join_paths(giounix_dep.get_variable(pkgconfig: 'includedir'), 'gio-unix-2.0')
     # Get the installed gio-unix header list
     ret = run_command(python, '-c', globber.format(join_paths(giounix_includedir, 'gio', '*.h')))
     if ret.returncode() != 0
diff -Naur gobject-introspection-1.70.0/girepository/cmph/cmph.c gobject-introspection-1.70.0.new/girepository/cmph/cmph.c
--- gobject-introspection-1.70.0/girepository/cmph/cmph.c	2021-09-17 18:02:42.505052000 +0200
+++ gobject-introspection-1.70.0.new/girepository/cmph/cmph.c	2022-06-12 22:40:28.803011787 +0200
@@ -155,7 +155,7 @@
 	while(1)
 	{
 		char buf[BUFSIZ];
-		fgets(buf, BUFSIZ, fd); 
+		if (fgets(buf, BUFSIZ, fd) == NULL) break;
 		if (feof(fd)) break;
 		if (buf[strlen(buf) - 1] != '\n') continue;
 		++count;
diff -Naur gobject-introspection-1.70.0/giscanner/docmain.py gobject-introspection-1.70.0.new/giscanner/docmain.py
--- gobject-introspection-1.70.0/giscanner/docmain.py	2021-09-17 18:02:42.520052200 +0200
+++ gobject-introspection-1.70.0.new/giscanner/docmain.py	2022-06-12 22:40:28.800011763 +0200
@@ -51,6 +51,8 @@
     parser.add_argument("-s", "--write-sections-file",
                         action="store_const", dest="format", const="sections",
                         help="Backwards-compatible equivalent to -f sections")
+    parser.add_argument("--templates-dir",
+                        action="store")
 
     args = parser.parse_args(args[1:])
     if not args.output:
@@ -74,7 +76,7 @@
         with open(args.output, 'w', encoding='utf-8') as fp:
             write_sections_file(fp, sections_file)
     else:
-        writer = DocWriter(transformer, args.language, args.format)
+        writer = DocWriter(transformer, args.language, args.format, args.templates_dir)
         writer.write(args.output)
 
     return 0
diff -Naur gobject-introspection-1.70.0/giscanner/doctemplates/devdocs/meson.build gobject-introspection-1.70.0.new/giscanner/doctemplates/devdocs/meson.build
--- gobject-introspection-1.70.0/giscanner/doctemplates/devdocs/meson.build	1970-01-01 01:00:00.000000000 +0100
+++ gobject-introspection-1.70.0.new/giscanner/doctemplates/devdocs/meson.build	2022-06-12 22:40:28.801011771 +0200
@@ -0,0 +1,19 @@
+doc_templates += files([
+  'Gjs/_doc.tmpl',
+  'Gjs/_index.tmpl',
+  'Gjs/_method.tmpl',
+  'Gjs/_methods.tmpl',
+  'Gjs/_properties.tmpl',
+  'Gjs/_signals.tmpl',
+  'Gjs/_staticmethods.tmpl',
+  'Gjs/_vfuncs.tmpl',
+  'Gjs/base.tmpl',
+  'Gjs/callback.tmpl',
+  'Gjs/class.tmpl',
+  'Gjs/default.tmpl',
+  'Gjs/enum.tmpl',
+  'Gjs/function.tmpl',
+  'Gjs/interface.tmpl',
+  'Gjs/method.tmpl',
+  'Gjs/namespace.tmpl',
+])
diff -Naur gobject-introspection-1.70.0/giscanner/doctemplates/mallard/meson.build gobject-introspection-1.70.0.new/giscanner/doctemplates/mallard/meson.build
--- gobject-introspection-1.70.0/giscanner/doctemplates/mallard/meson.build	1970-01-01 01:00:00.000000000 +0100
+++ gobject-introspection-1.70.0.new/giscanner/doctemplates/mallard/meson.build	2022-06-12 22:40:28.802011779 +0200
@@ -0,0 +1,63 @@
+base_templates = files([
+  'base.tmpl',
+  'class.tmpl',
+  'namespace.tmpl',
+])
+
+c_templates = files([
+  'C/callback.tmpl',
+  'C/class.tmpl',
+  'C/constructor.tmpl',
+  'C/default.tmpl',
+  'C/enum.tmpl',
+  'C/field.tmpl',
+  'C/function.tmpl',
+  'C/interface.tmpl',
+  'C/method.tmpl',
+  'C/namespace.tmpl',
+  'C/property.tmpl',
+  'C/record.tmpl',
+  'C/signal.tmpl',
+  'C/vfunc.tmpl',
+])
+
+gjs_templates = files([
+  'Gjs/callback.tmpl',
+  'Gjs/class.tmpl',
+  'Gjs/constructor.tmpl',
+  'Gjs/default.tmpl',
+  'Gjs/enum.tmpl',
+  'Gjs/field.tmpl',
+  'Gjs/function.tmpl',
+  'Gjs/interface.tmpl',
+  'Gjs/method.tmpl',
+  'Gjs/namespace.tmpl',
+  'Gjs/property.tmpl',
+  'Gjs/record.tmpl',
+  'Gjs/signal.tmpl',
+  'Gjs/vfunc.tmpl',
+])
+
+py_templates = files([
+  'Python/callback.tmpl',
+  'Python/class.tmpl',
+  'Python/constructor.tmpl',
+  'Python/default.tmpl',
+  'Python/enum.tmpl',
+  'Python/field.tmpl',
+  'Python/function.tmpl',
+  'Python/interface.tmpl',
+  'Python/method.tmpl',
+  'Python/namespace.tmpl',
+  'Python/property.tmpl',
+  'Python/record.tmpl',
+  'Python/signal.tmpl',
+  'Python/vfunc.tmpl',
+])
+
+doc_templates += [
+  base_templates,
+  c_templates,
+  gjs_templates,
+  py_templates,
+]
diff -Naur gobject-introspection-1.70.0/giscanner/docwriter.py gobject-introspection-1.70.0.new/giscanner/docwriter.py
--- gobject-introspection-1.70.0/giscanner/docwriter.py	2021-09-17 18:02:42.522052300 +0200
+++ gobject-introspection-1.70.0.new/giscanner/docwriter.py	2022-06-12 22:40:28.801011771 +0200
@@ -1288,7 +1288,7 @@
 
 
 class DocWriter(object):
-    def __init__(self, transformer, language, output_format):
+    def __init__(self, transformer, language, output_format, templates_dir=None):
         self._transformer = transformer
 
         try:
@@ -1300,18 +1300,20 @@
         self._formatter = formatter_class(self._transformer)
         self._language = self._formatter.language
         self._output_format = output_format
+        self._templates_dir = templates_dir
 
         self._lookup = self._get_template_lookup()
 
     def _get_template_lookup(self):
-        if 'UNINSTALLED_INTROSPECTION_SRCDIR' in os.environ:
+        if self._templates_dir is not None:
+            srcdir = self._templates_dir
+        elif 'UNINSTALLED_INTROSPECTION_SRCDIR' in os.environ:
             top_srcdir = os.environ['UNINSTALLED_INTROSPECTION_SRCDIR']
-            srcdir = os.path.join(top_srcdir, 'giscanner')
+            srcdir = os.path.join(top_srcdir, 'giscanner', 'doctemplates')
         else:
-            srcdir = os.path.dirname(__file__)
+            srcdir = os.path.join(os.path.dirname(__file__), 'doctemplates')
 
-        template_dir = os.path.join(srcdir, 'doctemplates',
-                                    self._formatter.output_format)
+        template_dir = os.path.join(srcdir, self._formatter.output_format)
 
         return TemplateLookup(directories=[template_dir],
                               module_directory=tempfile.mkdtemp(),
diff -Naur gobject-introspection-1.70.0/giscanner/meson.build gobject-introspection-1.70.0.new/giscanner/meson.build
--- gobject-introspection-1.70.0/giscanner/meson.build	2021-09-17 18:02:42.526052200 +0200
+++ gobject-introspection-1.70.0.new/giscanner/meson.build	2022-06-12 22:40:28.802011779 +0200
@@ -53,17 +53,9 @@
 
 install_subdir('doctemplates', install_dir: giscannerdir)
 
-# XXX: this doesn't track the input, but there is nothing to copy many files
-# in meson.
-doc_templates = custom_target('copy-templates',
-  input : 'doctemplates',
-  output : 'doctemplates',
-  command : [
-    python, '-c',
-      'import sys, shutil;' +
-      'shutil.rmtree(sys.argv[2], ignore_errors=True);' +
-      'shutil.copytree(sys.argv[1], sys.argv[2])',
-    '@INPUT@', '@OUTPUT@'])
+doc_templates = []
+subdir('doctemplates/devdocs')
+subdir('doctemplates/mallard')
 
 flex = find_program('flex', 'win_flex')
 bison = find_program('bison', 'win_bison')
diff -Naur gobject-introspection-1.70.0/tests/meson.build gobject-introspection-1.70.0.new/tests/meson.build
--- gobject-introspection-1.70.0/tests/meson.build	2021-09-17 18:02:42.533052400 +0200
+++ gobject-introspection-1.70.0.new/tests/meson.build	2022-06-12 22:40:28.803011787 +0200
@@ -1,4 +1,4 @@
-sub_build_root = join_paths(meson.build_root(), 'subprojects')
+sub_build_root = join_paths(meson.project_build_root(), 'subprojects')
 test_env_common_path = []
 if glib_dep.type_name() == 'internal' and host_system == 'windows'
   test_env_common_path += [
@@ -13,7 +13,7 @@
 if libffi_dep.type_name() == 'internal' and host_system == 'windows'
   test_env_common_path += [join_paths(sub_build_root, 'libffi',  'src')]
 endif
-test_env_common_pypath = [meson.build_root()]
+test_env_common_pypath = [meson.project_build_root()]
 
 
 test_regress_sources = files('scanner/regress.c')
diff -Naur gobject-introspection-1.70.0/tests/scanner/meson.build gobject-introspection-1.70.0.new/tests/scanner/meson.build
--- gobject-introspection-1.70.0/tests/scanner/meson.build	2021-09-17 18:02:42.597052800 +0200
+++ gobject-introspection-1.70.0.new/tests/scanner/meson.build	2022-06-12 22:40:28.802011779 +0200
@@ -525,19 +525,26 @@
 endforeach
 
 if has_girdoctool and glib_dep.type_name() == 'pkgconfig'
+  doctool_env = environment()
+  doctool_env.set('srcdir', meson.current_source_dir())
+  doctool_env.set('builddir', meson.current_build_dir())
+
   foreach language : ['C', 'Python', 'Gjs']
     regress_docs = custom_target(
       'generate-docs-' + language,
       input: regress_gir,
-      depends: [doc_templates],
+      depend_files: doc_templates,
       build_by_default: not cairo_deps_found,
+      env: doctool_env,
       output: 'Regress-1.0-' + language,
       command: [
         python, girdoctool,
         '--add-include-path=' + join_paths(build_root, 'gir'),
         '--add-include-path=' + meson.current_build_dir(),
         '--language', language,
-        '@INPUT@', '-o', '@OUTPUT@'],
+        '--templates-dir=' + join_paths(meson.current_source_dir(), '../../giscanner/doctemplates'),
+        '@INPUT@', '-o', '@OUTPUT@',
+      ],
     )
 
     if cairo_deps_found
@@ -546,10 +553,7 @@
         python,
         args: [gi_tester, 'Regress-1.0-' + language],
         depends: [regress_docs],
-        env: [
-          'srcdir=' + meson.current_source_dir(),
-          'builddir=' + meson.current_build_dir(),
-        ],
+        env: doctool_env,
       )
     endif
   endforeach
@@ -557,9 +561,10 @@
   regress_sections = custom_target(
     'generate-docs-sections',
     input: regress_gir,
-    depends: [doc_templates],
+    depend_files: [doc_templates],
     build_by_default: not cairo_deps_found,
     output: 'Regress-1.0-sections.txt',
+    env: doctool_env,
     command: [
       python, girdoctool,
       '--add-include-path=' + join_paths(build_root, 'gir'),
@@ -574,10 +579,7 @@
       python,
       args: [gi_tester, 'Regress-1.0-sections.txt'],
       depends: [regress_sections],
-      env: [
-        'srcdir=' + meson.current_source_dir(),
-        'builddir=' + meson.current_build_dir(),
-      ],
+      env: doctool_env,
     )
   endif
 endif
