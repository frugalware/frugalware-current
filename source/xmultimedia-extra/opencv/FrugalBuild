# Compiling Time: 5.98 SBU
# Maintainer: crazy <crazy@frugalware.org>

pkgname=opencv
pkgver=4.11.0
pkgrel=7
pkgdesc="Intel(R) Open Source Computer Vision Library"
url="http://opencv.org/"
depends=('gst1-plugins-base' 'openexr>=3.3.0' 'ffmpeg>=7.0' 'hdf5' \
         'xine-lib>=1.2.8-3' 'libdc1394>=2.2.7' 'v4l-utils'  'zlib>=1.2.12' \
         'libglvnd' 'mesa-libglx' 'zlib>=1.2.12' 'libjpeg-turbo' 'libwebp>=0.6.0' 'libpng'
         'libtiff>=4.7.0' 'jasper>=2.0.10' 'gdal' 'libgphoto2' 'eigen' 'opencl-rusticl' 'tesseract-ocr' \
         'libsm' 'libxt' 'qt6-5compat>=6.8.2' 'intel-tbb' 'protobuf>=3.2.0'  'vtk')
makedepends+=('doxygen' 'eigen' 'x11-protos' 'ocl-icd' 'python3-setuptools' \
	'apache-ant' 'openjdk' 'vtk-devel' 'vtk-ffmpeg' 'vtk-java' \
	'vtk-java-ffmpeg' 'vtk-java-mpi' 'vtk-java-mysql' 'vtk-java-qt5' \
	'vtk-mysql' 'vtk-python3' 'vtk-python3-ffmpeg' 'vtk-python3-java' 'gcc-14' \
	'vtk-python3-qt5' 'vtk-python3-tcl' 'vtk-qt5' 'boost' 'libdeflate-static')
_F_github_tag=y
_F_github_grepv="openvi\|alpha"
_F_cmake_confopts+="	-DCMAKE_BUILD_TYPE=Release \
			-DCMAKE_INSTALL_PREFIX=/usr \
			-DCMAKE_SKIP_RPATH=ON \
			-DWITH_OPENMP=ON \
			-DWITH_OPENCL=ON \
			-DWITH_OPENGL=ON \
			-DWITH_VULKAN=ON \
			-DBUILD_TESTS=OFF \
			-DCPU_BASELINE_DISABLE=SSE3 \
			-DCPU_BASELINE_REQUIRE=SSE2 \
			-DOPENCV_GENERATE_PKGCONFIG=ON \
			-DOpenGL_GL_PREFERENCE=GLVND \
			-DWITH_TBB=ON \
			-DWITH_QT=ON \
			-DOPENCV_EXTRA_MODULES_PATH=${Fsrcdir}/opencv_contrib-$pkgver/modules"

Finclude github cmake
options=('static' 'noccache' 'nolto')
groups=('xmultimedia-extra')
archs=('x86_64')
#TODO: stupid same filename
source+=(https://github.com/opencv/opencv_contrib/archive/$pkgver.zip \
	fix-cuda-flags.patch \
	cmake-4.patch \
	cuda-12.9.patch \
	build-fix.patch)

sha1sums=('8aa48979e6a086a447a9acf1727a8eb9c35c2d4e' \
          '680e4b164c57efe483eb7bfe17d65234662fe0c1' \
          '0331e3eea8a1625dae7264aa5f83c1c98df4453f' \
          '16cfa1ab3018a0eaf2eeb8691efeb4919bc26622' \
          '6bb88eff5c78d8569eff87080f503a0282088d8a' \
          '7903c855e9b6c1b58e5314cc8eed6bd8abeec659')

subpkgs=("$pkgname-cuda")
subdescs=("$pkgdesc CUDA")
subdepends=("cuda-tools ${depends}")
subrodepends=("$pkgname>=$pkgver")
subgroups=('xapps-extra')
subarchs=('x86_64')
subprovides=("$pkgname")
subconflicts=("$pkgname")

subpkgs+=("$pkgname-samples")
subdescs+=("$pkgdesc Examples")
subdepends+=('')
subrodepends+=("$pkgname>=$pkgver")
subgroups+=('xapps-extra')
subarchs+=('x86_64')
subprovides+=('')
subconflicts+=('')

subpkgs+=("$pkgname-python3")
subdescs+=("Opencv python3 bindings")
subdepends+=('python3>=3.13 openblas openblas64 libgfortran python3-numpy')
subrodepends+=("$pkgname>=$pkgver")
subgroups+=('xapps-extra')
subarchs+=('x86_64')
subprovides+=('')
subconflicts+=('')

build() {
	export JAVA_HOME=/usr/lib/jvm/java-24-openjdk
	export CUDA_PATH=/opt/cuda
	export PATH="$PATH:/opt/cuda/bin:/opt/cuda/nsight_compute:/opt/cuda/nsight_systems/bin"

	Fcd
	_F_cmake_build_dir=frugalware_cuda
	CMake_build     -DBUILD_WITH_DEBUG_INFO=OFF \
			-DCUDA_NPP_LIBRARY_ROOT_DIR=/opt/cuda \
			-DWITH_CUDA=ON \
			-DWITH_CUDNN=ON \
			-DCMAKE_C_COMPILER=gcc-14 \
			-DCMAKE_CXX_COMPILER=g++-14 \
			-DCUDA_ARCH_BIN='52-real;53-real;60-real;61-real;62-real;70-real;72-real;75-real;80-real;86-real;87-real;89-real;90-real;90-virtual' \
			-DCUDA_ARCH_PTX='90-virtual'

	Frm usr/share/opencv4/samples
	Frm usr/lib/python3.*/
	Fsplit $pkgname-cuda \*

	_F_cmake_build_dir=frugalware_build
	_Fbuild_no_patch=yes
	Fexec cd $Fsrcdir
	CMake_build 	-DBUILD_EXAMPLES=ON \
			-DINSTALL_C_EXAMPLES=ON \
			-DINSTALL_PYTHON_EXAMPLES=ON

	Fln opencv4.pc /usr/lib/pkgconfig/opencv.pc
	## 32MB++
	Fsplit $pkgname-samples usr/share/opencv4/samples

	Fsplit $pkgname-python3 usr/lib/python3.*/

}
# optimization OK
