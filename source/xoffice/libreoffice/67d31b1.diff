From 67d31b194e7039065d1ff2babbeda80e3a555a70 Mon Sep 17 00:00:00 2001
From: Jan-Marek Glogowski <glogow@fbihome.de>
Date: Sat, 29 Dec 2018 00:05:35 +0000
Subject: [PATCH] tdf#122131 Qt5 draw with device independent font

Currently we use QFont::setPixelSize to set the font size. Quoting
the docs: "Using this function makes the font device dependent.
Use setPointSize() or setPointSizeF() to set the size of the font
in a device independent manner."

The docs for QScreen::logicalDotsPerInch claim that "this value
can be used to convert font point sizes to pixel sizes".

LO currently can't handle screen based LogicalFontInstances, but
we can set the QFonts size before actually drawing the glyphs.

Change-Id: Iac9a534736e5b02ce6de8971d3d029d17aee24b6
---

diff --git a/vcl/inc/qt5/Qt5Frame.hxx b/vcl/inc/qt5/Qt5Frame.hxx
index e88c1ea..c55381d 100644
--- a/vcl/inc/qt5/Qt5Frame.hxx
+++ b/vcl/inc/qt5/Qt5Frame.hxx
@@ -97,7 +97,6 @@
 
     bool isWindow() const;
     QWindow* windowHandle() const;
-    QScreen* screen() const;
     bool isMinimized() const;
     bool isMaximized() const;
 
@@ -117,6 +116,7 @@
 
     QWidget* GetQWidget() const { return m_pQWidget; }
     Qt5MainWindow* GetTopLevelWindow() const { return m_pTopLevel; }
+    QScreen* screen() const;
 
     void Damage(sal_Int32 nExtentsX, sal_Int32 nExtentsY, sal_Int32 nExtentsWidth,
                 sal_Int32 nExtentsHeight) const;
diff --git a/vcl/qt5/Qt5Graphics_Text.cxx b/vcl/qt5/Qt5Graphics_Text.cxx
index 19a05f8..942387a 100644
--- a/vcl/qt5/Qt5Graphics_Text.cxx
+++ b/vcl/qt5/Qt5Graphics_Text.cxx
@@ -32,6 +32,7 @@
 #include <QtGui/QGlyphRun>
 #include <QtGui/QFontDatabase>
 #include <QtGui/QRawFont>
+#include <QtGui/QScreen>
 #include <QtCore/QStringList>
 
 void Qt5Graphics::SetTextColor(Color nColor) { m_aTextColor = nColor; }
@@ -177,10 +178,20 @@
 
 void Qt5Graphics::DrawTextLayout(const GenericSalLayout& rLayout)
 {
-    const Qt5Font* pFont = static_cast<const Qt5Font*>(&rLayout.GetFont());
-    assert(pFont);
-    QRawFont aRawFont(QRawFont::fromFont(*pFont));
+    const Qt5Font* pQt5Font = static_cast<const Qt5Font*>(&rLayout.GetFont());
+    assert(pQt5Font);
 
+    // since we can't manage screen dependent fonts in LO, switch the size
+    // before actually using it. Since the font itself is const, we copy it.
+    QFont pFont(*pQt5Font);
+    QScreen* pScreen = m_pFrame ? m_pFrame->screen() : nullptr;
+    if (pScreen)
+    {
+        const FontSelectPattern& rFSP = pQt5Font->GetFontSelectPattern();
+        pFont.setPointSizeF(rFSP.mfExactHeight * 72.0 / pScreen->logicalDotsPerInch());
+    }
+
+    QRawFont aRawFont(QRawFont::fromFont(pFont));
     QVector<quint32> glyphIndexes;
     QVector<QPointF> positions;
 
